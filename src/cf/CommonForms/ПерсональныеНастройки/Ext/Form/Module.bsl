
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("ПараметрыОткрытия", ПараметрыОткрытия);
	
	ОсновнаяОрганизация   = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	ОсновноеПодразделение = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
	ОсновнойСклад         = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	
	ПоказыватьСчетаУчетаВДокументах = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ПоказыватьСчетаУчетаВДокументах");
	Элементы.ПоказыватьСчетаУчетаВДокументах.Видимость = СчетаУчетаВДокументах.ПравоПросмотраСчетовУчета();
	
	Элементы.НастройкаСинхронизацииСКалендаремGoogle.Видимость = СинхронизацияСКалендаремGoogle.ДоступнаНастройкаСинхронизации();
	
	ЗапрашиватьПодтверждениеПриЗавершенииПрограммы = СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы();
	ЗначениеРабочейДаты = ОбщегоНазначения.РабочаяДатаПользователя();
	
	ТекущаяОрганизация                             = ОсновнаяОрганизация;
	ТекущееПодразделение                           = ОсновноеПодразделение;
	ТекущийСклад                                   = ОсновнойСклад;
	ТекущееЗначениеПоказыватьСчетаУчетаВДокументах = ПоказыватьСчетаУчетаВДокументах;
	
	Если ЗначениеЗаполнено(ЗначениеРабочейДаты) Тогда
		ИспользоватьТекущуюДатуКомпьютера = 1;
	Иначе
		ИспользоватьТекущуюДатуКомпьютера = 0;
		ЗначениеРабочейДаты = '0001-01-01';
	КонецЕсли;
	
	ТолькоПросмотр = Не ПравоДоступа("СохранениеДанныхПользователя", Метаданные);
	
	УправлениеФормой(ЭтаФорма);
	
	// СтандартныеПодсистемы.Пользователи
	АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
	// Конец СтандартныеПодсистемы.Пользователи
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановленАктивныйЭлемент = Ложь;
	
	Если ТипЗнч(ПараметрыОткрытия) = Тип("Структура") Тогда

		АктивныйЭлемент = Неопределено;
		ПараметрыОткрытия.Свойство("АктивныйЭлемент", АктивныйЭлемент);

		Если ТипЗнч(АктивныйЭлемент) = Тип("Строка") Тогда
			ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Найти(АктивныйЭлемент);
			УстановленАктивныйЭлемент = Истина;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru='Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АвторизованныйПользовательНажатие(Элемент, СтандартнаяОбработка)
	
	ПоказатьЗначение(, АвторизованныйПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекущуюДатуКомпьютераПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
	Если ИспользоватьТекущуюДатуКомпьютера = 0 Тогда
		ЗначениеРабочейДаты = '0001-01-01';
	ИначеЕсли ИспользоватьТекущуюДатуКомпьютера = 1 Тогда
		ЗначениеРабочейДаты = ТекущаяДата();
	КонецЕсли;
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ОсновноеПодразделениеПриИзменении(Элемент)

	ПриИзмененииПодразделенияСервер();

КонецПроцедуры

&НаКлиенте
Процедура НастройкаСинхронизацииСКалендаремGoogle(Команда)
	
	ОткрытьФорму("РегистрСведений.НастройкиСинхронизацииСКалендаремGoogle.Форма.НастройкаСинхронизацииСКалендаремGoogle");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ЗаписатьДанные();
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНастройкиСервер()
	
	Настройки = Новый Структура;
	Настройки.Вставить("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы", ЗапрашиватьПодтверждениеПриЗавершенииПрограммы);
	ОбщегоНазначения.СохранитьПерсональныеНастройки(Настройки);
	
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ОсновнаяОрганизация",              ОсновнаяОрганизация);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации", ОсновноеПодразделение);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ОсновнойСклад",                    ОсновнойСклад);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ПоказыватьСчетаУчетаВДокументах",  ПоказыватьСчетаУчетаВДокументах);
	
	Если ИспользоватьТекущуюДатуКомпьютера = 0 Тогда
		ЗначениеРабочейДатыДляСохранения  = '0001-01-01';
	Иначе
		ЗначениеРабочейДатыДляСохранения  = ЗначениеРабочейДаты;
	КонецЕсли;
	ОбщегоНазначения.УстановитьРабочуюДатуПользователя(ЗначениеРабочейДатыДляСохранения);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПодразделенияСервер()

	Если НЕ ОсновноеПодразделение.Пустая() Тогда
		ОрганизацияПодразделения = БухгалтерскийУчетПереопределяемый.ОрганизацияПодразделения(ОсновноеПодразделение);
		Если ЗначениеЗаполнено(ОрганизацияПодразделения) 
			И ОрганизацияПодразделения <> ОсновнаяОрганизация Тогда
			ОсновнаяОрганизация = ОрганизацияПодразделения;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные()
	
	Настройки = Новый Структура;
	Настройки.Вставить("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы", ЗапрашиватьПодтверждениеПриЗавершенииПрограммы);
	ОбщегоНазначенияКлиент.СохранитьПерсональныеНастройки(Настройки);
	
	СохранитьНастройкиСервер();
	
	Если ТекущаяОрганизация <> ОсновнаяОрганизация Тогда
		Оповестить("ИзменениеОсновнойОрганизации", ОсновнаяОрганизация);
	КонецЕсли;
	ТекущаяОрганизация = ОсновнаяОрганизация;
	
	Если ТекущееПодразделение <> ОсновноеПодразделение Тогда
		Оповестить("ИзменениеОсновногоПодразделенияОрганизации", ОсновноеПодразделение);
	КонецЕсли;
	ТекущееПодразделение = ОсновноеПодразделение;
	
	Если ТекущийСклад <> ОсновнойСклад Тогда
		Оповестить("ИзменениеОсновногоСклада", ОсновнойСклад);
	КонецЕсли;
	ТекущийСклад = ОсновнойСклад;
	
	Если ТекущееЗначениеПоказыватьСчетаУчетаВДокументах <> ПоказыватьСчетаУчетаВДокументах Тогда
		Оповестить("ИзменениеПоказыватьСчетаУчетаВДокументах", ПоказыватьСчетаУчетаВДокументах);
	КонецЕсли;
	ТекущееЗначениеПоказыватьСчетаУчетаВДокументах = ПоказыватьСчетаУчетаВДокументах;
	
	Модифицированность = Ложь;
	
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ЗначениеРабочейДаты.Доступность  = Форма.ИспользоватьТекущуюДатуКомпьютера = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
