
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПриСозданииНаСервереСписокДокументов(Список);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	
	ОтправкаПочтовыхСообщений.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Отбор.Свойство("ДоговорКонтрагента") Тогда
		
		ВидыСчетовФактурНаАванс = Новый СписокЗначений;
		ВидыСчетовФактурНаАванс.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
		ВидыСчетовФактурНаАванс.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента);
		ВидыСчетовФактурНаАванс.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку);
		
		ДоговорысчетовФактурНаАванс = Новый СписокЗначений;
		ДоговорысчетовФактурНаАванс.Добавить(Параметры.Отбор.ДоговорКонтрагента);
		ДоговорысчетовФактурНаАванс.Добавить(Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		
		ГруппаИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, 
			"ГруппаИЛИ", 
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		
		ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			ГруппаИЛИ, 
			"АвансовыеСчетаФактурыПоДоговору",
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ВидСчетаФактуры", ВидыСчетовФактурНаАванс, ВидСравненияКомпоновкиДанных.ВСписке);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ДоговорКонтрагента", ДоговорысчетовФактурНаАванс, ВидСравненияКомпоновкиДанных.ВСписке);
		
		ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			ГруппаИЛИ, 
			"СчетаФактурыПоДоговору",
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ВидСчетаФактуры", ВидыСчетовФактурНаАванс, ВидСравненияКомпоновкиДанных.НеВСписке);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ДоговорКонтрагента", Параметры.Отбор.ДоговорКонтрагента, ВидСравненияКомпоновкиДанных.Равно);
		
		Параметры.Отбор.Удалить("ДоговорКонтрагента");

		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("Запись_СчетФактураВыданный", , ДанныеСтроки.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти