
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если не Объект.Ссылка.Пустая() Тогда
		
	Статус = ПолучитьСтатусСпецификации (Объект.Ссылка);
	
	иначе
	
	Статус = ПредопределенноеЗначение("Перечисление.СтатусыСпецификаций.НеСогласован");
	
КонецЕсли;

ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатусСпецификации(Ссылка)

Возврат РегистрыСведений.СтатусыСпецификаций.ПолучитьСтатусСпецификации(Ссылка);	

КонецФункции // ПолучитьСтатусСпецификации()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
РегистрыСведений.СтатусыСпецификаций.УстановитьСтатусСпецификации (Статус, ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборТовары(Команда)
	
РеализацияТоваровУслугФормыКлиент.ПодборНоменклатуры(ЭтаФорма, "Товары", Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатуры.Форма.Форма" Тогда
		ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИсточникВыбора.ИмяТаблицы);
КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИмяТаблицы)

	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
	
	ДанныеОбъекта = Новый Структура(
		"Дата, Организация, ДеятельностьНаПатенте,
		|Склад, ЭтоКомиссия, Реализация, ДокументБезНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.ЭтоКомиссия = Ложь;
	ДанныеОбъекта.Реализация  = Истина;

	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта, Ложь, Ложь);

	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		ЗаполнитьКолонкиСтрокиТаблицыТовары(СтрокаТаблицы,СоответствиеСведенийОНоменклатуре );
	КонецЦикла;
	
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьКолонкиСтрокиТаблицыТовары(СтрокаТовара,СоответствиеСведенийОНоменклатуре)
	
	СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТовара.Номенклатура);
	Если СведенияОНоменклатуре <>  Неопределено Тогда
			Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
				СтрокаТовара.Цена, Объект.СуммаВключаетНДС, Объект.СуммаВключаетНДС,
				УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СведенияОНоменклатуре.СтавкаНДС));
		Иначе
			Цена = СтрокаТовара.Цена;	
		КонецЕсли;
		
			СтрокаТабличнойЧасти = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТовара);
			СтрокаТабличнойЧасти.Цена = Цена;
			
			Если СведенияОНоменклатуре = Неопределено Тогда
				Возврат;
			КонецЕсли;
						
				// Заполняем реквизиты табличной части
				СтрокаТабличнойЧасти.ЕдиницаИзмерения		= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения),
					СтрокаТабличнойЧасти.ЕдиницаИзмерения, СведенияОНоменклатуре.ЕдиницаИзмерения);
				СтрокаТабличнойЧасти.Коэффициент			= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Коэффициент),
					СтрокаТабличнойЧасти.Коэффициент, СведенияОНоменклатуре.Коэффициент);
				СтрокаТабличнойЧасти.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, Объект.СуммаВключаетНДС);
				
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Объект = Форма.Объект;
	
	Форма.ИтогиВсего    = Объект.Товары.Итог("Сумма");
	Форма.ИтогиВсегоНДС = Объект.Товары.Итог("СуммаНДС");
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Ответственный = Пользователи.ТекущийПользователь();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
	// На форме размещены 4 реквизита, чьи представления склоняются по падежам.
	// Основным режимом работы со склонениями Руководитель и ДолжностьРуководителя является их изменение в форме элемента
	// соответствующего справочника. Но возможен переход к их склонениям и из текущей формы.
	// Работа с реквизитами РуководительКонтрагента и ДолжностьРуководителяКонтрагента ведётся с данной форме
	// с использованием подсистемы БСП "СклонениеПредставленийОбъектов". Данные склонений реквизитов хранятся в реквизитах
	// СклоненияРуководительКонтрагента и СклоненияДолжностьРуководителяКонтрагента. Имя реквизита формы, с которым сейчас
	// ведётся работа с использованием подсистемы БСП, хранится в переменной ТекущийРеквизитСклонения. Данные из текущего
	// реквизита синхронизируются с реквизитом формы Склонения, относящимся к подсистеме БСП.
	
	СклонениеПредставленийОбъектов.ПриСозданииНаСервере(ЭтотОбъект, Объект.РуководительКонтрагента);
	ТекущийРеквизитСклонения = "СклоненияРуководительКонтрагента";
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	
	Если ЗначениеЗаполнено(Объект.ДолжностьРуководителяКонтрагента) Тогда
		
		СтруктураСклонения = СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
		СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставлениеПоВсемПадежам(
			Объект.ДолжностьРуководителяКонтрагента, СтруктураСклонения);
		ЭтотОбъект["СклоненияДолжностьРуководителяКонтрагента"] = СтруктураСклонения;
		
	КонецЕсли;
	
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

КонецПроцедуры

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура ПоказатьСклоненияРуководительКонтрагента(Команда)
	
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект["ИзмененоПредставление" + Сред(ТекущийРеквизитСклонения, 10)] = ЭтотОбъект.ИзмененоПредставление;
	
	ТекущийРеквизитСклонения         = "СклоненияРуководительКонтрагента";
	ЭтотОбъект.Склонения             = ЭтотОбъект[ТекущийРеквизитСклонения];
	ЭтотОбъект.ИзмененоПредставление = ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента;
	СклонениеПредставленийОбъектовКлиент.ОбработатьКомандуСклонения(
		ЭтотОбъект,
		Объект.РуководительКонтрагента,
		Истина,
		ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(Объект.ПолРуководителяКонтрагента));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСклоненияДолжностьРуководителяКонтрагента(Команда)
	
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект["ИзмененоПредставление" + Сред(ТекущийРеквизитСклонения, 10)] = ЭтотОбъект.ИзмененоПредставление;
	
	ТекущийРеквизитСклонения         = "СклоненияДолжностьРуководителяКонтрагента";
	ЭтотОбъект.Склонения             = ЭтотОбъект[ТекущийРеквизитСклонения];
	ЭтотОбъект.ИзмененоПредставление = ЭтотОбъект.ИзмененоПредставлениеДолжностьРуководителяКонтрагента;
	СклонениеПредставленийОбъектовКлиент.ОбработатьКомандуСклонения(ЭтотОбъект, Объект.ДолжностьРуководителяКонтрагента);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСклоненияРуководитель(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Руководитель) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект["ИзмененоПредставление" + Сред(ТекущийРеквизитСклонения, 10)] = ЭтотОбъект.ИзмененоПредставление;
	ТекущийРеквизитСклонения = "Руководитель";
	
	РеквизитыСклонения = РеквизитыСклоненияРуководителя(Объект.Руководитель);
	
	ОбработатьКомандуСклонения(РеквизитыСклонения.ФИО, РеквизитыСклонения.ТолькоПросмотр, Истина, РеквизитыСклонения.Пол);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСклоненияДолжностьРуководителя(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ДолжностьРуководителя) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект["ИзмененоПредставление" + Сред(ТекущийРеквизитСклонения, 10)] = ЭтотОбъект.ИзмененоПредставление;
	ТекущийРеквизитСклонения = "ДолжностьРуководителя";
	
	ПредставлениеОбъекта = Строка(Объект.ДолжностьРуководителя);
	ЗапретРедактирования = Не ПравоНаРедактирование(Ложь);
	ОбработатьКомандуСклонения(ПредставлениеОбъекта, ЗапретРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьРуководителяАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РаботаСДолжностямиБПКлиент.ДолжностьАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьРуководителяОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСДолжностямиБПКлиент.ДолжностьОкончаниеВводаТекста(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьРуководителяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаСДолжностямиБПКлиент.ДолжностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры


// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаСервереБезКонтекста
Функция РеквизитыСклоненияРуководителя(Руководитель)
	
	РеквизитыСклонения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Руководитель, "ФИО,Пол");
	
	РеквизитыСклонения.Пол = ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(РеквизитыСклонения.Пол);
	
	РеквизитыСклонения.Вставить("ТолькоПросмотр", Не ПравоНаРедактирование(Истина));
	
	Возврат РеквизитыСклонения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПравоНаРедактирование(ЭтоФИО)
	
	ПроверяемыйСправочник = ?(ЭтоФИО, Метаданные.Справочники.ФизическиеЛица, Метаданные.Справочники.Должности);
	Возврат ПравоДоступа("Редактирование", ПроверяемыйСправочник);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьВРегистрСклонения(ОбъектСоСклоняемымиРеквизитами, Представление, СтруктураСклонения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписейСклонения = РегистрыСведений.СклоненияПредставленийОбъектов.СоздатьНаборЗаписей();
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
	ХешированиеДанных.Добавить(Представление);
	ХешПредставления = СтрЗаменить(Строка(ХешированиеДанных.ХешСумма), " ", "");
	
	НаборЗаписейСклонения.Отбор.ХешПредставления.Установить(ХешПредставления);
	Если Не ЗначениеЗаполнено(ОбъектСоСклоняемымиРеквизитами) Тогда
		// Может быть несколько склонений представлений, относимых к одному пустому значению.
		НаборЗаписейСклонения.Отбор.Объект.Установить(ОбъектСоСклоняемымиРеквизитами);
	КонецЕсли;
	
	НоваяСтрока = НаборЗаписейСклонения.Добавить();
	НоваяСтрока.Объект           = ОбъектСоСклоняемымиРеквизитами;
	НоваяСтрока.ХешПредставления = ХешПредставления;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСклонения);
	НаборЗаписейСклонения.Записать();
	
КонецПроцедуры

// Вызывается для реквизитов, чьи склонения привязаны к договору: ФИО и должности представителя контрагента.
//
&НаКлиенте
Процедура Подключаемый_ПросклонятьПредставлениеПоВсемПадежам() Экспорт
	
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект["ИзмененоПредставление" + Сред(ТекущийРеквизитСклонения, 10)] = ЭтотОбъект.ИзмененоПредставление;
	
	ТекущийРеквизитСклонения         = "СклоненияРуководительКонтрагента";
	ЭтотОбъект.Склонения             = ЭтотОбъект[ТекущийРеквизитСклонения];
	ЭтотОбъект.ИзмененоПредставление = ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента;
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставлениеПоВсемПадежам(
		ЭтотОбъект,
		Объект.РуководительКонтрагента,
		Истина,
		ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(Объект.ПолРуководителяКонтрагента));
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента = ЭтотОбъект.ИзмененоПредставление;
	
	ТекущийРеквизитСклонения         = "СклоненияДолжностьРуководителяКонтрагента";
	ЭтотОбъект.Склонения             = ЭтотОбъект[ТекущийРеквизитСклонения];
	ЭтотОбъект.ИзмененоПредставление = ЭтотОбъект.ИзмененоПредставлениеДолжностьРуководителяКонтрагента;
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставлениеПоВсемПадежам(ЭтотОбъект, Объект.ДолжностьРуководителяКонтрагента);
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект.ИзмененоПредставлениеДолжностьРуководителяКонтрагента = ЭтотОбъект.ИзмененоПредставление;
	
КонецПроцедуры

// Завершение процедуры ОбработатьКомандуСклонения.
// Вызывается для реквизитов, чьи склонения привязаны к объектам вне договора: ФИО и должности руководителя организации.
//
&НаКлиенте
Процедура Подключаемый_ОткрытьФормуСклоненияЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт

	Если РезультатРедактирования <> Неопределено
	   И РезультатРедактирования.ИменительныйПадеж = ДополнительныеПараметры.Представление
	   И Не ДополнительныеПараметры.Свойство("ЗапретРедактирования") Тогда
		
		СтруктураСклонения = Новый ФиксированнаяСтруктура(РезультатРедактирования);
		ЗаписатьВРегистрСклонения(
			Объект[ТекущийРеквизитСклонения],
			ДополнительныеПараметры.Представление,
			СтруктураСклонения);
		
	КонецЕсли;	
	
	// Закончили редактирование объекта склонения внешнего по отношению к данной форме.
	// Возвращаемся к редактированию склонений реквизита формы.
	ТекущийРеквизитСклонения         = "СклоненияРуководительКонтрагента";
	ЭтотОбъект.Склонения             = ЭтотОбъект[ТекущийРеквизитСклонения];
	ЭтотОбъект.ИзмененоПредставление = ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПредставленияРуководителяКонтрагента()
	
	// Пытаемся определить пол.
	ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(Объект.РуководительКонтрагента));
	Если ЗначениеЗаполнено(ПредполагаемыйПол) Тогда
		Объект.ПолРуководителяКонтрагента = ПредполагаемыйПол;
	КонецЕсли;
	
	СклонениеПредставленийОбъектовКлиент.ПриИзмененииПредставления(ЭтотОбъект);
	ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервереСклоненийРеквизитов(ТекущийОбъект)
	
	ЭтотОбъект[ТекущийРеквизитСклонения] = ЭтотОбъект.Склонения;
	ЭтотОбъект["ИзмененоПредставление" + Сред(ТекущийРеквизитСклонения, 10)] = ЭтотОбъект.ИзмененоПредставление;
	ОбъектСоСклоняемымиРеквизитами = Справочники.ДоговорыКонтрагентов.ПустаяСсылка(); // любой договор
	
	Если ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента Тогда
		
		СтруктураСклонений = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(
			ТекущийОбъект.РуководительКонтрагента,
			Истина,
			ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(ТекущийОбъект.ПолРуководителяКонтрагента));
		ЭтотОбъект.СклоненияРуководительКонтрагента = Новый ФиксированнаяСтруктура(СтруктураСклонений);
		ЭтотОбъект.ИзмененоПредставлениеРуководительКонтрагента = Ложь;
		
	КонецЕсли;
	ЗаписатьСклонения = ТипЗнч(ЭтотОбъект.СклоненияРуководительКонтрагента) = Тип("ФиксированнаяСтруктура");
	Если ЗаписатьСклонения Тогда
		
		ЗаписатьВРегистрСклонения(
			ОбъектСоСклоняемымиРеквизитами,
			ТекущийОбъект.РуководительКонтрагента,
			ЭтотОбъект.СклоненияРуководительКонтрагента);
		
	КонецЕсли;
	
	Если ЭтотОбъект.ИзмененоПредставлениеДолжностьРуководителяКонтрагента Тогда
		
		СтруктураСклонений = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(
			ТекущийОбъект.ДолжностьРуководителяКонтрагента);
		ЭтотОбъект.СклоненияДолжностьРуководителяКонтрагента = Новый ФиксированнаяСтруктура(СтруктураСклонений);
		ЭтотОбъект.ИзмененоПредставлениеДолжностьРуководителяКонтрагента = Ложь;
		
	КонецЕсли;
	ЗаписатьСклонения = ТипЗнч(ЭтотОбъект.СклоненияДолжностьРуководителяКонтрагента) = Тип("ФиксированнаяСтруктура");
	Если ЗаписатьСклонения Тогда
		
		ЗаписатьВРегистрСклонения(
			ОбъектСоСклоняемымиРеквизитами,
			ТекущийОбъект.ДолжностьРуководителяКонтрагента,
			ЭтотОбъект.СклоненияДолжностьРуководителяКонтрагента);
		
	КонецЕсли;
		
	ЭтотОбъект.Склонения = ЭтотОбъект[ТекущийРеквизитСклонения];
	ЭтотОбъект.ИзмененоПредставление = Ложь;	
	
КонецПроцедуры

// Обработчик команды "Склонения" формы объекта склонения.
//
// Параметры:
//  Представление   - Строка - Строка для склонения.
//  ЭтоФИО       	- Булево - Признак склонения ФИО.
//	Пол				- Число	- Пол физического лица (в случае склонения ФИО)
//							1 - мужской 
//							2 - женский.
//
&НаКлиенте
Процедура ОбработатьКомандуСклонения(Представление, ЗапретРедактирования, ЭтоФИО = Ложь, Пол = Неопределено)
	
	СтруктураСклонения = СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
	
	СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставлениеПоВсемПадежам(Представление, СтруктураСклонения, ЭтоФИО, Пол);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Представление", Представление);
	Если ЗапретРедактирования Тогда
		ДополнительныеПараметры.Вставить("ЗапретРедактирования", Истина);
	КонецЕсли;
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОткрытьФормуСклоненияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Склонения",             СтруктураСклонения);
	СтруктураПараметров.Вставить("ЭтоФИО",                ЭтоФИО);
	СтруктураПараметров.Вставить("Пол",                   Пол);
	СтруктураПараметров.Вставить("Представление",         Представление);
	СтруктураПараметров.Вставить("ИзмененоПредставление", Ложь);
	
	Если ЗапретРедактирования Тогда
		СтруктураПараметров.Вставить("ТолькоПросмотр", Истина);
	КонецЕсли;
		
	ОткрытьФорму("ОбщаяФорма.Склонения", СтруктураПараметров, ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры


// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ПараметрыОбработки = РеализацияТоваровУслугФормыКлиент.ПодготовитьПараметрыОбработкиТоварыНоменклатураПриИзменении(
		ЭтаФорма, ТекущиеДанные);
	ТоварыНоменклатураПриИзмененииНаСервере(ПараметрыОбработки.ДанныеСтрокиТаблицы);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПараметрыОбработки.ДанныеСтрокиТаблицы);
	
КонецПроцедуры

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СтрокаТабличнойЧасти)

	ДанныеОбъекта = Новый Структура(
		"Дата, Организация, ДеятельностьНаПатенте,
		|Склад, ЭтоКомиссия, Реализация, ДокументБезНДС, СуммаВключаетНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.ЭтоКомиссия = Ложь;
	ДанныеОбъекта.Реализация  = Истина;
	
	Если Не ДанныеОбъекта.Свойство("ТипЦен") Или Не ЗначениеЗаполнено(ДанныеОбъекта.ТипЦен) Тогда
		ДанныеОбъекта.Вставить("СпособЗаполненияЦены", Перечисления.СпособыЗаполненияЦен.ПоПродажнымЦенам);
	КонецЕсли;	


	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта, Ложь);
	Если СведенияОНоменклатуре <> Неопределено Тогда
		
		СтрокаТабличнойЧасти.ЕдиницаИзмерения            = СведенияОНоменклатуре.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Коэффициент                 = СведенияОНоменклатуре.Коэффициент;
		Если СведенияОНоменклатуре.Цена <> 0 Тогда
			СтрокаТабличнойЧасти.Цена                    = СведенияОНоменклатуре.Цена;
		КонецЕсли;
		СтрокаТабличнойЧасти.СтавкаНДС                   = СведенияОНоменклатуре.СтавкаНДС;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС);
		
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "Товары");
КонецПроцедуры


&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "Товары");
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры

