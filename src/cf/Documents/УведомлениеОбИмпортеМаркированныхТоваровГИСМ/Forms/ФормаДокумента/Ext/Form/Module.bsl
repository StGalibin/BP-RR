&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Элементы.Подразделение.Видимость = ИнтеграцияГИСМ.ИспользоватьПодразделения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Основание", Объект.Основание);
	Оповестить("Запись_УведомлениеОбИмпортеМаркированныхТоваровГИСМ", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусГИСМ();
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте(Объект.Товары);
	
	//ГИСМБП
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		СтрокаНомераКиЗ = Объект.НомераКиЗ.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		Если СтрокаНомераКиЗ.Количество()>0 Тогда
			СтрокаТовары.НомерКиЗ = СтрокаНомераКиЗ[0].НомерКиЗ;
		КонецЕсли;
	КонецЦикла;
	//КОНЕЦ ГИСМБП
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияГИСМ"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		ОбновитьСтатусГИСМ();
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменГИСМ"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусГИСМФормахВДокументах)) Тогда
		
		ОбновитьСтатусГИСМ();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусГИСМОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусГИСМОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Уведомление об импорте маркированных товаров было изменено. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусГИСМОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = 'Уведомление об импорте маркированных товаров не записано. Записать?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		СтандартнаяОбработка = Ложь;
		ИнтеграцияГИСМКлиент.ПодготовитьСообщениеКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ОперацииОбменаГИСМ.ПередачаДанных"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусГИСМОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать();
	КонецЕсли;
	
	Если Не Модифицированность И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусГИСМ()

	СтатусГИСМ         = Перечисления.СтатусыИнформированияГИСМ.Черновик;
	ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПустаяСсылка();
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПустаяСсылка)
		|		ИНАЧЕ Статусы.ДальнейшееДействие
		|	КОНЕЦ КАК ДальнейшееДействие
		|ИЗ
		|	РегистрСведений.СтатусыИнформированияГИСМ КАК Статусы
		|ГДЕ
		|	Статусы.ТекущееУведомление = &УведомлениеОбВвозе";
		
		Запрос.УстановитьПараметр("УведомлениеОбВвозе", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияГИСМ.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусГИСМ         = Выборка.Статус;
			ДальнейшееДействие = Выборка.ДальнейшееДействие;
			
		КонецЕсли;
		
	Иначе
		
		ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
		
	КонецЕсли;
	
	СтатусГИСМПредставление = ИнтеграцияГИСМ.ПредставлениеСтатусаГИСМ(
		СтатусГИСМ,
		ДальнейшееДействие,
		Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьВидМеха(Команда)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Не выбрана строка с товаром'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	КодТНВЭД = ТекущиеДанные.КодТНВЭД;
	
	ПараметрыОткрытия = Новый Структура("КодТНВЭД", КодТНВЭД);
	ОткрытьФорму("Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаЗаполнениеВидаМеха", 
		ПараметрыОткрытия,ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ЗаполнитьВидМехаЗавершение", 
			ЭтотОбъект,
			Новый Структура("МассивСтрок, КодТНВЭД", Элементы.Товары.ВыделенныеСтроки, КодТНВЭД)));
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВидМехаЗавершение(ВидМеха, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ВидМеха) Тогда
		
		ЗаполнитьВидМехаНаСервере(ВидМеха, ДополнительныеПараметры.КодТНВЭД, ДополнительныеПараметры.МассивСтрок);
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Вид меха заполнен'"),
			,
			СтрЗаменить(НСтр("ru='Для выделенных строк заполнен вид меха ""%ВидМеха%""'"), "%ВидМеха%", ВидМеха),
			БиблиотекаКартинок.Информация32);
	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ИнтеграцияГИСМПереопределяемый.ДополнитьУсловноеОформлениеУведомлениеОбИмпорте(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	//ГИСМБП 
	// Исключена обработка документов:
	// - МаркировкаТоваровГИСМ
	//Конец ГИСМБП

	ОбновитьСтатусГИСМ();
	
	//ГИСМБП
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		СтрокаНомераКиЗ = Объект.НомераКиЗ.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		Если СтрокаНомераКиЗ.Количество()>0 Тогда
			СтрокаТовары.НомерКиЗ = СтрокаНомераКиЗ[0].НомерКиЗ;
		КонецЕсли;
	КонецЦикла;
	//КОНЕЦ ГИСМБП
	
	ИнтеграцияГИСМПереопределяемый.ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте(Объект.Товары);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидМехаНаСервере(ВидМеха, КодТНВЭД, ВыделенныеСтроки)
	
	МассивСтрок = Новый Массив;
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		МассивСтрок.Добавить(Объект.Товары.НайтиПоИдентификатору(Строка));
	КонецЦикла;
	
	Для каждого ВыделеннаяСтрока Из МассивСтрок Цикл
		Если ВыделеннаяСтрока.КодТНВЭД = КодТНВЭД Тогда
			ВыделеннаяСтрока.ВидМеха = ВидМеха;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
