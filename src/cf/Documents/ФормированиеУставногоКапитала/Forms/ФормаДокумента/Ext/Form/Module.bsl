&НаКлиенте
Перем ТипУчредителяНовойСтроки;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчредители

&НаКлиенте
Процедура УчредителиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование 
		ИЛИ ТипУчредителяНовойСтроки <> Неопределено 
		ИЛИ НЕ Объект.СформированПомощникомРегистрации Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Оповещение = Новый ОписаниеОповещения("ДобавитьУчредителяЗавершение", ЭтотОбъект);
	Элементы.Учредители.ТекущийЭлемент = Элементы.УчредителиУчредитель;
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элементы.Учредители);
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НЕ Объект.СформированПомощникомРегистрации Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	Если НоваяСтрока И НЕ Копирование Тогда
		ЗаполнитьДобавленныеКолонкиСтроки(ТекущиеДанные);
		ТекущиеДанные.ТипУчредителя = ТипУчредителяНовойСтроки;
		ТипУчредителяНовойСтроки = Неопределено;
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ТипУчредителя) Тогда
			ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
		КонецЕсли;
	КонецЕсли;
	
	МассивПараметрыВыбора = Новый Массив;
	Если ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Элементы.УчредителиУчредитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		МассивПараметрыВыбора.Добавить(НовыйПараметр);
	Иначе
		Элементы.УчредителиУчредитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	КонецЕсли;
	Элементы.УчредителиУчредитель.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиДолжностьПредставителяПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	РуководительНаОсновании = НСтр("ru='Устава'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ПрочееНаОсновании       = НСтр("ru='Доверенности №'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Если РегистрацияОрганизацииКлиентСервер.ЭтоДолжностьРуководителя(ТекущиеДанные.ДолжностьПредставителя) Тогда
		ТекущиеДанные.ПредставительНаОсновании = РуководительНаОсновании;
	ИначеЕсли ПустаяСтрока(ТекущиеДанные.ПредставительНаОсновании)
		ИЛИ ТекущиеДанные.ПредставительНаОсновании = РуководительНаОсновании Тогда
		ТекущиеДанные.ПредставительНаОсновании = ПрочееНаОсновании;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьУчредителяФизическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	ТекущийЭлемент = Элементы.Учредители;
	Элементы.Учредители.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЮридическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	ТекущийЭлемент = Элементы.Учредители;
	Элементы.Учредители.ДобавитьСтроку();
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
    Если Не ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
        ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя);
    КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Представитель учредителя, должность и основание полномочий.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиПредставительУчредителя");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьПредставитель");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьДолжность");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиДолжностьПредставителя");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьНаОсновании");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиПредставительНаОсновании");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Учредители.ТипУчредителя",
		ВидСравненияКомпоновкиДанных.НеРавно,
		ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Контрагент, соответствующий физическому лицу.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьКонтрагент");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиКонтрагентФизическоеЛицо");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Учредители.ТипУчредителя",
		ВидСравненияКомпоновкиДанных.НеРавно,
		ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	СформированПомощником = Объект.СформированПомощникомРегистрации;
	Элементы.УчредителиГруппаСведенияОбУчредителе.Видимость = СформированПомощником;
	Элементы.УчредителиГруппаДобавить.Видимость             = СформированПомощником;
	Элементы.УчредителиКонтрагент.Видимость = НЕ СформированПомощником;
	Элементы.УчредителиДобавить.Видимость   = НЕ СформированПомощником;
	
	ИзменениеУставногоКапитала = СформированПомощником И Объект.ИзменениеУставногоКапитала;
	
	Элементы.УчредителиСуммаВзносаДоИзменения.Видимость    = ИзменениеУставногоКапитала;
	Элементы.УчредителиСуммаВзносаПослеИзменения.Видимость = ИзменениеУставногоКапитала;
	Элементы.УчредителиСуммаВзноса.Видимость               = НЕ ИзменениеУставногоКапитала;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Для каждого СтрокаТаблицы Из Объект.Учредители Цикл
		ЗаполнитьДобавленныеКолонкиСтроки(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтроки(СтрокаТаблицы)
	
	СтрокаТаблицы.НадписьПредставитель = НСтр("ru='Представитель:'");
	СтрокаТаблицы.НадписьДолжность     = НСтр("ru='Должность:'");
	СтрокаТаблицы.НадписьНаОсновании   = НСтр("ru='На основании:'");
	СтрокаТаблицы.НадписьКонтрагент    = НСтр("ru='Контрагент:'");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЗавершение(ВыбранныйЭлемент, ДопПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТипУчредителяНовойСтроки = ВыбранныйЭлемент.Значение;
	Элементы.Учредители.ДобавитьСтроку();
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
    УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента)
    ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти

