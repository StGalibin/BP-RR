////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	
	Если Параметры.Отбор.Свойство("Контрагент") Тогда
		ОтборПоКонтрагенту = ВернутьПолеОтбораКомпоновки(ЭтаФорма, "Контрагент");
		Если ОтборПоКонтрагенту = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ОтборПоКонтрагенту.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоКонтрагенту.Использование  = Истина;
		ОтборПоКонтрагенту.ПравоеЗначение = Параметры.Отбор.Контрагент;
	КонецЕсли;
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.ПлатежноеТребование);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	
	УсловноеОформление.Элементы.Очистить();
	РаботаСБанкамиБП.УстановитьЦветовоеВыделениеСостоянийПлатежек(УсловноеОформление);
	
	// КомандыЭДО
	ИспользуетсяДиректБанк = ИспользуетсяДиректБанк();
	Если ИспользуетсяДиректБанк Тогда
	
		ОбменСБанками.ПриСозданииНаСервере(ЭтотОбъект, Элементы.КомандыЭДО, Истина);
		
	КонецЕсли;
	// Конец КомандыЭДО

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список,, Параметр);
	ИначеЕсли ИмяСобытия = "ОбновитьСостояниеОбменСБанками" Тогда
		Элементы.Список.Обновить();
	ИначеЕсли ИмяСобытия = "Запись_НаборКонстант" И Источник = "ИспользоватьОбменСБанками" Тогда
		ИспользуетсяДиректБанк = ИспользуетсяДиректБанк();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ Список

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	КлючеваяОперация = "СозданиеФормыПлатежноеТребование";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	КлючеваяОперация = "ОткрытиеФормыПлатежноеТребование";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьСБанком(Команда)
	
	ПроизвестиОбменСБанком();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВБанк(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РежимПоУмолчанию", "ГруппаВыгрузка");
	СтруктураПараметров.Вставить("ВключитьВыгрузкуПлатежныхТребований", Истина);
	
	ОтборОрганизация = ПолучитьОтборПоОрганизации(Список);
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		
		СтруктураПараметров.Вставить("Организация", ОтборОрганизация);
		
	КонецЕсли;
	
	ОткрытьФорму("Обработка.КлиентБанк.Форма", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокИПолучитьСтатусы(Команда)
	
	// Получаем статусы документов, если настроен DirectBank
	Если ИспользуетсяДиректБанк Тогда
		
		ПроизвестиОбменСБанком();
		
	Иначе
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)
	
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтотОбъект,
		Команда
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОДКЛЮЧАЕМЫЕ ОБРАБОТЧИКИ

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
	
	ЭлектронноеВзаимодействиеСлужебныйКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ВернутьПолеОтбораКомпоновки(Форма, Знач ИмяПоля)
	
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для каждого ЭлементОтбора Из Форма.Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ЛевоеЗначение Тогда
			Возврат ЭлементОтбора;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ПроизвестиОбменСБанком()

	ОтборОрганизация = ПолучитьОтборПоОрганизации(Список);
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		
		ОбменСБанкамиКлиент.СинхронизироватьСБанком(ОтборОрганизация);
		
	Иначе
		
		ОбменСБанкамиКлиент.СинхронизироватьСБанком();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОтборПоОрганизации(Список)

	Элементы = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого Элемент Из Элементы Цикл
		
		Если ТипЗнч(Элемент) <> Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если Элемент.ИдентификаторПользовательскойНастройки = "Организация" Тогда
			
			Возврат Элемент.ПравоеЗначение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;

КонецФункции

&НаСервереБезКонтекста
Функция ИспользуетсяДиректБанк()

	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьОбменСБанками");

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать
