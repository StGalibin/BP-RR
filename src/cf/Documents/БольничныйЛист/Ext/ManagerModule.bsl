#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Получает данные для заполнения документа по первичному листку нетрудоспособности.
//
// Параметры:
//  ПервичныйБольничныйЛист - ДокументСсылка.БольничныйЛист
//                 первичный листок нетрудоспособности.
//  ИсключаемыеДокументы - массив из ДокументСсылка.БольничныйЛист
//                 см. описание метода ПоследнийДеньБолезни.
//
// Возвращаемое значение:
//   Дата - последний день болезни, зарегистрированной по переданному б/л.
//
Функция ДанныеПервичногоБольничногоЛиста(ПервичныйБольничныйЛист, ИсключаемыеДокументы = Неопределено) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА БольничныйЛист.ЯвляетсяПродолжениемБолезни
		|			ТОГДА БольничныйЛист.ПервичныйБольничныйЛист
		|		ИНАЧЕ БольничныйЛист.Ссылка
		|	КОНЕЦ КАК ПервичныйБольничныйЛист,
		|	БольничныйЛист.НомерЛисткаНетрудоспособности КАК НомерПервичногоЛисткаНетрудоспособности,
		|	БольничныйЛист.*
		|ИЗ
		|	Документ.БольничныйЛист КАК БольничныйЛист
		|ГДЕ
		|	БольничныйЛист.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ПервичныйБольничныйЛист);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ДанныеПервичногоДокумента = Новый Структура;
	Для Каждого КолонкаРезультата Из РезультатЗапроса.Колонки Цикл
		ДанныеПервичногоДокумента.Вставить(КолонкаРезультата.Имя, Выборка[КолонкаРезультата.Имя]);
	КонецЦикла;
	
	ДатаНачала = ПоследнийДеньБолезни(ПервичныйБольничныйЛист, ИсключаемыеДокументы) + 86400;
	ДанныеПервичногоДокумента.Вставить("ДатаНачала", ДатаНачала);
	
	Возврат ДанныеПервичногоДокумента;
	
КонецФункции

// Определяет последний день болезни, оформленной несколькими листками нетрудоспособности.
//
// Параметры:
//  ПервичныйБольничныйЛист - ДокументСсылка.БольничныйЛист
//                 первичный листок нетрудоспособности.
//  ИсключаемыеДокументы - массив из ДокументСсылка.БольничныйЛист
//                 массив листков нетрудоспособности, которые не нужно учитывать при определении последнего дня болезни.
//
// Возвращаемое значение:
//   Дата - последний день болезни, зарегистрированной по переданному б/л.
//
Функция ПоследнийДеньБолезни(ПервичныйБольничныйЛист, ИсключаемыеДокументы  = Неопределено) Экспорт 

	ДатаОкончанияБолезни = '00010101';
	
	Если Не ЗначениеЗаполнено(ПервичныйБольничныйЛист) Тогда
		Возврат	ДатаОкончанияБолезни;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	БольничныйЛист.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.Ссылка = &ПервичныйБольничныйЛист
	|	И БольничныйЛист.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БольничныйЛист.ДатаОкончания
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.ПервичныйБольничныйЛист = &ПервичныйБольничныйЛист
	|	И НЕ БольничныйЛист.Ссылка В (&ИсключаемыеДокументы)
	|	И БольничныйЛист.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОкончания УБЫВ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПервичныйБольничныйЛист", ПервичныйБольничныйЛист);
	Запрос.УстановитьПараметр("ИсключаемыеДокументы", ?(ИсключаемыеДокументы = Неопределено, Новый Массив, ИсключаемыеДокументы));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ДатаОкончанияБолезни = Выборка.ДатаОкончания;
	КонецЕсли;

	Возврат	ДатаОкончанияБолезни;
	
КонецФункции

Процедура ЗаполнитьВидПособияВПособияхСоциальногоСтрахования() Экспорт
	
	ПричиныНетрудоспособности = Новый Массив;
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым);
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Карантин);
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Протезирование);
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПособияПоСоциальномуСтрахованию.Регистратор
		|ИЗ
		|	РегистрНакопления.ПособияПоСоциальномуСтрахованию КАК ПособияПоСоциальномуСтрахованию
		|ГДЕ
		|	ПособияПоСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПустаяСсылка)
		|	И ПособияПоСоциальномуСтрахованию.Регистратор ССЫЛКА Документ.БольничныйЛист";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления.ПособияПоСоциальномуСтрахованию.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			
			НаборЗаписей.Прочитать();
			
			Для каждого Запись Из НаборЗаписей Цикл
				Если Не ЗначениеЗаполнено(Запись.ВидПособияСоциальногоСтрахования) Тогда
					Запись.ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность;
				КонецЕсли; 
			КонецЦикла;
			
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьПризнакПособиеВыплачиваетсяФССВСуществующихБольничныхЛистах() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БольничныйЛист.Ссылка
	|ИЗ
	|	Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ПланВидовРасчетаНачисления
	|		ПО БольничныйЛистНачисления.Начисление = ПланВидовРасчетаНачисления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаПособийСоциальногоСтрахования КАК НастройкиУчетаПособийСоциальногоСтрахования
	|			ПО БольничныйЛист.Организация = НастройкиУчетаПособийСоциальногоСтрахования.Организация
	|		ПО БольничныйЛистНачисления.Ссылка = БольничныйЛист.Ссылка
	|ГДЕ
	|	НастройкиУчетаПособийСоциальногоСтрахования.ДатаПередачиФССВыплатыПособий <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НастройкиУчетаПособийСоциальногоСтрахования.ДатаПередачиФССВыплатыПособий <= БольничныйЛист.ПериодРегистрации
	|	И ПланВидовРасчетаНачисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&КатегорияНачисленияИлиНеоплаченногоВремени)
	|	И БольничныйЛист.ПособиеВыплачиваетсяФСС = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КатегорияНачисленияИлиНеоплаченногоВремени", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ПособиеВыплачиваетсяФСС = Истина;
			Документ.ОбменДанными.Загрузка = Истина;
			Документ.Записать();
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок) Экспорт
	ДанныеДляРегистрацииВУчете = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БольничныйЛист.Сотрудник,
	|	БольничныйЛист.ДатаНачала,
	|	БольничныйЛист.ДатаОкончания,
	|	БольничныйЛист.Ссылка,
	|	БольничныйЛист.ПричинаНетрудоспособности
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.Ссылка В(&МассивСсылок)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеДляРегистрацииВУчетеПоДокументу = УчетСтажаПФР.ДанныеДляРегистрацииВУчетеСтажаПФР();
		ДанныеДляРегистрацииВУчете.Вставить(Выборка.Ссылка, ДанныеДляРегистрацииВУчетеПоДокументу);
		
		Если Выборка.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			ВидСтажа = Перечисления.ВидыСтажаПФР2014.Декрет;		
		Иначе	
			ВидСтажа = Перечисления.ВидыСтажаПФР2014.ВременнаяНетрудоспособность;
		КонецЕсли;	
						
		ОписаниеПериода = УчетСтажаПФР.ОписаниеРегистрируемогоПериода();
		ОписаниеПериода.Сотрудник = Выборка.Сотрудник;	
		ОписаниеПериода.ДатаНачалаПериода = Выборка.ДатаНачала;
		ОписаниеПериода.ДатаОкончанияПериода = Выборка.ДатаОкончания;
		ОписаниеПериода.Состояние = Перечисления.СостоянияСотрудника.Болезнь;
				
		РегистрируемыйПериод = УчетСтажаПФР.ДобавитьЗаписьВДанныеДляРегистрацииВУчета(ДанныеДляРегистрацииВУчетеПоДокументу, ОписаниеПериода);
												 					
		УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "ВидСтажаПФР", ВидСтажа);		
	КонецЦикла;	

	Возврат ДанныеДляРегистрацииВУчете;
														
КонецФункции	

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.БольничныйЛист";
	КомандаПечати.Идентификатор = "РасчетСреднегоЗаработка";
	КомандаПечати.Представление = НСтр("ru = 'Расчет среднего заработка'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка") Тогда
		ДанныеДокументов = ДанныеДокументовДляПечатиРасчетаСреднегоЗаработкаФСС(МассивОбъектов);
		ТабличныйДокумент = Обработки.ПечатьРасчетаСреднегоЗаработкаФСС.ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка", НСтр("ru = 'Расчет среднего заработка'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет таблицу значений - параметры формирования печатной формы расчета среднего заработка.
//
// Параметры:
//	 МассивСсылок 		- массив, печатаемые документы.
//   ДанныеДокумента 	- таблица значений, определяется в
//                      Обработки.ПечатьРасчетаСреднегоЗаработка.ДанныеДокументовРасчетаСреднегоЗаработка.
//   ИмяМакета          - строка, вариант печати расчета среднего заработка.
//
Функция ДанныеДокументовДляПечатиРасчетаСреднегоЗаработкаФСС(МассивСсылок) Экспорт
	
	ДанныеДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	УчетПособийСоциальногоСтрахования.СоздатьВТДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(Запрос.МенеджерВременныхТаблиц, МассивСсылок);
	
	СоздатьВТКадровыеДанныеСотрудниковБольничныхЛистов(Запрос, МассивСсылок);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.ДатаНачалаСобытия,
	|	ДанныеДокументов.ПрименятьПредельнуюВеличину,
	|	ДанныеДокументов.ИспользоватьДниБолезниУходаЗаДетьми,
	|	ДанныеДокументов.ПериодРасчетаСреднегоЗаработкаПервыйГод,
	|	ДанныеДокументов.ПериодРасчетаСреднегоЗаработкаВторойГод,
	|	ДанныеДокументов.РайонныйКоэффициентРФ,
	|	ДанныеДокументов.МинимальныйРазмерОплатыТрудаРФ,
	|	БольничныйЛист.Организация,
	|	БольничныйЛист.Дата КАК ДатаДокумента,
	|	БольничныйЛист.Номер КАК НомерДокумента,
	|	БольничныйЛист.ДатаНачала КАК ДатаНачалаОтсутствия,
	|	БольничныйЛист.ДатаОкончания КАК ДатаОкончанияОтсутствия,
	|	Организации.НаименованиеПолное КАК ПолноеНаименованиеОрганизации,
	|	Организации.Наименование КАК НаименованиеОрганизации,
	|	ВТКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные КАК ФИОПолные,
	|	ВТКадровыеДанныеСотрудников.ТабельныйНомер КАК ТабельныйНомер,
	|	ВТКадровыеДанныеСотрудников.Подразделение КАК Подразделение,
	|	ВТКадровыеДанныеСотрудников.Должность КАК Должность,
	|	ВТКадровыеДанныеСотрудников.ВидЗанятости КАК ВидЗанятости
	|ИЗ
	|	ВТДанныеДокументовДляРасчетаСреднегоЗаработкаФСС КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО БольничныйЛист.Организация = Организации.Ссылка
	|		ПО ДанныеДокументов.Ссылка = БольничныйЛист.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО ДанныеДокументов.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И ДанныеДокументов.ДатаНачалаСобытия = ВТКадровыеДанныеСотрудников.Период";	
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицыДанныхОСреднем = УчетПособийСоциальногоСтрахования.ТаблицыДанныхСреднегоЗаработкаФСС("БольничныйЛист", МассивСсылок);
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДанныеДокумента = Обработки.ПечатьРасчетаСреднегоЗаработкаФСС.ПустаяСтруктураДанныхДляПечатиСреднегоЗаработка();
			
			ЗаполнитьЗначенияСвойств(ДанныеДокумента.РеквизитыДокумента, Выборка);
			ЗаполнитьЗначенияСвойств(ДанныеДокумента.КадровыеДанныеСотрудника, Выборка);
			
			РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС = УчетПособийСоциальногоСтрахования.РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС();
			ЗаполнитьЗначенияСвойств(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС, Выборка);
			РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаНачало = Дата(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаПервыйГод, 1, 1) ;
			РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаОкончание = КонецДня(Дата(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаВторойГод, 12, 31));

			ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС = УчетПособийСоциальногоСтрахования.ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС, ТаблицыДанныхОСреднем);
			ДанныеДокумента.ПараметрыРасчета = ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС.ПараметрыРасчета;
			ДанныеДокумента.ДанныеРасчетаСреднего = ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС.ДанныеРасчетаСреднего;
			
			ДанныеДокументов.Добавить(ДанныеДокумента);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат ДанныеДокументов;
	
КонецФункции

#КонецОбласти

Функция ДатаНаступленияСтраховогоСлучая(Ссылка) Экспорт 
	
	ДатаНаступленияСтраховогоСлучая = Неопределено;
	
	Если ЗначениеЗаполнено(Ссылка) И ТипЗнч(Ссылка) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ДатаНаступленияСтраховогоСлучая = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ДатаНачалаСобытия");
	КонецЕсли;
	
	Возврат ДатаНаступленияСтраховогоСлучая;	
	
КонецФункции

// Возвращает описание документов с полями ПараметрыРасчета и ДанныеРасчетаСреднего. 
// 	ПараметрыРасчета - см. УчетПособийСоциальногоСтрахованияРасширенныйКлиентСервер.ПараметрыРасчетаСреднегоДневногоЗаработкаФСС()
// 	ДанныеРасчетаСреднего - см. УчетПособийСоциальногоСтрахованияРасширенныйКлиентСервер.ДанныеРасчетаСреднегоЗаработкаФСС
//
// Параметры:
//	 МассивСсылок 		- массив ссылок на документ БольничныйЛист, по которым получаем данные.
// 
// Возвращаемое значение: Соответствие, ключ - ссылка на больничный лист, значение - Структура("ПараметрыРасчета,ДанныеРасчетаСреднего") 
//
Функция ДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(МассивСсылок) Экспорт
	
	ДанныеДокументов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);

	УчетПособийСоциальногоСтрахования.СоздатьВТДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(Запрос.МенеджерВременныхТаблиц, МассивСсылок);
	  	
	СоздатьВТКадровыеДанныеСотрудниковБольничныхЛистов(Запрос, МассивСсылок);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.ДатаНачалаСобытия,
	|	ДанныеДокументов.ПрименятьПредельнуюВеличину,
	|	ДанныеДокументов.ИспользоватьДниБолезниУходаЗаДетьми,
	|	ДанныеДокументов.ПериодРасчетаСреднегоЗаработкаПервыйГод,
	|	ДанныеДокументов.ПериодРасчетаСреднегоЗаработкаВторойГод,
	|	ДанныеДокументов.РайонныйКоэффициентРФ,
	|	ДанныеДокументов.ДоляНеполногоВремени,
	|	ДанныеДокументов.МинимальныйРазмерОплатыТрудаРФ,
	|	ВТКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТДанныеДокументовДляРасчетаСреднегоЗаработкаФСС КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО ДанныеДокументов.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И ДанныеДокументов.ДатаНачалаСобытия = ВТКадровыеДанныеСотрудников.Период";	
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицыДанныхОСреднем = УчетПособийСоциальногоСтрахования.ТаблицыДанныхСреднегоЗаработкаФСС("БольничныйЛист", МассивСсылок);
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС = УчетПособийСоциальногоСтрахования.РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС();
			ЗаполнитьЗначенияСвойств(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС, Выборка);
			РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаНачало = Дата(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаПервыйГод, 1, 1) ;
			РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаОкончание = Дата(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС.ПериодРасчетаСреднегоЗаработкаВторойГод, 12, 31);

			ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС = УчетПособийСоциальногоСтрахования.ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС(РеквизитыДокументаДляРасчетаСреднегоЗаработкаФСС, ТаблицыДанныхОСреднем);
			
			ДанныеДокументов.Вставить(Выборка.Ссылка, ДанныеДокументаДляРасчетаСреднегоЗаработкаФСС);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат ДанныеДокументов;
	
КонецФункции

Процедура СоздатьВТКадровыеДанныеСотрудниковБольничныхЛистов(Запрос, МассивСсылок)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БольничныйЛист.Сотрудник,
	|	БольничныйЛист.ДатаНачалаСобытия КАК Период
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.Ссылка В(&МассивСсылок)";
	Запрос.Выполнить();
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина, "ФизическоеЛицо,ФИОПолные,ТабельныйНомер,Подразделение,Должность,ВидЗанятости");
	
КонецПроцедуры

Процедура ЗаполнитьДанныеСреднегоЗаработкаПоПредыдущемуДокументу(Объект, Годы) Экспорт
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
		Запрос.УстановитьПараметр("Годы", Годы);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	БольничныйЛист.Ссылка,
			|	БольничныйЛист.ПериодРасчетаСреднегоЗаработкаПервыйГод КАК Год,
			|	БольничныйЛист.Дата КАК Дата
			|ПОМЕСТИТЬ ВТДокументыСГодами
			|ИЗ
			|	Документ.БольничныйЛист КАК БольничныйЛист
			|ГДЕ
			|	БольничныйЛист.Проведен
			|	И БольничныйЛист.Сотрудник = &Сотрудник
			|	И БольничныйЛист.Ссылка.ПериодРасчетаСреднегоЗаработкаПервыйГод В(&Годы)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	БольничныйЛист.Ссылка,
			|	БольничныйЛист.ПериодРасчетаСреднегоЗаработкаВторойГод,
			|	БольничныйЛист.Дата
			|ИЗ
			|	Документ.БольничныйЛист КАК БольничныйЛист
			|ГДЕ
			|	БольничныйЛист.Проведен
			|	И БольничныйЛист.Сотрудник = &Сотрудник
			|	И БольничныйЛист.Ссылка.ПериодРасчетаСреднегоЗаработкаВторойГод В(&Годы)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументыСГодами.Год,
			|	МАКСИМУМ(ДокументыСГодами.Дата) КАК Дата
			|ПОМЕСТИТЬ ВТДокументыГодовСПоследнимиДатами
			|ИЗ
			|	ВТДокументыСГодами КАК ДокументыСГодами
			|
			|СГРУППИРОВАТЬ ПО
			|	ДокументыСГодами.Год
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МАКСИМУМ(ДокументыСГодами.Ссылка) КАК Ссылка,
			|	ДокументыСГодами.Год
			|ПОМЕСТИТЬ ВТДокументыСоСреднимЗаработком
			|ИЗ
			|	ВТДокументыСГодами КАК ДокументыСГодами
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыГодовСПоследнимиДатами КАК ДокументыГодовСПоследнимиДатами
			|		ПО ДокументыСГодами.Год = ДокументыГодовСПоследнимиДатами.Год
			|			И ДокументыСГодами.Дата = ДокументыГодовСПоследнимиДатами.Дата
			|
			|СГРУППИРОВАТЬ ПО
			|	ДокументыСГодами.Год";
		
		Запрос.Выполнить();
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	БольничныйЛистСреднийЗаработокФСС.ФизическоеЛицо,
			|	БольничныйЛистСреднийЗаработокФСС.Период,
			|	БольничныйЛистСреднийЗаработокФСС.Сумма
			|ИЗ
			|	ВТДокументыСоСреднимЗаработком КАК ПоследнийБольничный
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.СреднийЗаработокФСС КАК БольничныйЛистСреднийЗаработокФСС
			|		ПО ПоследнийБольничный.Ссылка = БольничныйЛистСреднийЗаработокФСС.Ссылка
			|			И ПоследнийБольничный.Год = БольничныйЛистСреднийЗаработокФСС.Ссылка.ПериодРасчетаСреднегоЗаработкаПервыйГод
			|			И (ПоследнийБольничный.Год = ГОД(БольничныйЛистСреднийЗаработокФСС.Период))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БольничныйЛистСреднийЗаработокФСС.ФизическоеЛицо,
			|	БольничныйЛистСреднийЗаработокФСС.Период,
			|	БольничныйЛистСреднийЗаработокФСС.Сумма
			|ИЗ
			|	ВТДокументыСоСреднимЗаработком КАК ПоследнийБольничный
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.СреднийЗаработокФСС КАК БольничныйЛистСреднийЗаработокФСС
			|		ПО ПоследнийБольничный.Ссылка = БольничныйЛистСреднийЗаработокФСС.Ссылка
			|			И ПоследнийБольничный.Год = БольничныйЛистСреднийЗаработокФСС.Ссылка.ПериодРасчетаСреднегоЗаработкаВторойГод
			|			И (ПоследнийБольничный.Год = ГОД(БольничныйЛистСреднийЗаработокФСС.Период))";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Объект.СреднийЗаработокФСС.Добавить(), Выборка);
			КонецЦикла;
			
		КонецЕсли;
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ФизическоеЛицо,
			|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.Период,
			|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ДнейБолезниУходаЗаДетьми
			|ИЗ
			|	ВТДокументыСоСреднимЗаработком КАК ПоследнийБольничный
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.ОтработанноеВремяДляСреднегоФСС КАК БольничныйЛистОтработанноеВремяДляСреднегоФСС
			|		ПО ПоследнийБольничный.Ссылка = БольничныйЛистОтработанноеВремяДляСреднегоФСС.Ссылка
			|			И ПоследнийБольничный.Год = БольничныйЛистОтработанноеВремяДляСреднегоФСС.Ссылка.ПериодРасчетаСреднегоЗаработкаПервыйГод
			|			И (ПоследнийБольничный.Год = ГОД(БольничныйЛистОтработанноеВремяДляСреднегоФСС.Период))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ФизическоеЛицо,
			|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.Период,
			|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ДнейБолезниУходаЗаДетьми
			|ИЗ
			|	ВТДокументыСоСреднимЗаработком КАК ПоследнийБольничный
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.ОтработанноеВремяДляСреднегоФСС КАК БольничныйЛистОтработанноеВремяДляСреднегоФСС
			|		ПО ПоследнийБольничный.Ссылка = БольничныйЛистОтработанноеВремяДляСреднегоФСС.Ссылка
			|			И ПоследнийБольничный.Год = БольничныйЛистОтработанноеВремяДляСреднегоФСС.Ссылка.ПериодРасчетаСреднегоЗаработкаВторойГод
			|			И (ПоследнийБольничный.Год = ГОД(БольничныйЛистОтработанноеВремяДляСреднегоФСС.Период))";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Объект.ОтработанноеВремяДляСреднегоФСС.Добавить(), Выборка);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область ЭЛН

// Возвращает соответствие, в котором ключ - имя поля больничного, а значение - имя поля ЭЛН.
Функция СоответствиеПолейЭЛН() Экспорт
	
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей.Вставить("НомерПервичногоЛисткаНетрудоспособности", 		"PREV_LN_CODE");
	СоответствиеПолей.Вставить("ПредоставленДубликатЛисткаНетрудоспособности", 	"DUPLICATE_FLAG");
	СоответствиеПолей.Вставить("ДатаВыдачиЛисткаНетрудоспособности", 			"LN_DATE");
	СоответствиеПолей.Вставить("НаименованиеМедицинскойОрганизации", 			"LPU_NAME");
	СоответствиеПолей.Вставить("АдресМедицинскойОрганизации", 					"LPU_ADDRESS");
	СоответствиеПолей.Вставить("ОГРНМедицинскойОрганизации", 					"LPU_OGRN");
	СоответствиеПолей.Вставить("КодПричиныНетрудоспособности", 					"REASON1");
	СоответствиеПолей.Вставить("ДополнительныйКодПричиныНетрудоспособности", 	"REASON2");
	СоответствиеПолей.Вставить("ВторойКодПричиныНетрудоспособности", 			"REASON3");
	СоответствиеПолей.Вставить("НомерЛисткаПоОсновномуМестуРаботы", 			"PARENT_CODE");
	СоответствиеПолей.Вставить("ДатаИзмененияКодаПричиныНетрудоспособности", 	"DATE1");
	СоответствиеПолей.Вставить("ДатаОкончанияПутевки", 							"DATE2");
	СоответствиеПолей.Вставить("НомерПутевки", 									"VOUCHER_NO");
	СоответствиеПолей.Вставить("ОГРН_Санатория", 								"VOUCHER_OGRN");
	СоответствиеПолей.Вставить("ПоУходуВозрастЛет1", 							"SERV1_AGE");
	СоответствиеПолей.Вставить("ПоУходуВозрастМесяцев1", 						"SERV1_MM");
	СоответствиеПолей.Вставить("ПоУходуРодственнаяСвязь1", 						"SERV1_RELATION_CODE");
	СоответствиеПолей.Вставить("ПоУходуФИО1", 									"SERV1_FIO");
	СоответствиеПолей.Вставить("ПоУходуВозрастЛет2", 							"SERV2_AGE");
	СоответствиеПолей.Вставить("ПоУходуВозрастМесяцев2", 						"SERV2_MM");
	СоответствиеПолей.Вставить("ПоУходуРодственнаяСвязь2", 						"SERV2_RELATION_CODE");
	СоответствиеПолей.Вставить("ПоУходуФИО2", 									"SERV2_FIO");
	СоответствиеПолей.Вставить("ПоставленаНаУчетВРанниеСрокиБеременности", 		"PREGN12W_FLAG");
	СоответствиеПолей.Вставить("ПериодНахожденияВСтационареСРебенкомС", 		"HOSPITAL_DT1");
	СоответствиеПолей.Вставить("ПериодНахожденияВСтационареСРебенкомПо", 		"HOSPITAL_DT2");
	СоответствиеПолей.Вставить("ДатаНаправленияВБюроМСЭ", 						"MSE_DT1");
	СоответствиеПолей.Вставить("ДатаРегистрацииДокументовМСЭ", 					"MSE_DT2");
	СоответствиеПолей.Вставить("ДатаОсвидетельствованияМСЭ", 					"MSE_DT3");
	СоответствиеПолей.Вставить("ГруппаИнвалидности", 							"MSE_INVALID_GROUP");
	СоответствиеПолей.Вставить("Хеш",					 						"LN_HASH");
	
	Возврат СоответствиеПолей;
	
КонецФункции

Функция ДанныеДляРеестраЭЛН(Больничный = Неопределено, Реестр = Неопределено) Экспорт
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(Больничный) Тогда
		Запрос.УстановитьПараметр("Ссылка", Больничный);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Больничный.Ссылка,
		|	Больничный.Сотрудник,
		|	Больничный.ДатаНачала КАК Период
		|ПОМЕСТИТЬ ВТБольничные
		|ИЗ
		|	Документ.БольничныйЛист КАК Больничный
		|ГДЕ
		|	Больничный.Ссылка = &Ссылка";
	ИначеЕсли Реестр <> Неопределено Тогда
		Запрос.УстановитьПараметр("Организация", Реестр.Организация);
		Запрос.УстановитьПараметр("ИсключаемыйДокумент", Реестр.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеестрСведенийУчтенных.ЛистокНетрудоспособности
		|ПОМЕСТИТЬ УчтенныеЗаявления
		|ИЗ
		|	Документ.РеестрДанныхЭЛНЗаполняемыхРаботодателем.ДанныеЭЛН КАК РеестрСведенийУчтенных
		|ГДЕ
		|	РеестрСведенийУчтенных.Ссылка <> &ИсключаемыйДокумент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Больничный.Ссылка,
		|	Больничный.Сотрудник,
		|	Больничный.ДатаНачала КАК Период
		|ПОМЕСТИТЬ ВТБольничные
		|ИЗ
		|	Документ.БольничныйЛист КАК Больничный
		|ГДЕ
		|	Больничный.Проведен
		|	И НЕ Больничный.Ссылка В
		|				(ВЫБРАТЬ
		|					УчтенныеЗаявления.ЛистокНетрудоспособности
		|				ИЗ
		|					УчтенныеЗаявления КАК УчтенныеЗаявления)
		|	И Больничный.Организация = &Организация";
	Иначе
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	КатегорииПособийЗаСчетФСС = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КатегорииПособийЗаСчетФСС();
	Запрос.УстановитьПараметр("КатегорииПособийЗаСчетФСС", КатегорииПособийЗаСчетФСС);
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТБольничные.Ссылка КАК ЛистокНетрудоспособности,
	|	МИНИМУМ(БольничныйЛистНачисления.ДатаНачала) КАК ДатаНачалаОплатыФСС,
	|	МАКСИМУМ(БольничныйЛистНачисления.ДатаОкончания) КАК ДатаОкончанияОплатыФСС,
	|	СУММА(БольничныйЛистНачисления.Результат) КАК СуммаОплатыЗаСчетФСС
	|ПОМЕСТИТЬ ВТПериодыОплатыЗаСчетФСС
	|ИЗ
	|	ВТБольничные КАК ВТБольничные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|			ПО БольничныйЛистНачисления.Начисление = Начисления.Ссылка
	|		ПО ВТБольничные.Ссылка = БольничныйЛистНачисления.Ссылка
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&КатегорииПособийЗаСчетФСС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТБольничные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТБольничные.Ссылка КАК ЛистокНетрудоспособности,
	|	СУММА(БольничныйЛистНачисления.Результат) КАК СуммаОплатыЗаСчетРаботодателя
	|ПОМЕСТИТЬ ВТОплатаЗаСчетРаботодателя
	|ИЗ
	|	ВТБольничные КАК ВТБольничные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|			ПО БольничныйЛистНачисления.Начисление = Начисления.Ссылка
	|		ПО ВТБольничные.Ссылка = БольничныйЛистНачисления.Ссылка
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТБольничные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТБольничные.Ссылка КАК ЛистокНетрудоспособности,
	|	СУММА(СреднийЗаработокФСС.Сумма) КАК БазаДляРасчетаСреднегоЗаработка
	|ПОМЕСТИТЬ ВТБазыДляРасчетаСреднегоЗаработка
	|ИЗ
	|	ВТБольничные КАК ВТБольничные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.СреднийЗаработокФСС КАК СреднийЗаработокФСС
	|		ПО ВТБольничные.Ссылка = СреднийЗаработокФСС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТБольничные.Ссылка";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТБольничные");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "ИНН,СтраховойНомерПФР,ВидЗанятости");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БольничныйЛист.Ссылка КАК ЛистокНетрудоспособности,
	|	БольничныйЛист.Сотрудник,
	|	БольничныйЛист.НомерЛисткаНетрудоспособности,
	|	БольничныйЛист.ОсновноеМестоРаботы,
	|	БольничныйЛист.ПриступитьКРаботеС,
	|	БольничныйЛист.УсловияИсчисленияКод1,
	|	БольничныйЛист.УсловияИсчисленияКод2,
	|	БольничныйЛист.УсловияИсчисленияКод3,
	|	БольничныйЛист.ДатаАктаН1,
	|	БольничныйЛист.ДатаНачалаРаботы,
	|	БольничныйЛист.СтажЛет,
	|	БольничныйЛист.СтажМесяцев,
	|	БольничныйЛист.СтажРасширенныйЛет,
	|	БольничныйЛист.СтажРасширенныйМесяцев,
	|	БольничныйЛист.ДатаНачала КАК ДатаНачалаОплаты,
	|	БольничныйЛист.ДатаОкончания КАК ДатаОкончанияОплаты,
	|	БольничныйЛист.ФинансированиеФедеральнымБюджетом,
	|	БольничныйЛист.СреднийДневнойЗаработок,
	|	ВТБазыДляРасчетаСреднегоЗаработка.БазаДляРасчетаСреднегоЗаработка,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаНачалаОплатыФСС,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаОкончанияОплатыФСС,
	|	ВТПериодыОплатыЗаСчетФСС.СуммаОплатыЗаСчетФСС,
	|	ВТОплатаЗаСчетРаботодателя.СуммаОплатыЗаСчетРаботодателя,
	|	КадровыеДанныеСотрудников.ИНН,
	|	КадровыеДанныеСотрудников.СтраховойНомерПФР КАК СНИЛС,
	|	КадровыеДанныеСотрудников.ВидЗанятости,
	|	БольничныйЛист.Хеш
	|ИЗ
	|	ВТБольничные КАК ВТБольничные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|		ПО ВТБольничные.Ссылка = БольничныйЛист.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ВТБольничные.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И ВТБольничные.Период = КадровыеДанныеСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОплатаЗаСчетРаботодателя КАК ВТОплатаЗаСчетРаботодателя
	|		ПО ВТБольничные.Ссылка = ВТОплатаЗаСчетРаботодателя.ЛистокНетрудоспособности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазыДляРасчетаСреднегоЗаработка КАК ВТБазыДляРасчетаСреднегоЗаработка
	|		ПО ВТБольничные.Ссылка = ВТБазыДляРасчетаСреднегоЗаработка.ЛистокНетрудоспособности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыОплатыЗаСчетФСС КАК ВТПериодыОплатыЗаСчетФСС
	|		ПО ВТБольничные.Ссылка = ВТПериодыОплатыЗаСчетФСС.ЛистокНетрудоспособности";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура ПослеЗагрузкиЭЛН(ДокументОбъект, ДанныеИзСервиса) Экспорт
	
	ЗаполнитьМедицинскуюОрганизацию(ДокументОбъект);
	ЗаполнитьДаты(ДокументОбъект);
	ЗаполнитьПричинуНетрудоспособностиИСлучайУходаЗаРебенком(ДокументОбъект);
	ЗаполнитьДнейПоУходу(ДокументОбъект, ДанныеИзСервиса);
	
КонецПроцедуры

// Заполнение медицинской организации.
Процедура ЗаполнитьМедицинскуюОрганизацию(Документ)
	Если Не ЗначениеЗаполнено(Документ.ОГРНМедицинскойОрганизации) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МедицинскиеОрганизации.Ссылка
	|ИЗ
	|	Справочник.МедицинскиеОрганизации КАК МедицинскиеОрганизации
	|ГДЕ
	|	МедицинскиеОрганизации.ОГРН = &ОГРН";
	Запрос.УстановитьПараметр("ОГРН", Документ.ОГРНМедицинскойОрганизации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Документ.МедицинскаяОрганизация = Выборка.Ссылка;
	Иначе
		МедОрганизация = Справочники.МедицинскиеОрганизации.СоздатьЭлемент();
		МедОрганизация.Наименование = Документ.НаименованиеМедицинскойОрганизации;
		МедОрганизация.ОГРН         = Документ.ОГРНМедицинскойОрганизации;
		МедОрганизация.Адрес        = Документ.АдресМедицинскойОрганизации;
		МедОрганизация.Записать();
		Документ.МедицинскаяОрганизация = МедОрганизация.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

// Заполнение дат оплаты и освобождения от работы.
Процедура ЗаполнитьДаты(Документ)
	
	Если ЗначениеЗаполнено(Документ.ОсвобождениеДатаНачала1) Тогда
		Документ.ДатаНачала    = Документ.ОсвобождениеДатаНачала1;
		Документ.ДатаОкончания = Документ.ОсвобождениеДатаОкончания1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Документ.ОсвобождениеДатаНачала2)
		И ЗначениеЗаполнено(Документ.ОсвобождениеДатаОкончания2) Тогда
		Если ЗначениеЗаполнено(Документ.ДатаНачала) Тогда
			Документ.ДатаНачала = Мин(Документ.ДатаНачала, Документ.ОсвобождениеДатаНачала2);
		Иначе
			Документ.ДатаНачала = Документ.ОсвобождениеДатаНачала2;
		КонецЕсли;
		Документ.ДатаОкончания = Макс(Документ.ДатаОкончания, Документ.ОсвобождениеДатаОкончания2);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Документ.ОсвобождениеДатаНачала3)
		И ЗначениеЗаполнено(Документ.ОсвобождениеДатаОкончания3) Тогда
		Если ЗначениеЗаполнено(Документ.ДатаНачала) Тогда
			Документ.ДатаНачала = Мин(Документ.ДатаНачала, Документ.ОсвобождениеДатаНачала3);
		Иначе
			Документ.ДатаНачала = Документ.ОсвобождениеДатаНачала3;
		КонецЕсли;
		Документ.ДатаОкончания = Макс(Документ.ДатаОкончания, Документ.ОсвобождениеДатаОкончания3);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет причину нетрудоспособности и случай ухода за ребенком.
Процедура ЗаполнитьПричинуНетрудоспособностиИСлучайУходаЗаРебенком(Документ)
	Стационар = ЗначениеЗаполнено(Документ.ПериодНахожденияВСтационареСРебенкомС);
	
	Если Документ.КодПричиныНетрудоспособности = "01"
		Или Документ.КодПричиныНетрудоспособности = "02" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "03" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.Карантин;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "04"
		Или Документ.КодПричиныНетрудоспособности = "07" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "05" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "06" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.Протезирование;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "08" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "09" Тогда
		
		ПоУходуВозраст = Неопределено;
		Если ЗначениеЗаполнено(Документ.ПоУходуВозрастЛет1) Тогда
			ПоУходуВозраст = Документ.ПоУходуВозрастЛет1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Документ.ПоУходуВозрастЛет2) Тогда
			ПоУходуВозраст = Мин(ПоУходуВозраст, Документ.ПоУходуВозрастЛет2);
		КонецЕсли;
		
		Если ПоУходуВозраст <> Неопределено Тогда
			Если ПоУходуВозраст < 7 Тогда
				Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
				Документ.СлучайУходаЗаБольнымРебенком = ?(Стационар,
					Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетВСтационаре,
					Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетАмбулаторно);
			ИначеЕсли ПоУходуВозраст > 7 И ПоУходуВозраст < 15 Тогда
				Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
				Документ.СлучайУходаЗаБольнымРебенком = ?(Стационар,
					Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетВСтационаре,
					Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетАмбулаторно);
			ИначеЕсли ПоУходуВозраст > 15 Тогда
				Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым;
			КонецЕсли;
		Иначе
			Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
		КонецЕсли;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "10"
		Или Документ.КодПричиныНетрудоспособности = "11" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание;
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "12" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
		Документ.СлучайУходаЗаБольнымРебенком = ?(Стационар,
			Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре,
			Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно);
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "13" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
		Документ.СлучайУходаЗаБольнымРебенком = ?(Стационар,
			Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомВСтационаре,
			Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно);
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "14" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
		Документ.СлучайУходаЗаБольнымРебенком = ?(Стационар,
			Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре,
			Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно);
		
	ИначеЕсли Документ.КодПричиныНетрудоспособности = "15" Тогда
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком;
		Документ.СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриВИЧ;
		
	Иначе
		Документ.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание;
	КонецЕсли;
	
КонецПроцедуры

// Заполнение количества дней по уходу.
Процедура ЗаполнитьДнейПоУходу(ДокументОбъект, ДанныеИзСервиса)
	
	Если ЗначениеЗаполнено(ДанныеИзСервиса.SERV1_DT1) И ЗначениеЗаполнено(ДанныеИзСервиса.SERV1_DT2) Тогда
		ДокументОбъект.ПоУходуИспользованоДней1 = Окр((ДанныеИзСервиса.SERV1_DT2 - ДанныеИзСервиса.SERV1_DT1) / 86400);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеИзСервиса.SERV1_DT1) И ЗначениеЗаполнено(ДанныеИзСервиса.SERV1_DT2) Тогда
		ДокументОбъект.ПоУходуИспользованоДней2 = Окр((ДанныеИзСервиса.SERV2_DT2 - ДанныеИзСервиса.SERV2_DT1) / 86400);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
