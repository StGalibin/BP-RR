#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура СформироватьДвиженияИмпортТоваровТС(ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВедетсяУчетИмпортныхТоваров") Тогда
		Возврат;
	КонецЕсли;

	Параметры = ПодготовитьПараметрыИмпортТоваровТС(ТаблицаРеквизиты);
	
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Если  Реквизиты.ЕстьТовары
		И УчетНДС.КонтрагентРезидентТаможенногоСоюза(Реквизиты.Контрагент)
		И НЕ Реквизиты.УчетАгентскогоНДС Тогда
	
		Движение = Движения.ИмпортТоваровТаможенныйСоюз.Добавить();
		
		Движение.Организация         = Реквизиты.Организация;
		Движение.ДатаПериода         = НачалоМесяца(Реквизиты.Период);
		Движение.ДокументПоступления = Реквизиты.Регистратор;
		
		Движения.ИмпортТоваровТаможенныйСоюз.Записывать = Истина;
		
		Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(Перечисления.ВидыНалогов.НДС_ВвозимыеТовары);
	
	КонецЕсли; 
	
КонецПроцедуры

Функция ПодготовитьПараметрыИмпортТоваровТС(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                   // <Дата>
	+ "Регистратор,"              // <ДокументСсылка>
	+ "Организация,"              // <СправочникСсылка.Организации>
	+ "ЕстьТовары,"              // <Булево>
	+ "УчетАгентскогоНДС,"              // <Булево>
	+ "Контрагент"              // <СправочникСсылка.Контрагенты>
	;
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

#КонецЕсли