#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьНастройкиФормы();
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыполненОбменГИСМ"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусГИСМФормахВДокументах)) Тогда
		
		ОбновитьСпискиДокументов();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	ИнтеграцияГИСМКлиент.ВыполнитьОбмен();

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛичныйКабинет(Команда)
	
	ПерейтиПоНавигационнойСсылке("http://markirovka.nalog.ru");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыНоменклатуры(Команда)
	
	ИнтеграцияГИСМКлиентПереопределяемый.ОткрытьФормуСпискаВидыНоменклатуры(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНоменклатуру(Команда)
	
	ИнтеграцияГИСМКлиентПереопределяемый.ОткрытьФормуСпискаНоменклатуры(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКодыТНВЭД(Команда)
	
	ИнтеграцияГИСМКлиентПереопределяемый.ОткрытьФормуСпискаКлассификатораТНВЭД(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыМеха(Команда)
	
	ОткрытьФорму("Справочник.ВидыМехаГИСМ.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаМаркировки(Команда)
	
	ОткрытьФорму("Обработка.ПанельАдминистрирования1СМаркировка.Форма.Настройки1СМаркировка", , ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНастройкиФормы()

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Панель1СМаркировка", "Организация", Организация);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Панель1СМаркировка", "Ответственный", Ответственный);

КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиФормы()

	Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Панель1СМаркировка", "Организация", Организация);
	Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Панель1СМаркировка", "Ответственный", Ответственный);

КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиДокументов()
	
	МассивЗапросов = Новый Массив();
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ) Тогда
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбОтгрузке");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбОтгрузкеОформите");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбОтгрузкеОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбОтгрузкеОжидайте");
	КонецЕсли;
		
	Если ИнтеграцияГИСМПереопределяемый.ДоступенОтчетОРозничныхПродажах() Тогда
		МассивЗапросов.Добавить("ТекстЗапросаОтчетыОРозничныхПродажах");
		МассивЗапросов.Добавить("ТекстЗапросаОтчетыОРозничныхПродажахОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаОтчетыОРозничныхПродажахОжидайте");
	КонецЕсли;
		
	Если ИнтеграцияГИСМПереопределяемый.ДоступенВозвратТоваровОтРозничногоКлиента() Тогда
		МассивЗапросов.Добавить("ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов");
		МассивЗапросов.Добавить("ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте");
	КонецЕсли;
		
	//ГИСМБП
	// Исключена обработка документов:
	// - МаркировкаТоваровГИСМ
	// - ПеремаркировкаТоваровГИСМ
	//Конец ГИСМБП
			
	Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОСписанииКиЗГИСМ) Тогда
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОСписанииКиЗГИСМ");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОСписанииКиЗГИСМОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОСписанииКиЗГИСМОжидайте");
	КонецЕсли;
	
	//ГИСМБП
	// Исключена обработка документов:
	// - ЗаявкаНаВыпускКиЗГИСМ
	//Конец ГИСМБП
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ) Тогда
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОПоступлении");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОПоступленииОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОПоступленииОжидайте");
	КонецЕсли;
		
	Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ) Тогда
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОВвозеИзЕАЭС");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОВвозеИзЕАЭСОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОВвозеИзЕАЭСОжидайте");
	КонецЕсли;
		
	Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ) Тогда
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбИмпорте");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбИмпортеОформите");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбИмпортеОтработайте");
		МассивЗапросов.Добавить("ТекстЗапросаУведомленияОбИмпортеОжидайте");
	КонецЕсли;
	
	Если МассивЗапросов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "";
		
	Для Каждого ТекЭлемент Из МассивЗапросов Цикл
		
		// Уведомления об отгрузке
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбОтгрузке" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбОтгрузке();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбОтгрузкеОформите" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбОтгрузкеОформите();
		КонецЕсли;

		Если ТекЭлемент = "ТекстЗапросаУведомленияОбОтгрузкеОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбОтгрузкеОтработайте();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбОтгрузкеОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбОтгрузкеОжидайте();
		КонецЕсли;
		
		// Отчеты о розничных продажах

		Если ТекЭлемент = "ТекстЗапросаОтчетыОРозничныхПродажах" Тогда
			ТекстЗапроса = ТекстЗапроса + ИнтеграцияГИСМПереопределяемый.ТекстЗапросаОтчетыОРозничныхПродажах();
		КонецЕсли;

		Если ТекЭлемент = "ТекстЗапросаОтчетыОРозничныхПродажахОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + ИнтеграцияГИСМПереопределяемый.ТекстЗапросаОтчетыОРозничныхПродажахОтработайте();
		КонецЕсли;

		Если ТекЭлемент = "ТекстЗапросаОтчетыОРозничныхПродажахОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + ИнтеграцияГИСМПереопределяемый.ТекстЗапросаОтчетыОРозничныхПродажахОжидайте();
		КонецЕсли;

		// Возвраты товаров от розничных клиентов
		
		Если ТекЭлемент = "ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов" Тогда
			ТекстЗапроса = ТекстЗапроса + ИнтеграцияГИСМПереопределяемый.ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов();
		КонецЕсли;
			
		Если ТекЭлемент = "ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + ИнтеграцияГИСМПереопределяемый.ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте();
		КонецЕсли;
			
		Если ТекЭлемент = "ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + ИнтеграцияГИСМПереопределяемый.ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте();
		КонецЕсли;
		
		//ГИСМБП
		// Исключена обработка документов:
		// - МаркировкаТоваровГИСМ
		// - ПеремаркировкаТоваровГИСМ
		//Конец ГИСМБП

		// Уведомления о списании КиЗ
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОСписанииКиЗГИСМ" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОСписанииКиЗГИСМ.ТекстЗапросаУведомленияОСписанииКиЗГИСМ();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОСписанииКиЗГИСМ.ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОСписанииКиЗГИСМОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОСписанииКиЗГИСМ.ТекстЗапросаУведомленияОСписанииКиЗГИСМОтработайте();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОСписанииКиЗГИСМОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОСписанииКиЗГИСМ.ТекстЗапросаУведомленияОСписанииКиЗГИСМОжидайте();
		КонецЕсли;
		
		// Уведомления о ввозе из ЕАЭС
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОВвозеИзЕАЭС" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.ТекстЗапросаУведомленияОВвозеИзЕАЭС();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОВвозеИзЕАЭСОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.ТекстЗапросаУведомленияОВвозеИзЕАЭСОтработайте();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОВвозеИзЕАЭСОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.ТекстЗапросаУведомленияОВвозеИзЕАЭСОжидайте();
		КонецЕсли;
		
		// Уведомления об импорте
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбИмпорте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбИмпорте();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбИмпортеОформите" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбИмпортеОформите();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбИмпортеОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбИмпортеОтработайте();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОбИмпортеОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОбИмпортеОжидайте();
		КонецЕсли;
		
		//ГИСМБП
		// Исключена обработка документов:
		// - ЗаявкаНаВыпускКиЗГИСМ
		//Конец ГИСМБП

		// Уведомления о поступлении
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОПоступлении" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОПоступлении();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОПоступленииОтработайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОПоступленииОтработайте();
		КонецЕсли;
		
		Если ТекЭлемент = "ТекстЗапросаУведомленияОПоступленииОжидайте" Тогда
			ТекстЗапроса = ТекстЗапроса + Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ.ТекстЗапросаУведомленияОПоступленииОжидайте();
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("Организация", ?(ЗначениеЗаполнено(Организация), Организация, Неопределено));
	ПараметрыЗапроса.Вставить("Ответственный", Неопределено);
	
	Для Каждого ТекПараметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ТекПараметр.Ключ, ТекПараметр.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТекстОформите    = НСтр("ru = 'оформите'");
	ТекстОтработайте = НСтр("ru = 'отработайте'");
	ТекстОжидайте    = НСтр("ru = 'ожидайте'");
	
	Для ТекИндекс = 0 По МассивЗапросов.Количество()-1 Цикл
		
		Выборка = РезультатЗапроса[ТекИндекс].Выбрать();
		
		// Уведомления об отгрузке
		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ) Тогда
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбОтгрузке" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбОтгрузке, НСтр("ru = 'Уведомления об отгрузке'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбОтгрузкеОформите" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбОтгрузкеОформите, ТекстОформите);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбОтгрузкеОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбОтгрузкеОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбОтгрузкеОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбОтгрузкеОжидайте, ТекстОжидайте);
			КонецЕсли;
			
		Иначе
			
			Элементы.ОткрытьУведомленияОбОтгрузке.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОбОтгрузкеОформите.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОбОтгрузкеОтработайте.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОбОтгрузкеОжидайте.Видимость = Ложь;
			
		КонецЕсли;
		
		// Отчеты о розничных продажах
		Если ИнтеграцияГИСМПереопределяемый.ДоступенОтчетОРозничныхПродажах() Тогда
		
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаОтчетыОРозничныхПродажах" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьОтчетыОРозничныхПродажах, НСтр("ru = 'Уведомления о розничных продажах'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаОтчетыОРозничныхПродажахОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьОтчетыОРозничныхПродажахОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаОтчетыОРозничныхПродажахОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьОтчетыОРозничныхПродажахОжидайте, ТекстОжидайте);
			КонецЕсли;
			
			Элементы.ОткрытьОтчетыОРозничныхПродажахОформите.Видимость = Истина;
			
		Иначе
			
			Элементы.ОткрытьОтчетыОРозничныхПродажах.Видимость = Ложь;
			Элементы.ОткрытьОтчетыОРозничныхПродажахОтработайте.Видимость = Ложь;
			Элементы.ОткрытьОтчетыОРозничныхПродажахОжидайте.Видимость = Ложь;
			Элементы.ОткрытьОтчетыОРозничныхПродажахОформите.Видимость = Ложь;
		
		КонецЕсли;
		
		// Возвраты товаров от розничных клиентов
		Если ИнтеграцияГИСМПереопределяемый.ДоступенВозвратТоваровОтРозничногоКлиента() Тогда
		
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентов, НСтр("ru = 'Уведомления о розничных возвратах'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентовОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентовОжидайте, ТекстОжидайте);
			КонецЕсли;
			
			Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентовОформите.Видимость = Истина;
			
		Иначе
			
			Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентов.Видимость = Ложь;
			Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентовОтработайте.Видимость = Ложь;
			Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентовОжидайте.Видимость = Ложь;
			Элементы.ОткрытьВозвратыТоваровОтРозничныхКлиентовОформите.Видимость = Ложь;
			
		КонецЕсли;
		
		//ГИСМБП
		// Исключена обработка документов:
		// - МаркировкаТоваровГИСМ
		// - ПеремаркировкаТоваровГИСМ
		//Конец ГИСМБП
		
		// Уведомления о списании КиЗ
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОСписанииКиЗГИСМ) Тогда
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОСписанииКиЗГИСМ" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьСписанияКиЗМаркировки, НСтр("ru = 'Уведомления о списании КиЗ'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьСписанияКиЗМаркировкиОформите, ТекстОформите);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОСписанииКиЗГИСМОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьСписанияКиЗМаркировкиОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОСписанииКиЗГИСМОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьСписанияКиЗМаркировкиОжидайте, ТекстОжидайте);
			КонецЕсли;
			
		Иначе
			
			Элементы.ОткрытьСписанияКиЗМаркировки.Видимость = Ложь;
			Элементы.ОткрытьСписанияКиЗМаркировкиОформите.Видимость = Ложь;
			Элементы.ОткрытьСписанияКиЗМаркировкиОтработайте.Видимость = Ложь;
			Элементы.ОткрытьСписанияКиЗМаркировкиОжидайте.Видимость = Ложь;
			
		КонецЕсли;
		
		//ГИСМБП
		// Исключена обработка документов:
		// - ЗаявкаНаВыпускКиЗГИСМ
		//Конец ГИСМБП
		
		// Уведомления о поступлении
		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ) Тогда
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОПоступлении" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваров, НСтр("ru = 'Уведомления о поступлении и возврате'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОПоступленииОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваровОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОПоступленииОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваровОжидайте, ТекстОжидайте);
			КонецЕсли;
			
			Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваровОформите.Видимость = Истина;
			
		Иначе
			
			Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваров.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваровОтработайте.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваровОжидайте.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОПоступленииМаркированныхТоваровОформите.Видимость = Ложь;
			
		КонецЕсли;
		
		// Уведомления о ввозе из ЕАЭС
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ) Тогда
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОВвозеИзЕАЭС" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭС, НСтр("ru = 'Уведомления о ввозе из ЕАЭС'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОформите, ТекстОформите);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОВвозеИзЕАЭСОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОВвозеИзЕАЭСОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОжидайте, ТекстОжидайте);
			КонецЕсли;
			
		Иначе
			
			Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭС.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОформите.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОтработайте.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОжидайте.Видимость = Ложь;
			
		КонецЕсли;
		
		// Уведомления об импорте
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ) Тогда
		
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбИмпорте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваров, НСтр("ru = 'Уведомления об импорте'"));
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбИмпортеОформите" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваровОформите, ТекстОформите);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбИмпортеОтработайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваровОтработайте, ТекстОтработайте);
			КонецЕсли;
			
			Если МассивЗапросов[ТекИндекс] = "ТекстЗапросаУведомленияОбИмпортеОжидайте" Тогда
				ВывестиПоказатель(Выборка, Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваровОжидайте, ТекстОжидайте);
			КонецЕсли;
			
		Иначе
			
			Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваров.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваровОформите.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваровОтработайте.Видимость = Ложь;
			Элементы.ОткрытьУведомленияОбИмпортеМаркированныхТоваровОжидайте.Видимость = Ложь;
			
		КонецЕсли;
			
	КонецЦикла;
		
	// Отчет
	Если ПравоДоступа("Использование", Метаданные.Отчеты.ПоступленияБезДокументовГИСМ) Тогда
		Элементы.ОтчетПоступленияБезДокументовГИСМ.Видимость = Истина;
		Элементы.ОтчетПоступленияБезДокументовГИСМ2.Видимость = Истина;
		Элементы.ОтчетПоступленияБезДокументовГИСМ3.Видимость = Истина;
		Элементы.ОтчетПоступленияБезДокументовГИСМ4.Видимость = Истина;
	Иначе
		Элементы.ОтчетПоступленияБезДокументовГИСМ.Видимость = Ложь;
		Элементы.ОтчетПоступленияБезДокументовГИСМ2.Видимость = Ложь;
		Элементы.ОтчетПоступленияБезДокументовГИСМ3.Видимость = Ложь;
		Элементы.ОтчетПоступленияБезДокументовГИСМ4.Видимость = Ложь;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаДокументыОжидающиеОтправки();
	
	Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Организация", ?(ЗначениеЗаполнено(Организация), Организация, Неопределено));
		Запрос.УстановитьПараметр("Ответственный", Неопределено);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() И Выборка.КоличествоДокументов > 0 Тогда
			ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Есть документы (%1), ожидающие отправки в ГИСМ. Выполните обмен.'"), Выборка.КоличествоДокументов);
			Элементы.НадписьДокументыОжидающиеОтправки.Заголовок = ТекстЗаголовка;
			Элементы.ДекорацияДокументыОжидающиеОтправки.Видимость = Истина;
			Элементы.НадписьДокументыОжидающиеОтправки.Видимость = Истина;
		Иначе
			Элементы.ДекорацияДокументыОжидающиеОтправки.Видимость = Ложь;
			Элементы.НадписьДокументыОжидающиеОтправки.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		
		Элементы.ДекорацияДокументыОжидающиеОтправки.Видимость = Ложь;
		Элементы.НадписьДокументыОжидающиеОтправки.Видимость = Ложь;
		
	КонецЕсли;
	
	СохранитьНастройкиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиПоказатель(Выборка, Кнопка, ТекстПоказателя)
	
	КоличествоДокументов = ?(Выборка.Следующий(), Выборка.КоличествоДокументов, 0);
	Если КоличествоДокументов > 0 Тогда
		ТекстЗаголовка = ТекстПоказателя + " (" + КоличествоДокументов + ")";
		ЦветТекста = ЦветаСтиля.ЦветГиперссылкиГИСМ;
	Иначе
		ТекстЗаголовка = ТекстПоказателя;
		ЦветТекста = ЦветаСтиля.ЦветТекстаНеТребуетВниманияГИСМ;
	КонецЕсли;
	Кнопка.Заголовок = ТекстЗаголовка;
	Кнопка.ЦветТекста = ЦветТекста;
	Кнопка.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаДокументов(ИмяФормы, 
	                                   ДальнейшееДействиеГИСМ = Неопределено,
	                                   ОткрытьРаспоряжения = Ложь,
	                                   ИмяПоляОтветственный = Неопределено,
	                                   ИмяПоляОрганизация = Неопределено)
	
	СтруктураБыстрогоОтбора = Новый Структура();
	ПараметрыФормы = Новый Структура;
	
	Если ОткрытьРаспоряжения Тогда
		ПараметрыФормы.Вставить("ОткрытьРаспоряжения", Истина);
	Иначе
		СтруктураБыстрогоОтбора.Вставить("ДальнейшееДействиеГИСМ", ДальнейшееДействиеГИСМ);
	КонецЕсли;
	
	Если ИмяПоляОтветственный = Неопределено Тогда
		ИмяПоляОтветственный = "Ответственный";
	КонецЕсли;
	
	Если ИмяПоляОрганизация = Неопределено Тогда
		ИмяПоляОрганизация = "Организация";
	КонецЕсли;
	
	СтруктураБыстрогоОтбора.Вставить(ИмяПоляОтветственный, Ответственный);
	СтруктураБыстрогоОтбора.Вставить(ИмяПоляОрганизация, Организация);
	
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	ОткрытьФорму(ИмяФормы, ПараметрыФормы,,,,,);
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаДокументыОжидающиеОтправки() Экспорт
	
	МассивЗапросов = Новый Массив();
	ТекстЗапроса = "";
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ) Тогда
		
		МассивЗапросов.Добавить("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
		|ИЗ
		|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
		|ГДЕ
		|	(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ДальнейшееДействие В (
		|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
		|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
		|	)
		|	И (СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке.Организация = &Организация
		|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|	И (СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке.Ответственный = &Ответственный
		|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ОБЪЕДИНИТЬ ВСЕ
		|");
		
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ) Тогда
		
		МассивЗапросов.Добавить("
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
		|ИЗ
		|	РегистрСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ КАК СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ
		|ГДЕ
		|	(СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ДальнейшееДействие В (
		|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
		|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
		|	)
		|	И (СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.Документ.Организация = &Организация
		|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|	И (СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.Документ.Ответственный = &Ответственный
		|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ОБЪЕДИНИТЬ ВСЕ
		|");
		
	КонецЕсли;
	
	//ГИСМБП
	// Исключена обработка документов:
	// - ЗаявкаНаВыпускКиЗГИСМ
	//Конец ГИСМБП

	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СтатусыИнформированияГИСМ) Тогда
		
		//ГИСМБП
		// Исключена обработка документов:
		// - МаркировкаТоваровГИСМ
		// - ПеремаркировкаТоваровГИСМ
		//Конец ГИСМБП


		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ) Тогда
		
			МассивЗапросов.Добавить("
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
			|ИЗ
			|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
			|ГДЕ
			|	(СтатусыИнформированияГИСМ.ДальнейшееДействие В (
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
			|	)
			|	И СтатусыИнформированияГИСМ.ТекущееУведомление ССЫЛКА Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ
			|	И (СтатусыИнформированияГИСМ.ТекущееУведомление.Организация = &Организация
			|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
			|	И (СтатусыИнформированияГИСМ.ТекущееУведомление.Ответственный = &Ответственный
			|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
			|/////////////////////////////////////////////////////////////////////////////
			|ОБЪЕДИНИТЬ ВСЕ
			|");
			
		КонецЕсли;

		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ) Тогда
		
			МассивЗапросов.Добавить("
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
			|ИЗ
			|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
			|ГДЕ
			|	(СтатусыИнформированияГИСМ.ДальнейшееДействие В (
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
			|	)
			|	И СтатусыИнформированияГИСМ.ТекущееУведомление ССЫЛКА Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ
			|	И (СтатусыИнформированияГИСМ.ТекущееУведомление.Организация = &Организация
			|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
			|	И (СтатусыИнформированияГИСМ.ТекущееУведомление.Ответственный = &Ответственный
			|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
			|/////////////////////////////////////////////////////////////////////////////
			|ОБЪЕДИНИТЬ ВСЕ
			|");
			
		КонецЕсли;
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОСписанииКиЗГИСМ) Тогда
		
			МассивЗапросов.Добавить("
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
			|ИЗ
			|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
			|ГДЕ
			|	(СтатусыИнформированияГИСМ.ДальнейшееДействие В (
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
			|	)
			|	И СтатусыИнформированияГИСМ.ТекущееУведомление ССЫЛКА Документ.УведомлениеОСписанииКиЗГИСМ
			|	И (СтатусыИнформированияГИСМ.ТекущееУведомление.Организация = &Организация
			|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
			|	И (СтатусыИнформированияГИСМ.ТекущееУведомление.Ответственный = &Ответственный
			|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
			|/////////////////////////////////////////////////////////////////////////////
			|ОБЪЕДИНИТЬ ВСЕ
			|");
			
		КонецЕсли;
		
		Если ИнтеграцияГИСМПереопределяемый.ДоступенОтчетОРозничныхПродажах() Тогда
			ТекстЗапросаВрем = ИнтеграцияГИСМПереопределяемый.ТекстЗапросаКоличествоОтчетовОРозничныхПродажахОжидающиеОтправки();
			Если ЗначениеЗаполнено(ТекстЗапросаВрем) Тогда
				МассивЗапросов.Добавить(ТекстЗапросаВрем);
			КонецЕсли;
		КонецЕсли;
		
		Если ИнтеграцияГИСМПереопределяемый.ДоступенВозвратТоваровОтРозничногоКлиента() Тогда
			ТекстЗапросаВрем = ИнтеграцияГИСМПереопределяемый.ТекстЗапросаКоличествоВозвратовОтРозничныхКлиентовОжидающиеОтправки();
			Если ЗначениеЗаполнено(ТекстЗапросаВрем) Тогда
				МассивЗапросов.Добавить(ТекстЗапросаВрем);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Индекс = 0;
	Для Индекс = 0 По МассивЗапросов.Количество()-1 Цикл
		Если Индекс = 0 Тогда
			МассивЗапросов[Индекс] = СтрЗаменить(МассивЗапросов[Индекс], "ВЫБРАТЬ", "ВЫБРАТЬ РАЗРЕШЕННЫЕ");
			МассивЗапросов[Индекс] = СтрЗаменить(МассивЗапросов[Индекс], "ИЗ", "ПОМЕСТИТЬ ВсеДокументы ИЗ");
		КонецЕсли;
		Если Индекс = МассивЗапросов.Количество()-1 Тогда
			МассивЗапросов[Индекс] = СтрЗаменить(МассивЗапросов[Индекс], "ОБЪЕДИНИТЬ ВСЕ", "");
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + МассивЗапросов[Индекс];
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат ТекстЗапроса;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВсеДокументы.КоличествоДокументов),0) КАК КоличествоДокументов
		|ИЗ
		|	ВсеДокументы
		|";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Уведомления об отгрузке

&НаКлиенте
Процедура ОткрытьУведомленияОбОтгрузке(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействияИлиОжидания");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОбОтгрузкеОформите(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		,
		Истина);
	
	КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьУведомленияОбОтгрузкеОтработайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействия");
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОбОтгрузкеОжидайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеОжидания");
	
КонецПроцедуры

// Отчеты о розничных продажах

&НаКлиенте
Процедура ОткрытьОтчетыОРозничныхПродажах(Команда)
	
	ПараметрыФормы = ИнтеграцияГИСМКлиентПереопределяемый.ПараметрыОткрытияСпискаОтчетыОРозничныхПродажах();
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДальнейшееДействиеГИСМ", "ВсеТребующиеДействияИлиОжидания");
	ОткрытьФормуСпискаДокументов(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ДальнейшееДействиеГИСМ,
		ПараметрыФормы.ОткрытьРаспоряжения,
		ПараметрыФормы.ИмяПоляОтветственный,
		ПараметрыФормы.ИмяПоляОрганизация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетыОРозничныхПродажахОтработайте(Команда)

	ПараметрыФормы = ИнтеграцияГИСМКлиентПереопределяемый.ПараметрыОткрытияСпискаОтчетыОРозничныхПродажах();
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДальнейшееДействиеГИСМ", "ВсеТребующиеДействия");
	ОткрытьФормуСпискаДокументов(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ДальнейшееДействиеГИСМ,
		ПараметрыФормы.ОткрытьРаспоряжения,
		ПараметрыФормы.ИмяПоляОтветственный,
		ПараметрыФормы.ИмяПоляОрганизация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетыОРозничныхПродажахОжидайте(Команда)
	
	ПараметрыФормы = ИнтеграцияГИСМКлиентПереопределяемый.ПараметрыОткрытияСпискаОтчетыОРозничныхПродажах();
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДальнейшееДействиеГИСМ", "ВсеТребующиеОжидания");
	ОткрытьФормуСпискаДокументов(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ДальнейшееДействиеГИСМ,
		ПараметрыФормы.ОткрытьРаспоряжения,
		ПараметрыФормы.ИмяПоляОтветственный,
		ПараметрыФормы.ИмяПоляОрганизация);
	
КонецПроцедуры

// Возвраты от розничных клиентов

&НаКлиенте
Процедура ОткрытьВозвратыТоваровОтРозничныхКлиентов(Команда)
	
	ПараметрыФормы = ИнтеграцияГИСМКлиентПереопределяемый.ПараметрыОткрытияСпискаВозвратыТоваровОтРозничныхКлиентов();
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДальнейшееДействиеГИСМ", "ВсеТребующиеДействияИлиОжидания");
	ОткрытьФормуСпискаДокументов(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ДальнейшееДействиеГИСМ,
		ПараметрыФормы.ОткрытьРаспоряжения,
		ПараметрыФормы.ИмяПоляОтветственный,
		ПараметрыФормы.ИмяПоляОрганизация);

	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВозвратыТоваровОтРозничныхКлиентовОтработайте(Команда)
	
	ПараметрыФормы = ИнтеграцияГИСМКлиентПереопределяемый.ПараметрыОткрытияСпискаВозвратыТоваровОтРозничныхКлиентов();
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДальнейшееДействиеГИСМ", "ВсеТребующиеДействия");
	ОткрытьФормуСпискаДокументов(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ДальнейшееДействиеГИСМ,
		ПараметрыФормы.ОткрытьРаспоряжения,
		ПараметрыФормы.ИмяПоляОтветственный,
		ПараметрыФормы.ИмяПоляОрганизация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВозвратыТоваровОтРозничныхКлиентовОжидайте(Команда)
	
	ПараметрыФормы = ИнтеграцияГИСМКлиентПереопределяемый.ПараметрыОткрытияСпискаВозвратыТоваровОтРозничныхКлиентов();
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДальнейшееДействиеГИСМ", "ВсеТребующиеОжидания");
	ОткрытьФормуСпискаДокументов(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ДальнейшееДействиеГИСМ,
		ПараметрыФормы.ОткрытьРаспоряжения,
		ПараметрыФормы.ИмяПоляОтветственный,
		ПараметрыФормы.ИмяПоляОрганизация);
	
КонецПроцедуры

// Списания КиЗ маркировки

&НаКлиенте
Процедура ОткрытьСписанияКиЗМаркировки(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОСписанииКиЗГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействияИлиОжидания");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписанияКиЗМаркировкиОформите(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОСписанииКиЗГИСМ.Форма.ФормаСпискаДокументов",
		,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписанияКиЗМаркировкиОтработайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОСписанииКиЗГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействия");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписанияКиЗМаркировкиОжидайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОСписанииКиЗГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеОжидания");
	
КонецПроцедуры

// Уведомление о поступлении маркированных товаров

&НаКлиенте
Процедура ОткрытьУведомленияОПоступленииМаркированныхТоваров(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействияИлиОжидания");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОПоступленииМаркированныхТоваровОтработайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействия");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОПоступленииМаркированныхТоваровОжидайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеОжидания");
	
КонецПроцедуры

// Уведомление о ввозе маркированных товаров из ЕАЭС

&НаКлиенте
Процедура ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭС(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействияИлиОжидания");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОформите(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Форма.ФормаСпискаДокументов",
		,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОтработайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействия");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОВвозеМаркированныхТоваровИзЕАЭСОжидайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеОжидания");
	
КонецПроцедуры

// Уведомление об импорте маркированных товаров

&НаКлиенте
Процедура ОткрытьУведомленияОбИмпортеМаркированныхТоваров(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействияИлиОжидания");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОбИмпортеМаркированныхТоваровОформите(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОбИмпортеМаркированныхТоваровОтработайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеДействия");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомленияОбИмпортеМаркированныхТоваровОжидайте(Команда)
	
	ОткрытьФормуСпискаДокументов(
		"Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Форма.ФормаСпискаДокументов",
		"ВсеТребующиеОжидания");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоступленияБезДокументовГИСМ(Команда)
	
	ПараметрыФормы = Новый Структура;
	Если ЗначениеЗаполнено(Организация) Тогда
		ПараметрыФормы.Вставить("Организация", Организация);
	КонецЕсли;
	//ГИСМБП
	//Используется форма отчет по умолчанию
	ОткрытьФорму("Отчет.ПоступленияБезДокументовГИСМ.Форма", ПараметрыФормы ,Истина);
	//КОНЕЦ ГИСМБП
	
КонецПроцедуры

#КонецОбласти
