
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере()
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Контрагент) Тогда
		ВызватьИсключение НСтр("ru='Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	Если ТипЗнч(Параметры.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный")
		И Параметры.СчетФактура <> Документы.СчетФактураПолученный.ПустаяСсылка()
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.СчетФактура, "ВозвратЧерезКомиссионера") Тогда 
		Возврат;
	КонецЕсли;
	
	СписокПодобранныхОснований = Параметры.ПодобранныеОснования;
	
	ОтборОрганизация = Параметры.Организация;
	ОтборКонтрагент  = Параметры.Контрагент;
	
	Если ТипЗнч(Параметры.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		ТипыОснований = УчетНДСПереопределяемый.ПолучитьСписокТиповПоВидуСчетаФактурыВыставленного(
			Параметры.ВидСчетаФактуры, Параметры.Исправление);
	Иначе
		ТипыОснований = УчетНДСПереопределяемый.ПолучитьСписокТиповПоВидуСчетаФактурыПолученного(
			Параметры.ВидСчетаФактуры, Параметры.Исправление);
	КонецЕсли;
	
	СписокОснований.ТекстЗапроса = ТекстЗапросаСпискаОснований(ТипыОснований, Параметры);
	
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Организация"       , ОтборОрганизация);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Контрагент"        , ОтборКонтрагент);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("ТекущийСчетФактура", Параметры.СчетФактура);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Выбранные"         , СписокПодобранныхОснований.ВыгрузитьЗначения());
	
	Если СтрНайти(СписокОснований.ТекстЗапроса, "&ВидОперацииДокументаКорректировки") > 0 Тогда
		
		Если Параметры.Исправление Тогда
			ВидОперацииДокументаКорректировки = ?(Параметры.ИсправлениеСобственнойОшибки, 
				Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеСобственнойОшибки,
				Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки);
		Иначе
			ВидОперацииДокументаКорректировки = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение;
		КонецЕсли;
		
		СписокОснований.Параметры.УстановитьЗначениеПараметра("ВидОперацииДокументаКорректировки", ВидОперацииДокументаКорректировки);
	КонецЕсли;
	
	Элементы.СписокОснований.ТекущаяСтрока = Параметры.ТекущийДокумент;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОснований

&НаКлиенте
Процедура СписокОснованийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработкаВыбораЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	Если Элементы.СписокОснований.ТекущиеДанные <> Неопределено Тогда
		Документ = Элементы.СписокОснований.ТекущиеДанные.Документ;
		ПоказатьЗначение( , Документ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаВыбораЗначения()
	
	ТекущиеДанные = Элементы.СписокОснований.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Недоступен Тогда 
		ПоказатьПредупреждение( , НСтр("ru='Этот документ уже выбран'"));
		Возврат;
	КонецЕсли;
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Документ"     , ТекущиеДанные.Документ);
	СтруктураВыбора.Вставить("Подразделение", ТекущиеДанные.ПодразделениеОрганизации);
	СтруктураВыбора.Вставить("Договор"      , ТекущиеДанные.ДоговорКонтрагента);
	СтруктураВыбора.Вставить("Валюта"       , ТекущиеДанные.ВалютаДокумента);
	
	ОповеститьОВыборе(СтруктураВыбора);
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаСпискаОснований(ТипыОснований, Параметры)
	
	ТекстЗапроса = "";
	ПервыйПодзапрос = Истина;
	Для Каждого ТипОснования Из ТипыОснований Цикл
		МетаданныеОснования = Метаданные.НайтиПоТипу(ТипОснования);
		Если Не ПравоДоступа("Редактирование", МетаданныеОснования) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстПодзапроса =
		"#ОператорВыбрать#
		|	Т.Организация КАК Организация,
		| " + ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", МетаданныеОснования),
				"Т.Контрагент КАК Контрагент,",
				""""" КАК Контрагент,") + "
		| " + ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаДокумента", МетаданныеОснования),
				"Т.СуммаДокумента КАК СуммаДокумента,",
				"0 КАК СуммаДокумента,") + "
		| " + ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ДоговорКонтрагента", МетаданныеОснования),
				"Т.ДоговорКонтрагента КАК ДоговорКонтрагента,",
				""""" КАК ДоговорКонтрагента,") + "
		| " + ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаДокумента", МетаданныеОснования),
				"Т.ВалютаДокумента КАК ВалютаДокумента,",
				""""" КАК ВалютаДокумента,") + "
		| " + ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ПодразделениеОрганизации", МетаданныеОснования),
				"Т.ПодразделениеОрганизации КАК ПодразделениеОрганизации,",
				""""" КАК ПодразделениеОрганизации,") + "
		|	ТИПЗНАЧЕНИЯ(Т.Ссылка) КАК ВидДокумента,
		|	Т.Дата КАК Дата,
		|	Т.Номер КАК Номер,
		|	Т.Ссылка КАК Документ
		|	#ИмяВременнойТаблицы#
		|ИЗ
		|	" + МетаданныеОснования.ПолноеИмя() + " КАК Т
		|
		|ГДЕ
		|	Т.Организация = &Организация
		| " + ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", МетаданныеОснования),
				" И Т.Контрагент = &Контрагент ",
				" ");
		
		Если ТипОснования = Тип("ДокументСсылка.КорректировкаПоступления")
			Или ТипОснования = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			ТекстПодзапроса = ТекстПодзапроса + " И Т.ВидОперации = &ВидОперацииДокументаКорректировки";
		КонецЕсли;
		
		Если ПервыйПодзапрос Тогда
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "#ИмяВременнойТаблицы#", "ПОМЕСТИТЬ ВТ_ДокументыОснования");
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "#ОператорВыбрать#", "ВЫБРАТЬ");
			ПервыйПодзапрос = Ложь;
		Иначе
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "#ИмяВременнойТаблицы#", "");
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "#ОператорВыбрать#", "ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ");
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТипЗнч(Параметры.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		ПолноеИмяСчетаФактуры = "СчетФактураВыданный";
	Иначе
		ПолноеИмяСчетаФактуры = "СчетФактураПолученный";
	КонецЕсли;
	
	ТекстПодзапроса =
	";
	|ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	СчетФактура.ДокументОснование КАК ДокументОснование,
	|	СчетФактура.Ссылка.Организация КАК Организация,
	|	СчетФактура.Ссылка.Контрагент КАК Контрагент,
	|	СчетФактура.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ВТ_СчетаФактуры
	|ИЗ
	|	Документ." + ПолноеИмяСчетаФактуры + ".ДокументыОснования КАК СчетФактура
	|ГДЕ
	|	СчетФактура.Ссылка.Организация = &Организация
	|	И СчетФактура.Ссылка.Контрагент = &Контрагент
	|	И НЕ СчетФактура.Ссылка.ПометкаУдаления";
	
	ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
	
	ТекстПодзапроса = 
	";
	|ВЫБРАТЬ
	|	ДокументыОснования.Организация КАК Организация,
	|	ДокументыОснования.Контрагент КАК Контрагент,
	|	ДокументыОснования.СуммаДокумента КАК СуммаДокумента,
	|	ДокументыОснования.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДокументыОснования.ВалютаДокумента КАК ВалютаДокумента,
	|	ДокументыОснования.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДокументыОснования.ВидДокумента КАК ВидДокумента,
	|	ДокументыОснования.Дата КАК Дата,
	|	ДокументыОснования.Номер КАК Номер,
	|	ДокументыОснования.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.Документ В (&Выбранные)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Недоступен,
	|	СчетаФактуры.Ссылка КАК СчетФактура
	|ИЗ ВТ_ДокументыОснования КАК ДокументыОснования
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактуры КАК СчетаФактуры
	|ПО ДокументыОснования.Организация = СчетаФактуры.Организация
	|	И ДокументыОснования.Контрагент = СчетаФактуры.Контрагент
	|	И ДокументыОснования.ДоговорКонтрагента = СчетаФактуры.ДоговорКонтрагента
	|	И ДокументыОснования.Документ = СчетаФактуры.ДокументОснование
	|ГДЕ
	|	СчетаФактуры.Ссылка ЕСТЬ NULL
	|		ИЛИ СчетаФактуры.Ссылка = &ТекущийСчетФактура";
	
	ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
