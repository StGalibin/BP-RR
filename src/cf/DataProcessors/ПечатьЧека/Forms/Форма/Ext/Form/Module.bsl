
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ПараметрыПечатиЧека") Тогда
		ВызватьИсключение НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
	КонецЕсли;
	
	Объект.СуммаВключаетНДС = Истина;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ПараметрыПечатиЧека, Организация, ИдентификаторУстройства");
	
	МенеджерОборудованияКлиентСервер.ПровестиФорматоЛогическийКонтроль(ПараметрыПечатиЧека, ИдентификаторУстройства);

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыПечатиЧека, "СистемаНалогообложения, ПризнакАгента, ДанныеАгента, ДанныеПоставщика, Кассир");
	
	ПризнакАгентаСтрокой = Обработки.ПечатьЧека.ПризнакАгентаПоПредметуРасчетаСтрокой(ПризнакАгента);
	
	КассирПредставление = ПредставлениеКассира(Кассир, КассирИНН);
	
	Для каждого ПозицияЧека Из ПараметрыПечатиЧека.ПозицииЧека Цикл
		НоваяСтрока = Объект.ТаблицаТоваров.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ПозицияЧека,,"СтавкаНДС");
		
		НоваяСтрока.ПризнакАгентаСтрокой = 
			Обработки.ПечатьЧека.ПризнакАгентаПоПредметуРасчетаСтрокой(НоваяСтрока.ПризнакАгента);
		
		Если ПозицияЧека.СтавкаНДС = 0 Тогда 
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС0;
		ИначеЕсли ПозицияЧека.СтавкаНДС = 10 Тогда 
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
		ИначеЕсли ПозицияЧека.СтавкаНДС = 18 Тогда 
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		ИначеЕсли ПозицияЧека.СтавкаНДС = 110 Тогда 
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110;
		ИначеЕсли ПозицияЧека.СтавкаНДС = 118 Тогда 
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
		Иначе
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	КонецЦикла;
			
	Для каждого СтрокаОплаты Из ПараметрыПечатиЧека.ТаблицаОплат Цикл
		Если СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Наличные Тогда
			Наличные = СтрокаОплаты.Сумма;
		ИначеЕсли СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Электронно Тогда 
			Электронно = СтрокаОплаты.Сумма;
		ИначеЕсли СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Предоплата Тогда 
			Предоплата = СтрокаОплаты.Сумма;
		ИначеЕсли СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Постоплата Тогда 
			Кредит = СтрокаОплаты.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ВсегоПоЧеку = Объект.ТаблицаТоваров.Итог("Сумма");
	
	ЭтоВерсияФФД11  = НЕ ОбщегоНазначенияКлиентСервер.СравнитьВерсии("1.1.0.0", Параметры.ВерсияФормата) > 0;
	ЭтоВерсияФФД105 = НЕ ОбщегоНазначенияКлиентСервер.СравнитьВерсии("1.0.5.0", Параметры.ВерсияФормата) > 0;
	
	Элементы.Наличные.Видимость = (Наличные > 0);
	Элементы.Электронно.Видимость = (Электронно > 0);
	
	УстановитьУсловноеОформлениеВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПредставлениеЧека();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииЗавершение", ЭтотОбъект);
		
		ТекстПредупреждения = НСтр("ru = 'Вы уверены, что хотите выйти без печати чека?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНет, 60);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СистемаНалогообложенияПриИзменении(Элемент)
	ОбновитьПредставлениеЧека();
КонецПроцедуры

&НаКлиенте
Процедура КассирНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РедактированиеРеквизитовКассира();
КонецПроцедуры

&НаКлиенте
Процедура ПредоплатаПриИзменении(Элемент)
	ЗаполнитьТаблицуОплат();
	
	ОбновитьПредставлениеЧека();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ДобавитьСтрокуОплаты(ТипОплаты, СуммаОплаты)
	Если СуммаОплаты = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОплаты = МенеджерОборудованияКлиентСервер.ПараметрыСтрокиОплаты();
	
	СтрокаОплаты.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатыККТ."+ТипОплаты);
	СтрокаОплаты.Сумма     = СуммаОплаты;
	
	ПараметрыПечатиЧека.ТаблицаОплат.Добавить(СтрокаОплаты);
КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаТоваровПриИзменении(Элемент)
	ПараметрыПечатиЧека.ПозицииЧека = Новый Массив;
	
	Для каждого СтрокаТаблицыТоваров Из Объект.ТаблицаТоваров Цикл
		Если СтрокаТаблицыТоваров.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПозицииЧека = МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		
		ЗаполнитьЗначенияСвойств(СтрокаПозицииЧека, СтрокаТаблицыТоваров,, "СтавкаНДС");
		СтрокаПозицииЧека.СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДСдляККТ(СтрокаТаблицыТоваров.СтавкаНДС, ЭтоВерсияФФД105);
		
		ПараметрыПечатиЧека.ПозицииЧека.Добавить(СтрокаПозицииЧека);
	КонецЦикла;
	
	ВсегоПоЧеку = Объект.ТаблицаТоваров.Итог("Сумма");
	
	ЗаполнитьТаблицуОплат();
	
	ОбновитьПредставлениеЧека();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровЦенаСоСкидкамиПриИзменении(Элемент)
	СтрокаТаблицы = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	СтрокаТаблицы.Цена = СтрокаТаблицы.ЦенаСоСкидками;
	СтрокаТаблицы.СуммаСкидок = 0;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтотОбъект, "ТаблицаТоваров");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровКоличествоПриИзменении(Элемент)
	СтрокаТаблицы = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтотОбъект, "ТаблицаТоваров");
	
	СтрокаТаблицы.ЦенаСоСкидками = СтрокаТаблицы.Цена;
	СтрокаТаблицы.СуммаСкидок = 0;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровСуммаПриИзменении(Элемент)
	СтрокаТаблицы = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСумма(ЭтотОбъект, "ТаблицаТоваров");
	
	СтрокаТаблицы.ЦенаСоСкидками = СтрокаТаблицы.Цена;
	СтрокаТаблицы.СуммаСкидок = 0;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТаблицаТоваровПризнакАгентаСтрокой" Тогда
		ОткрытьФормуРеквизитыАгента(Элемент.ТекущиеДанные);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПризнакАгентаНажатие(Элемент, СтандартнаяОбработка)
	ОткрытьФормуРеквизитыАгента(ЭтаФорма);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НапечататьЧек(Команда)
	
	Оповещение = Новый ОписаниеОповещения("НапечататьЧекЗавершение", ЭтотОбъект);
	
	МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(Оповещение, 
		УникальныйИдентификатор, 
		ПараметрыПечатиЧека, 
		ИдентификаторУстройства,
		,
		,
		);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMS(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Телефон для информирования'"));
	ПараметрыФормы.Вставить("ЗначенияПолей", ПараметрыПечатиЧека.ПокупательНомер);
	ПараметрыФормы.Вставить("ВидКонтактнойИнформации", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонМобильныйКонтактныеЛица"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводНомераТелефонаЗавершение", ЭтотОбъект, Новый Структура);
	
	ОткрытьФорму("Обработка.ВводКонтактнойИнформации.Форма.ВводТелефона", ПараметрыФормы,,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаEmail(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводEmailЗавершение", ЭтотОбъект, Новый Структура);
	
	ПоказатьВводСтроки(ОписаниеОповещения, ПараметрыПечатиЧека.ПокупательEmail, НСтр("ru = 'E-mail для информирования'"));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуОплат()

	Кредит = Макс(ВсегоПоЧеку - Предоплата - Наличные - Электронно, 0);
	
	ПараметрыПечатиЧека.ТаблицаОплат = Новый Массив;
	
	ДобавитьСтрокуОплаты("Предоплата", ВсегоПоЧеку - Кредит - Наличные - Электронно);
	ДобавитьСтрокуОплаты("Наличные",   Наличные);
	ДобавитьСтрокуОплаты("Электронно", Электронно);
	ДобавитьСтрокуОплаты("Постоплата", Кредит);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеКассира(Кассир, КассирИНН)

	Если ПустаяСтрока(Кассир) Тогда
		Возврат "< .. >";
	КонецЕсли; 
	
	ПредставлениеКассира = Новый Массив;
	ПредставлениеКассира.Добавить(Кассир);
	Если ЗначениеЗаполнено(КассирИНН) Тогда
		ПредставлениеКассира.Добавить(СтрШаблон("(ИНН: %1)", КассирИНН));
	КонецЕсли;
	
	Возврат СтрСоединить(ПредставлениеКассира, " ");
КонецФункции 

&НаСервере
Процедура УстановитьУсловноеОформлениеВидимость()
	
	// ТаблицаТоваровПризнакПредметаРасчета, ТаблицаТоваровПризнакСпособаРасчета
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаТоваровПризнакПредметаРасчета");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаТоваровПризнакСпособаРасчета");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЭтоВерсияФФД105", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// ТаблицаТоваровПризнакАгентаСтрокой
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаТоваровПризнакАгентаСтрокой");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЭтоВерсияФФД11", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЧекЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		Модифицированность = Ложь;
		Закрыть(РезультатВыполнения);
	Иначе
		
		ТекстСообщения = НСтр("ru = 'При печати чека произошла ошибка.
			|Чек не напечатан на фискальном устройстве.
			|Дополнительное описание:
			|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ДополнительноеОписание%",
			РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеЧека()
	ЗаполнитьЗначенияСвойств(ПараметрыПечатиЧека, ЭтотОбъект, "Кассир, КассирИНН, СистемаНалогообложения, ПризнакАгента, ДанныеАгента, ДанныеПоставщика");
	
	ТекстЧека = МенеджерОборудованияКлиентСервер.СформироватьТекстНефискальногоЧека(ПараметрыПечатиЧека);
	
	ПечатнаяФорма.УстановитьТекст(ТекстЧека);
КонецПроцедуры 

&НаКлиенте
Процедура ВводНомераТелефонаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если Значение <> Неопределено Тогда
		Если ЭтоКорректныйТелефон(Значение) Тогда
			ПараметрыПечатиЧека.ПокупательНомер = Значение.КонтактнаяИнформация;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неверный формат номера для информирования'"));
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВводEmailЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если ПустаяСтрока(Значение) 
		ИЛИ ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Значение) Тогда
		ПараметрыПечатиЧека.ПокупательEmail = Значение;
	Иначе
		ТекстОшибки = НСтр("ru='Указан некорректный адрес электронной почты.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ОтправитьНаEmail");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоКорректныйТелефон(СтруктураКИ)
	СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(СтруктураКИ.КонтактнаяИнформация, СтруктураКИ.Вид);
	
	НомерТелефонаБезКодаСтраны = ОбщегоНазначенияБПКлиентСервер.ОставитьВСтрокеТолькоЦифры(СтруктураТелефона.КодГорода+СтруктураТелефона.НомерТелефона);

	Возврат (СтруктураТелефона.КодСтраны = "7") И (СтрДлина(НомерТелефонаБезКодаСтраны) = 10);
КонецФункции 

&НаКлиенте
Процедура ОткрытьФормуРеквизитыАгента(Элемент)
	ПараметрыФормы = Новый Структура();
	
	ПараметрыФормы.Вставить("ТолькоПросмотр",         ТолькоПросмотр);
	Если Элемент.ДанныеАгента <> Неопределено Тогда
		ПараметрыФормы.Вставить("ДанныеАгента",           Элемент.ДанныеАгента);
	КонецЕсли;
	Если Элемент.ДанныеПоставщика <> Неопределено Тогда
		ПараметрыФормы.Вставить("ДанныеПоставщика",       Элемент.ДанныеПоставщика);
	КонецЕсли; 
	ПараметрыФормы.Вставить("ПризнакАгента",          Элемент.ПризнакАгента);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПризнакАгентаЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));
	
	ОткрытьФорму("Обработка.ПечатьЧека.Форма.РеквизитыАгента", ПараметрыФормы, ЭтаФорма,,,,ОписаниеОповещения);
КонецПроцедуры 

&НаКлиенте
Процедура ПризнакАгентаЗавершение(Значение, Параметры) Экспорт
	Если ТипЗнч(Значение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Параметры.Элемент, Значение);
	Параметры.Элемент.ПризнакАгентаСтрокой = ПризнакАгентаПоПредметуРасчетаСтрокой(Значение.ПризнакАгента);
	
	Модифицированность = Истина;
	
	ОбновитьПредставлениеЧека();
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПризнакАгентаПоПредметуРасчетаСтрокой(ПризнакАгента)
	Возврат Обработки.ПечатьЧека.ПризнакАгентаПоПредметуРасчетаСтрокой(ПризнакАгента);
КонецФункции 

&НаКлиенте
Процедура РедактированиеРеквизитовКассира()
	ДанныеКассира = Новый Структура("Кассир, КассирИНН");
	ЗаполнитьЗначенияСвойств(ДанныеКассира, ЭтотОбъект);
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеРеквизитовКассираЗавершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.ПечатьЧека.Форма.РеквизитыКассира", ДанныеКассира, ЭтотОбъект, ,,,ОписаниеОповещения);
КонецПроцедуры 

&НаКлиенте
Процедура РедактированиеРеквизитовКассираЗавершение(РеквизитыКассира, Параметры) Экспорт
	Если ТипЗнч(РеквизитыКассира) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыКассира);
	
	КассирПредставление = ПредставлениеКассира(Кассир, КассирИНН);
	
	ОбновитьПредставлениеЧека();
КонецПроцедуры 

&НаКлиенте
Процедура ПриЗакрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Закрыть(Неопределено);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти