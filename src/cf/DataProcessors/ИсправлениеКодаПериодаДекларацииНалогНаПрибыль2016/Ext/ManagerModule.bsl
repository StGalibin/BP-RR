#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция СведенияОбОшибке() Экспорт
	
	Сведения = Новый ТаблицаЗначений;
	Сведения.Колонки.Добавить("Организация",                       Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Сведения.Колонки.Добавить("ПредставлениеОрганизации",          Новый ОписаниеТипов("Строка"));
	Сведения.Колонки.Добавить("НаименованиеОрганизации",           Новый ОписаниеТипов("Строка"));
	Сведения.Колонки.Добавить("ЕстьЭлектронныеКвитанции",          Новый ОписаниеТипов("Булево"));
	Сведения.Колонки.Добавить("ПредыдущаяДекларацияЕжеквартально", Новый ОписаниеТипов("Булево"));
	Сведения.Колонки.Добавить("ДекларацияКод46",                   Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет"));
	Сведения.Колонки.Добавить("Вид",                               Новый ОписаниеТипов("Число"));
	Сведения.Колонки.Добавить("Принята",                           Новый ОписаниеТипов("Булево"));
	Сведения.Колонки.Добавить("ДатаПодписи",                       Новый ОписаниеТипов("Дата"));
	Сведения.Колонки.Добавить("ДатаПредставления",                 Новый ОписаниеТипов("Дата"));
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НастройкиСистемыНалогообложения)
		Или Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НастройкиУчетаНалогаНаПрибыль)
		Или Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ЖурналОтчетовСтатусы)
		Или Не ПравоДоступа("Чтение", Метаданные.Документы.РегламентированныйОтчет) Тогда
		
		Возврат Сведения;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Настройки.Организация КАК Организация
	|ПОМЕСТИТЬ ПлательщикиНалогаНаПрибыль
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(ДАТАВРЕМЯ(2016, 12, 31), Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)) КАК Настройки
	|ГДЕ
	|	Настройки.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Настройки.Организация КАК Организация,
	|	Настройки.ПорядокУплатыАвансов КАК ПорядокУплатыАвансов
	|ПОМЕСТИТЬ Настройка
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
	|			ДАТАВРЕМЯ(2016, 12, 31),
	|			Организация В
	|				(ВЫБРАТЬ
	|					ПлательщикиНалогаНаПрибыль.Организация
	|				ИЗ
	|					ПлательщикиНалогаНаПрибыль)) КАК Настройки
	|ГДЕ
	|	Настройки.ПорядокУплатыАвансов <> ЗНАЧЕНИЕ(Перечисление.ПорядокУплатыАвансовПоНалогуНаПрибыль.ПоФактическойПрибыли)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПлательщикиНалогаНаПрибыль.Организация КАК Организация
	|ПОМЕСТИТЬ ЕстьЖурналОтправки
	|ИЗ
	|	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлательщикиНалогаНаПрибыль КАК ПлательщикиНалогаНаПрибыль
	|		ПО ЖурналОтчетовСтатусы.Организация = ПлательщикиНалогаНаПрибыль.Организация
	|			И (ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности = ЗНАЧЕНИЕ(Перечисление.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегламентированныйОтчет.Организация КАК Организация,
	|	РегламентированныйОтчет.Ссылка КАК Отчет,
	|	РегламентированныйОтчет.Вид КАК Вид,
	|	РегламентированныйОтчет.ДатаОкончания КАК ДатаОкончания,
	|	РегламентированныйОтчет.Периодичность КАК Периодичность,
	|	РегламентированныйОтчет.ДатаОкончания >= ДАТАВРЕМЯ(2016, 10, 1) КАК Годовая,
	|	Настройка.ПорядокУплатыАвансов,
	|	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности <> ЗНАЧЕНИЕ(Перечисление.СостояниеСдачиОтчетности.ДокументооборотНеНачат) КАК ОтчетностьОтправлена,
	|	ЕстьЖурналОтправки.Организация ЕСТЬ NULL
	|			И НЕ РегламентированныйОтчет.ПометкаУдаления
	|		ИЛИ ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности = ЗНАЧЕНИЕ(Перечисление.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота) КАК Принята,
	|	НЕ ЕстьЖурналОтправки.Организация ЕСТЬ NULL КАК ЕстьЭлектронныеКвитанции,
	|	РегламентированныйОтчет.ДатаПодписи
	|ПОМЕСТИТЬ Декларации
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлательщикиНалогаНаПрибыль КАК ПлательщикиНалогаНаПрибыль
	|		ПО РегламентированныйОтчет.Организация = ПлательщикиНалогаНаПрибыль.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
	|		ПО РегламентированныйОтчет.Ссылка = ЖурналОтчетовСтатусы.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Настройка КАК Настройка
	|		ПО РегламентированныйОтчет.Организация = Настройка.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьЖурналОтправки КАК ЕстьЖурналОтправки
	|		ПО РегламентированныйОтчет.Организация = ЕстьЖурналОтправки.Организация
	|ГДЕ
	|	РегламентированныйОтчет.ИсточникОтчета = ""РегламентированныйОтчетПрибыль""
	|	И РегламентированныйОтчет.ДатаОкончания МЕЖДУ ДАТАВРЕМЯ(2016, 9, 30) И ДАТАВРЕМЯ(2016, 12, 31, 23, 59, 59)
	|	И (ЕстьЖурналОтправки.Организация ЕСТЬ NULL
	|				И НЕ РегламентированныйОтчет.ПометкаУдаления
	|			ИЛИ ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности <> ЗНАЧЕНИЕ(Перечисление.СостояниеСдачиОтчетности.ДокументооборотНеНачат))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Декларации.Организация КАК Организация
	|ПОМЕСТИТЬ ОрганизацииПроблема
	|ИЗ
	|	Декларации КАК Декларации
	|ГДЕ
	|	Декларации.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Декларации.Организация КАК Организация,
	|	Декларации.Организация.Наименование КАК ПредставлениеОрганизации,
	|	Декларации.Организация.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	Декларации.Отчет,
	|	Декларации.Вид КАК Вид,
	|	Декларации.ДатаОкончания КАК ОтчетныйПериод,
	|	Декларации.Периодичность КАК Периодичность,
	|	Декларации.Периодичность = Значение(Перечисление.Периодичность.Квартал) КАК Ежеквартально,
	|	Декларации.ПорядокУплатыАвансов КАК ПорядокУплатыАвансов,
	|	Декларации.ОтчетностьОтправлена КАК ОтчетностьОтправлена,
	|	Декларации.Принята КАК Принята,
	|	Декларации.ЕстьЭлектронныеКвитанции КАК ЕстьЭлектронныеКвитанции,
	|	Декларации.ДатаПодписи КАК ДатаПодписи
	|ИЗ
	|	Декларации КАК Декларации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОрганизацииПроблема КАК ОрганизацииПроблема
	|		ПО Декларации.Организация = ОрганизацииПроблема.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПредставлениеОрганизации,
	|	ОтчетныйПериод,
	|	Ежеквартально УБЫВ,
	|	Периодичность,
	|	Вид УБЫВ,
	|	ДатаПодписи УБЫВ
	|ИТОГИ ПО
	|	Организация,
	|	ОтчетныйПериод,
	|	Периодичность";
	
	ВыборкаОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаОрганизации.Следующий() Цикл
		
		ЕстьДекларацияКод33 = Ложь; // 9 месяцев поквартально
		ЕстьДекларацияКод34 = Ложь; // год поквартально
		ЕстьДекларацияКод45 = Ложь; // 11 месяцев
		
		ВыборкаПериоды = ВыборкаОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПериоды.Следующий() Цикл
			
			ВыборкаПериодичность = ВыборкаПериоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПериодичность.Следующий() Цикл
				
				Если ВыборкаПериодичность.ОтчетныйПериод < '2016-12-01' Тогда
					
					Если ВыборкаПериодичность.ОтчетныйПериод < '2016-10-01' 
						И ВыборкаПериодичность.Периодичность = Перечисления.Периодичность.Квартал Тогда
						
						ЕстьДекларацияКод33 = Истина;
						Прервать;// Следующий период
						
					КонецЕсли;
				
					Если ВыборкаПериодичность.ОтчетныйПериод >= '2016-11-01' 
						И ВыборкаПериодичность.Периодичность = Перечисления.Периодичность.Месяц Тогда
						
						ЕстьДекларацияКод45 = Истина;
						Прервать;// Следующий период
						
					КонецЕсли;
				
					Прервать;// Следующий период
					
				КонецЕсли;
				
				// Годовые декларации
				
				Если ВыборкаПериодичность.Периодичность = Перечисления.Периодичность.Квартал Тогда
					
					ЕстьДекларацияКод34 = Истина;
					Продолжить;
					
				КонецЕсли;
				
				// Декларация с кодом 46
				
				Выборка = ВыборкаПериодичность.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.Вид <> 0 Тогда
						
						// Это уточненная декларация.
						// Возможно, с ее помощью пользователь уже исправил ошибку.
						// В этом случае она содержит нулевые показатели.
						// Нас интересует не она, а предыдущая.
						Если СодержитНулевыеПоказатели(Выборка.Отчет) Тогда
							// Это отменяющая декларация.
							// Ищем более раннюю
							Продолжить;
						КонецЕсли;
						
					КонецЕсли;
					
					Запись = Сведения.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					Запись.ПредыдущаяДекларацияЕжеквартально = ЕстьДекларацияКод33;
					Запись.ДекларацияКод46                   = Выборка.Отчет;
					
					Прервать; // Интересует только одна
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если ЕстьДекларацияКод45 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;// По периодам
		
	КонецЦикла;
	
	ЗаполнитьДатыОтправкиРегламентированыхОтчетов(Сведения);
	
	Возврат Сведения;
	
КонецФункции

Процедура ЗаполнитьДатыОтправкиРегламентированыхОтчетов(СведенияОбОшибке)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПолучатьДаты", Истина);
	
	Для каждого СведенияПоОтчету Из СведенияОбОшибке Цикл
		
		Отчет = СведенияПоОтчету.ДекларацияКод46;
		
		ЭтапыОтправкиОтчета = КонтекстЭДОСервер.ТаблицаЭтаповОтправки(Отчет, "ФНС", ДополнительныеПараметры);
			
		Для каждого ЭтапОтправкиОтчета Из ЭтапыОтправкиОтчета Цикл
			
			Если ЭтапОтправкиОтчета.ТекстСтатуса = НСтр("ru = 'Отправлено в ФНС'") Тогда
				СведенияПоОтчету.ДатаПредставления = ЭтапОтправкиОтчета.Дата;
				Прервать;
			КонецЕсли;
		
		КонецЦикла;
	
	КонецЦикла; 
	
КонецПроцедуры

Функция СодержитНулевыеПоказатели(Декларация) Экспорт
	
	Попытка
		Платежи = Отчеты.РегламентированныйОтчетПрибыль.ДанныеРеглОтчета(Декларация);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат ТипЗнч(Платежи) = Тип("ТаблицаЗначений") 
		И Платежи.Колонки.Найти("Сумма") <> Неопределено 
		И Платежи.Итог("Сумма") = 0;
	
КонецФункции

Функция ЧислительноеВТекстеРодительныйПадеж(Количество, Слово1, Слово2, Слово5) Экспорт
	
	Если Количество = 1 Тогда
		Возврат "одной " + Слово1;
	ИначеЕсли Количество = 2 Тогда
		Возврат "двух " + Слово2;
	ИначеЕсли Количество = 3 Тогда
		Возврат "трех " + Слово2;
	ИначеЕсли Количество = 4 Тогда
		Возврат "четырех " + Слово2;
	ИначеЕсли Количество = 5 Тогда
		Возврат "пяти " + Слово5;
	ИначеЕсли Количество = 6 Тогда
		Возврат "шести " + Слово5;
	ИначеЕсли Количество = 7 Тогда
		Возврат "семи " + Слово5;
	ИначеЕсли Количество = 8 Тогда
		Возврат "восьми " + Слово5;
	ИначеЕсли Количество = 9 Тогда
		Возврат "девяти " + Слово5;
	ИначеЕсли Количество = 10 Тогда
		Возврат "десяти " + Слово5;
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(
			Количество,
			Слово1 + "," + Слово2 + "," + Слово5);
	КонецЕсли;
		
КонецФункции

Процедура ЗаписатьПредупреждениеОбОшибкеДекларацииПрибыль2016() Экспорт
	
	СведенияОбОшибке = Обработки.ИсправлениеКодаПериодаДекларацииНалогНаПрибыль2016.СведенияОбОшибке();
	
	Если ЗначениеЗаполнено(СведенияОбОшибке) Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	Пользователи.ИдентификаторПользователяИБ
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Недействителен = ЛОЖЬ
		|	И Пользователи.Служебный = ЛОЖЬ";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			// Нет ни одного реального пользователя, добавим настройки для текущего.
			ХранилищеОбщихНастроек.Сохранить("СообщениеОбИсправленииКодаПериодаДекларации2016", "", Истина);
		Иначе
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.ИдентификаторПользователяИБ) Тогда
					
					Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Выборка.ИдентификаторПользователяИБ);
					Если Пользователь <> Неопределено Тогда
						
						Если ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.РегламентированныйОтчет, Пользователь) Тогда
							ХранилищеОбщихНастроек.Сохранить("СообщениеОбИсправленииКодаПериодаДекларации2016", "", Истина, , Пользователь.Имя);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтменитьРегулярноеОтображениеСообщения() Экспорт
	
	ХранилищеОбщихНастроек.Удалить("СообщениеОбИсправленииКодаПериодаДекларации2016", "" , ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
КонецПроцедуры

#КонецЕсли
