&НаКлиенте
Перем ПараметрыОбработчикаОжидания; 

&НаКлиенте
Перем ФормаВыбораВидаОрганизации;

&НаКлиенте
Перем ФормаВыбораСистемыНалогообложения;

&НаКлиенте
Перем УИДЗамера;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДоступенПростойИнтерфейс = ОбщегоНазначенияБП.ДоступенПростойИнтерфейс();
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено()
		Или ОбщегоНазначенияБП.ИспользуетсяСервисРегистрации() Тогда
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаИНН");
	Иначе
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаПодключениеИнтернетПоддержки");
	КонецЕсли;
	
	ЛогинПарольИПП = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	Если ЛогинПарольИПП <> Неопределено Тогда
		
		ЛогинИнтернетПоддержки		 = ЛогинПарольИПП.Логин;
		ПарольИнтернетПоддержки		 = ЛогинПарольИПП.Пароль;
		
	КонецЕсли;
	
	ИнициализироватьСвойстваОрганизации(ЭтотОбъект);
	
	СистемыНалогообложенияДопускающиеСовмещение.ЗагрузитьЗначения(Обработки.НачалоРаботы.СистемыНалогообложенияДопускающиеСовмещение());
	
	ПоказатьНачалоРаботыПредпринимательВСервисе = ПолучитьФункциональнуюОпцию("ПредпринимательВСервисе")
		И РольДоступна("ПолныеПрава")
		И ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НачалоРаботыПредпринимательВСервисе", "Показывать", Истина);
	
	РазрешенУчетРегулярнойДеятельности = ТарификацияБПВызовСервераПовтИсп.РазрешенУчетРегулярнойДеятельности();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "БыстрыйСтартЗакрытиеПоОповещению");
		УстановитьИнтерфейс();
		ОбновитьИнтерфейс();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИННИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ОтключитьОбработчикОжидания("Подключаемый_УстановитьКомментарийНекорректныйИНН");
	
	Элемент.ОтметкаНезаполненного = Ложь;
	
	ТекстИНН = СокрЛП(Текст);
	
	ВидОрганизации = ?(ЭтоЮрЛицо(ТекстИНН), "ЮридическоеЛицо", "ИндивидуальныйПредприниматель");
	
	ДлинаИНН = СтрДлина(ТекстИНН);
	
	Если ДлинаИНН <> 10 И ДлинаИНН <> 12 Тогда
		Реквизиты = Неопределено;
		ИННКомментарий = "";
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(ТекстИНН, ЭтоЮрЛицо(ТекстИНН));
	
	Если РезультатПроверки.СоответствуетТребованиям Тогда
		
		Реквизиты = ПолучитьРеквизитыПоИНН(ТекстИНН, ЭтоЮрЛицо(ТекстИНН));
		
		Если Реквизиты <> Неопределено Тогда
			
			ИННКомментарий = Новый ФорматированнаяСтрока(СокращенноеНаименование(Реквизиты.НаименованиеСокращенное));
			
		КонецЕсли;
		
	Иначе
		
		Если ДлинаИНН = 12 Тогда
			УстановитьКомментарийНекорректныйИНН();
		Иначе
			ПодключитьОбработчикОжидания("Подключаемый_УстановитьКомментарийНекорректныйИНН", 2, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОрганизацииРасширеннаяПодсказкаНажатие(Элемент)
	
	Если ФормаВыбораВидаОрганизации <> Неопределено И ФормаВыбораВидаОрганизации.Открыта() Тогда
		ФормаВыбораВидаОрганизации.Закрыть();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимПовторногоВыбораВидаОрганизации", Истина);
	ПараметрыФормы.Вставить("ВидОрганизации",                       ВидОрганизации);

	ФормаВыбораВидаОрганизации = ПолучитьФорму("Справочник.Организации.Форма.ФормаВыбораСистемыНалогообложения", 
		ПараметрыФормы,
		ЭтотОбъект,
		"ФормаВыбораСистемыНалогообложения_ВыборВидаОрганизации_БыстрыйСтарт");
		
	ФормаВыбораВидаОрганизации.ЗакрыватьПриЗакрытииВладельца = Истина;
	ФормаВыбораВидаОрганизации.ОписаниеОповещенияОЗакрытии = 
		Новый ОписаниеОповещения("ОбновитьВидОрганизации", ЭтотОбъект);
			
	ФормаВыбораВидаОрганизации.Открыть();
			
КонецПроцедуры

&НаКлиенте
Процедура ГруппаОсновнаяСистемаНалогообложенияРасширеннаяПодсказкаНажатие(Элемент)
	
	Если ФормаВыбораСистемыНалогообложения <> Неопределено И ФормаВыбораСистемыНалогообложения.Открыта() Тогда
		ФормаВыбораСистемыНалогообложения.Закрыть();
	КонецЕсли;
	
	ПризнакПрименяетсяУСНПатент = Ложь;
	ПризнакПлательщикЕНВД = Ложь;
	
	Если Найти(СистемаНалогообложения, "Упрощенная") Тогда
		ВидСистемыНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная");
		Если СистемаНалогообложения = "УпрощеннаяДоходы" Тогда
			ОбъектНалогообложенияУСН = ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.Доходы");
		Иначе
			ОбъектНалогообложенияУСН = ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы");
		КонецЕсли;
	ИначеЕсли СистемаНалогообложения = "Патентная" Тогда
		ВидСистемыНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок");
		ПризнакПрименяетсяУСНПатент = Истина;
	ИначеЕсли СистемаНалогообложения = "ЕНВД" Тогда
		ВидСистемыНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок");
		ПризнакПлательщикЕНВД = Истина;
	Иначе
		ВидСистемыНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Общая");
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимПовторногоВыбораСистемыНалогообложения", Истина);
	ПараметрыФормы.Вставить("ВидОрганизации",                              ВидОрганизации);
	ПараметрыФормы.Вставить("СистемаНалогообложения",                      ВидСистемыНалогообложения);
	ПараметрыФормы.Вставить("ОбъектНалогообложенияУСН",                    ОбъектНалогообложенияУСН);
	ПараметрыФормы.Вставить("ПрименяетсяУСНПатент",                        ПризнакПрименяетсяУСНПатент);
	ПараметрыФормы.Вставить("ПлательщикЕНВД",                              ПризнакПлательщикЕНВД);
	
	ФормаВыбораСистемыНалогообложения = ПолучитьФорму("Справочник.Организации.Форма.ФормаВыбораСистемыНалогообложения", 
		ПараметрыФормы,
		ЭтотОбъект,
		"ФормаВыбораСистемыНалогообложения_ВыборСистемыНалогообложения_БыстрыйСтарт");
		
	ФормаВыбораСистемыНалогообложения.ЗакрыватьПриЗакрытииВладельца = Истина;
	ФормаВыбораСистемыНалогообложения.ОписаниеОповещенияОЗакрытии = 
		Новый ОписаниеОповещения("ОбновитьСистемуНалогообложения", ЭтотОбъект);
	
	ФормаВыбораСистемыНалогообложения.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияПриИзменении(Элемент)
	
	ИнициализироватьСистемыНалогообложенияДопускающиеСовмещение();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПродолжитьСИНН(Команда)
	
	Элементы.ИНН.ОбновитьТекстРедактирования();
	
	Если НЕ ПроверитьЗаполнениеИНН() Тогда
		Возврат;
	КонецЕсли;
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаСистемаНалогообложения");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьБезИНН(Команда)
	
	ИНН = "";
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаВидОрганизации");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВидОрганизации(Команда)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаСистемаНалогообложения");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьСистемаНалогообложения(Команда)
	
	УстановитьДоступностьЭлементовОжиданияСозданияОрганизации(Истина);
	
	ПодключитьОбработчикОжидания("Подключаемый_СоздатьОрганизацию", 0.1, Истина);
	
	ПодключитьОбработчикОжидания("Подключаемый_ИзменитьТекстСообщенияОжидания", 10, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	УстановитьДоступностьЭлементовОжиданияСозданияОрганизации(Ложь);
	
	ИнициализироватьСвойстваОрганизации(ЭтотОбъект);
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаИНН");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключиться(Команда)
	
	Если Не ЗначениеЗаполнено(ЛогинИнтернетПоддержки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите логин'"),, "ЛогинИнтернетПоддержки");
		
		Возврат;
		
	ИначеЕсли Не ЗначениеЗаполнено(ПарольИнтернетПоддержки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите пароль'"),, "ПарольИнтернетПоддержки");
		
		Возврат;
		
	КонецЕсли;
	
	ПодключитьИнтернетПоддержку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПодключитьсяПозжеНажатие(Элемент)
	
	ОбщегоНазначенияБПВызовСервера.УстановитьСтандартныйИнтерфейс();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаВосстановлениеПароляНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
		ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin("/remind_request"),
		НСтр("ru = 'Восстановление пароля'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаРегистрацияНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
		ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin("/registration"),
		НСтр("ru = 'Регистрация'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
		
	Элементы.СистемаНалогообложенияПатент.Видимость = Форма.РазрешенУчетРегулярнойДеятельности
		И Форма.ВидОрганизации <> "ЮридическоеЛицо";
	Элементы.СистемаНалогообложенияЕНВД.Видимость = Форма.РазрешенУчетРегулярнойДеятельности
		И Форма.ВидОрганизации <> "ЮридическоеЛицо";
		
	Элементы.ПлательщикЕНВД.Видимость = Форма.РазрешенУчетРегулярнойДеятельности
		И Форма.СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено;
	Элементы.ПрименяетсяУСНПатент.Видимость = Форма.РазрешенУчетРегулярнойДеятельности
		И Форма.СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено
		И Форма.ВидОрганизации <> "ЮридическоеЛицо";
	Элементы.ТорговыйСбор.Видимость = Форма.РазрешенУчетРегулярнойДеятельности
		И Форма.СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено;
		
	Элементы.ОписаниеСистемаНалогообложения.Видимость = ПустаяСтрока(Форма.ИНН);
	Элементы.ОписаниеВидОрганизации.Видимость = ПустаяСтрока(Форма.ИНН);
	
	Элементы.ВидОрганизации.ОтображениеПодсказки = ?(ПустаяСтрока(Форма.ИНН),
		ОтображениеПодсказки.ОтображатьСнизу,
		ОтображениеПодсказки.Нет);
	Элементы.ГруппаОсновнаяСистемаНалогообложения.ОтображениеПодсказки = ?(ПустаяСтрока(Форма.ИНН),
		ОтображениеПодсказки.ОтображатьСнизу,
		ОтображениеПодсказки.Нет);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПерейтиНаСтраницу(Форма, АктивнаяСтраница)
	
	Форма.АктивнаяСтраница = АктивнаяСтраница;
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[Форма.АктивнаяСтраница];
	
	Если Форма.АктивнаяСтраница = "СтраницаПодключениеИнтернетПоддержки" Тогда
		
		Элементы.Подключиться.КнопкаПоУмолчанию = Истина;
		Элементы.ГруппаОжиданиеПодключения.Видимость = Ложь;
		Форма.ТекущийЭлемент = Элементы.ЛогинИнтернетПоддержки;
		
	ИначеЕсли Форма.АктивнаяСтраница = "СтраницаИНН" Тогда
		
		Элементы.ПродолжитьСИНН.КнопкаПоУмолчанию = Истина;
		Форма.ТекущийЭлемент = Элементы.ИНН;
		
	ИначеЕсли Форма.АктивнаяСтраница = "СтраницаВидОрганизации" Тогда
		
		Элементы.ПродолжитьВидОрганизации.КнопкаПоУмолчанию = Истина;
		Форма.ТекущийЭлемент = Элементы.ВидОрганизации;
		
	ИначеЕсли Форма.АктивнаяСтраница = "СтраницаСистемаНалогообложения" Тогда
		
		Элементы.ПродолжитьСистемаНалогообложения.КнопкаПоУмолчанию = Истина;
		Форма.ТекущийЭлемент = Элементы.СистемаНалогообложенияУСНДоходы;
		Элементы.СистемаНалогообложенияОбщая.СписокВыбора[0].Представление =
			?(Форма.ВидОрганизации = "ИндивидуальныйПредприниматель",
			НСтр("ru='Общая (НДФЛ)'"),
			Нстр("ru='Общая (налог на прибыль)'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидОрганизации(ВыбранныйВидОрганизации, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВыбранныйВидОрганизации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ВидОрганизации.СписокВыбора.НайтиПоЗначению(ВыбранныйВидОрганизации) <> Неопределено Тогда
		ВидОрганизации = ВыбранныйВидОрганизации;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСистемуНалогообложения(ПараметрыУчетнойПолитики, ДополнительныеПараметры = Неопределено) Экспорт
	
	ФормаВыбораСистемыНалогообложения = Неопределено;
	
	Если ПараметрыУчетнойПолитики = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУчетнойПолитики.ПрименяетсяУСНДоходы Тогда
		СистемаНалогообложения = "УпрощеннаяДоходы"
	ИначеЕсли ПараметрыУчетнойПолитики.ПрименяетсяУСНДоходыМинусРасходы Тогда
		СистемаНалогообложения = "УпрощеннаяДоходыМинусРасходы"
	ИначеЕсли ПараметрыУчетнойПолитики.СистемаНалогообложения =
		ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок")
		И ПараметрыУчетнойПолитики.ПлательщикЕНВД Тогда
		СистемаНалогообложения = "ЕНВД"
	ИначеЕсли ПараметрыУчетнойПолитики.СистемаНалогообложения =
		ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок")
		И ПараметрыУчетнойПолитики.ПрименяетсяУСНПатент Тогда
		СистемаНалогообложения = "Патентная"
	Иначе
		СистемаНалогообложения = "Общая"
	КонецЕсли;
	
	ИнициализироватьСистемыНалогообложенияДопускающиеСовмещение();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомментарийНекорректныйИНН()
	
	ИННКомментарий = Новый ФорматированнаяСтрока(НСтр("ru='ИНН некорректный. Опечатка?'"),, Новый Цвет(255,0,0));	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКомментарийНекорректныйИНН()
	
	УстановитьКомментарийНекорректныйИНН();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
			ЗавершитьРаботуПомощника();
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания", 
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
				Истина);
		КонецЕсли;
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ИзменитьТекстСообщенияОжидания()
	
	Элементы.ТекстОжидания.Заголовок = НСтр("ru='Еще чуть-чуть...'");
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеИНН()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(ИНН) Тогда
		
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru='ИНН'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ИНН", Отказ);
		
	Иначе
			
		Если СтрДлина(ИНН) <> 10 И СтрДлина(ИНН) <> 12 Тогда
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru='ИНН'"),,, 
				НСтр("ru='ИНН должен состоять из 10 или 12 цифр.'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ИНН", Отказ);
			
		Иначе
		
			РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(ИНН, ЭтоЮрЛицо(ИНН));
			
			Если НЕ РезультатПроверки.СоответствуетТребованиям Тогда
			
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru='ИНН'"),,, 
					РезультатПроверки.ОписаниеОшибки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ИНН", Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ИНН.ОтметкаНезаполненного = Отказ;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_СоздатьОрганизацию()
	
	Если Реквизиты = Неопределено Тогда
		Реквизиты = ПолучитьРеквизитыПоИНН(ИНН, ЭтоЮрЛицо(ИНН));
	КонецЕсли;
	
	Если Реквизиты <> Неопределено Тогда
		КлючеваяОперация = "БыстрыйСтартСозданиеОрганизацииПоИННРеквизитыПолучены";
	ИначеЕсли ЗначениеЗаполнено(ИНН) Тогда
		КлючеваяОперация = "БыстрыйСтартСозданиеОрганизацииПоИННРеквизитыНеПолучены";
	Иначе
		КлючеваяОперация = "БыстрыйСтартСозданиеОрганизацииБезИНН";
	КонецЕсли;
		
	УИДЗамера = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Ложь, КлючеваяОперация);
	РезультатВыполнения = СоздатьОрганизациюНаСервере();
	Если НЕ РезультатВыполнения.ЗаданиеВыполнено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	Иначе
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
		ЗавершитьРаботуПомощника();
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Функция СоздатьОрганизациюНаСервере()

	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ВидОрганизации",           ВидОрганизации);
	ПараметрыЗадания.Вставить("СистемаНалогообложения",   СистемаНалогообложения);
	ПараметрыЗадания.Вставить("Реквизиты",                Реквизиты);
	ПараметрыЗадания.Вставить("ПлательщикЕНВД",           ПлательщикЕНВД);
	ПараметрыЗадания.Вставить("ПрименяетсяУСНПатент",     ПрименяетсяУСНПатент);
	ПараметрыЗадания.Вставить("ПлательщикТорговогоСбора", ПлательщикТорговогоСбора);
	ПараметрыЗадания.Вставить("ИНН",                      ИНН);
	
	РезультатВыполнения = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"Справочники.Организации.СоздатьОрганизацию",
		ПараметрыЗадания,
		НСтр("ru='Создание организации'"));
		
	ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
		
	Возврат РезультатВыполнения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыПоИНН(ИНН, ЭтоЮрЛицо)
	
	Результат = Неопределено;
	
	Если ЭтоЮрЛицо Тогда
		Результат = ДанныеЕдиныхГосРеестров.РеквизитыЮридическогоЛицаПоИНН(ИНН);
	Иначе
		Результат = ДанныеЕдиныхГосРеестров.РеквизитыПредпринимателяПоИНН(ИНН);
	КонецЕсли;
	
	Результат.Вставить("ЮридическоеФизическоеЛицо", 
		?(ЭтоЮрЛицо, 
			Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, 
			Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо));
			
	Результат.Вставить("ОГРН", Результат.РегистрационныйНомер);

	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция СокращенноеНаименование(Наименование)
	
	Результат = Наименование;
	
	Результат = СтрЗаменить(Результат, "Общество с ограниченной ответственностью", "ООО");
	Результат = СтрЗаменить(Результат,"Акционерное общество", "АО");
	Результат = СтрЗаменить(Результат,"Публичное акционерное общество", "ПАО");
	Результат = СтрЗаменить(Результат, "Закрытое акционерное общество", "ЗАО");
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоЮрЛицо(ИНН)
	
	Возврат СтрДлина(ИНН) = 10;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьЭлементовОжиданияПодключения(Ожидание)
	
	Элементы.ГруппаПодключиться.Доступность         = НЕ Ожидание;
	Элементы.Подключиться.Видимость                 = НЕ Ожидание;
	Элементы.ГиперссылкаПодключитьсяПозже.Видимость = НЕ Ожидание;
	Элементы.ГруппаОжиданиеПодключения.Видимость    = Ожидание;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовОжиданияСозданияОрганизации(Ожидание)
	
	Элементы.ГруппаОсновнаяСистемаНалогообложения.Доступность = НЕ Ожидание;
	Элементы.ГруппаДополнительноеНалогообложение.Доступность = НЕ Ожидание;
	Элементы.ПродолжитьСистемаНалогообложения.Видимость = НЕ Ожидание;
	Элементы.ОтменаСистемаНалогообложения.Видимость = НЕ Ожидание;
	Элементы.ГруппаОжидание.Видимость = Ожидание;
	
КонецПроцедуры

&НаКлиенте
Функция ПодключитьИнтернетПоддержку()
	
	УстановитьДоступностьЭлементовОжиданияПодключения(Истина);
	
	Элементы.ГруппаОшибкаПодключения.Видимость = Ложь;
	
	ДлительнаяОперация = ПодключитсяКИнтернетПоддержкеНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецФункции

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		УстановитьДоступностьЭлементовОжиданияПодключения(Ложь);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		УстановитьДоступностьЭлементовОжиданияПодключения(Ложь);
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	РезультатПодключения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	Если РезультатПодключения = "ПодключениеУспешно" Тогда 
		// Переходим к вводу ИНН
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаИНН");
		
	ИначеЕсли РезультатПодключения = "Сервис1СКонтрагентНеПодключен" Тогда
		// Закрываем окно и начинаем работу
		
		ОбщегоНазначенияБПВызовСервера.УстановитьСтандартныйИнтерфейс();
		ОбновитьИнтерфейс();
		
	Иначе
		// Произошла ошибка
		УстановитьДоступностьЭлементовОжиданияПодключения(Ложь);
		
		Если РезультатПодключения = "ОшибкаАвторизации" Тогда
			
			ТекстОшибкиПодключения = Новый ФорматированнаяСтрока(
				НСтр("ru = 'Неверный логин или пароль. Укажите правильные данные для авторизации.'"));
			
		Иначе
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(НСтр("ru = 'При подключении к сервису возникла ошибка. Возможно, указаны неверные настройки'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'прокси-сервера'"),,,, "e1cib/app/ОбщаяФорма.ПараметрыПроксиСервера"));
			МассивСтрок.Добавить(". " + НСтр("ru = 'Подробности в'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'журнале регистрации'"),,,, "e1cib/app/Обработка.ЖурналРегистрации"));
			МассивСтрок.Добавить(".");
			ТекстОшибкиПодключения = Новый ФорматированнаяСтрока(МассивСтрок);
			
		КонецЕсли;
		
		Элементы.ГруппаОшибкаПодключения.Видимость = Истина;
		Элементы.ТекстОшибкиПодключения.Заголовок = ТекстОшибкиПодключения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодключитсяКИнтернетПоддержкеНаСервере()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение регистрационных данных из веб-сервиса'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ПараметрыЗадания = Новый Структура("ЛогинИПП, ПарольИПП", ЛогинИнтернетПоддержки, ПарольИнтернетПоддержки);
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Обработки.НачалоРаботы.ПодключитьИнтернетПоддержку",
		ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СнятьПризнакНачалаРаботы()
	
	Константы.НачалоРаботы.Установить(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтерфейс()
	
	СистемыНалогообложенияПростойИнтерфейс = Новый Массив;
	СистемыНалогообложенияПростойИнтерфейс.Добавить("УпрощеннаяДоходы");
	СистемыНалогообложенияПростойИнтерфейс.Добавить("УпрощеннаяДоходыМинусРасходы");
	СистемыНалогообложенияПростойИнтерфейс.Добавить("Патентная");
	
	Если НЕ РазрешенУчетРегулярнойДеятельности Тогда
		ОбщегоНазначенияБПВызовСервера.УстановитьПростойИнтерфейс();
		ОткрытьФорму("Обработка.МониторНалоговИОтчетности.Форма");
	Иначе
		Если ДоступенПростойИнтерфейс 
			И СистемыНалогообложенияПростойИнтерфейс.Найти(СистемаНалогообложения) <> Неопределено Тогда
			ОбщегоНазначенияБПВызовСервера.УстановитьПростойИнтерфейс();
			ОткрытьФорму("Обработка.ПанелиПростойИнтерфейс.Форма.ПанельПомощь");
		Иначе
			ОбщегоНазначенияБПВызовСервера.УстановитьСтандартныйИнтерфейс();
			Если ПоказатьНачалоРаботыПредпринимательВСервисе Тогда
				ОткрытьФорму("Обработка.НачалоРаботы.Форма.НачалоРаботыПредпринимательВСервисе");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботуПомощника()
	
	ОповеститьОЗавершенииПомощникаНачалаРаботы();
	СнятьПризнакНачалаРаботы();
	УстановитьИнтерфейс();
	ОбновитьИнтерфейс();
	// Форма может открываться как форма на рабочем столе, так и обычная форма.
	// В том случае, если форма открывается как форма на рабочем столе, то после установки стандратного интефейса и вызова ОбновитьИнтерфейс()
	// форма автоматически закрывается платформой и дополнительно закрывать ее не нужно.
	Если ЭтотОбъект.Открыта() Тогда
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииПомощникаНачалаРаботы()
	Оповестить("ЗавершенаРаботаПомощникаНачалаРаботы", ЭтотОбъект.ИмяФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИнициализироватьСвойстваОрганизации(Форма)
	
	Форма.ИНН = "";
	Форма.ИННКомментарий = "";
	
	Форма.ВидОрганизации = "ИндивидуальныйПредприниматель";
	Форма.СистемаНалогообложения = "УпрощеннаяДоходы";
	
	Форма.ПлательщикЕНВД = Ложь;
	Форма.ПрименяетсяУСНПатент = Ложь;
	Форма.ПлательщикТорговогоСбора = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьСистемыНалогообложенияДопускающиеСовмещение()
	
	Если СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(СистемаНалогообложения) = Неопределено Тогда
		ПлательщикЕНВД = Ложь;
		ПрименяетсяУСНПатент = Ложь;
		ПлательщикТорговогоСбора = Ложь;
	КонецЕсли;
	
КонецПроцедуры;

#КонецОбласти
