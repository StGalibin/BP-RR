////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Объект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Код,
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.НоменклатурнаяГруппа.Ссылка = &НоменклатурнаяГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	СписокГруппы.Загрузить(ТаблицаТоваров);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПараметрыЗаписи.Вставить("ИспользоватьОднуНоменклатурнуюГруппуПередЗаписью", 
		БухгалтерскийУчетВызовСервераПовтИсп.ИспользоватьОднуНоменклатурнуюГруппу());
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СписокНоменклатуры = ЭтаФорма.СписокГруппы.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяНоменклатурнаяГруппа", Объект.Ссылка);
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК НоменклатураСсылка,
	|	ВЫБОР
	|		КОГДА НЕ Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа
	|			ТОГДА &ТекущаяНоменклатурнаяГруппа
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ КАК НоменклатурнаяГруппа
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.Ссылка В (&СписокНоменклатуры)
	|				И НЕ Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа
	|			ИЛИ НЕ Номенклатура.Ссылка В (&СписокНоменклатуры)
	|				И Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа)
	|	И НЕ Номенклатура.ЭтоГруппа";

	НачатьТранзакцию();
	
	НоменклатураСсылка = Справочники.Номенклатура.ПустаяСсылка();
	
	Попытка
		
		ТаблицаТоваров = Запрос.Выполнить().Выбрать();
		Пока ТаблицаТоваров.Следующий() Цикл
			
			НоменклатураСсылка = ТаблицаТоваров.НоменклатураСсылка;
			
			НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
			НоменклатураОбъект.НоменклатурнаяГруппа = ТаблицаТоваров.НоменклатурнаяГруппа;
			НоменклатураОбъект.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ШаблонСообщения = НСтр("ru = 'Не удалось обновить элемент справочника.
                                |%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Установка номенклатурной группы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.Номенклатура,
			НоменклатураСсылка, 
			ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
	ПараметрыЗаписи.Вставить("ИспользоватьОднуНоменклатурнуюГруппуПослеЗаписи", 
		БухгалтерскийУчетВызовСервераПовтИсп.ИспользоватьОднуНоменклатурнуюГруппу());

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Перем ИспользоватьОднуНоменклатурнуюГруппуПередЗаписью, ИспользоватьОднуНоменклатурнуюГруппуПослеЗаписи;
	
	ОбновитьИнтерфейс = Ложь;
	
	Если ПараметрыЗаписи.Свойство("ИспользоватьОднуНоменклатурнуюГруппуПередЗаписью", ИспользоватьОднуНоменклатурнуюГруппуПередЗаписью)
		И ПараметрыЗаписи.Свойство("ИспользоватьОднуНоменклатурнуюГруппуПослеЗаписи", ИспользоватьОднуНоменклатурнуюГруппуПослеЗаписи) Тогда
		
		Если ИспользоватьОднуНоменклатурнуюГруппуПередЗаписью <> ИспользоватьОднуНоменклатурнуюГруппуПослеЗаписи Тогда
			ОбновитьИнтерфейс = Истина;
		КонецЕслИ;
		
	КонецЕсли;
	
	Если ОбновитьИнтерфейс Тогда
		ОбновитьИнтерфейс();
	КонеЦесли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();
	УправлениеВидимостью();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	РаздельныйУчетНДСНаСчете19 = УчетНДСРаздельный.ЕстьУчетнаяПолитикаСРаздельнымУчетомНДСНаСчете19();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью()

	Элементы.СпособУчетаНДС.Видимость = РаздельныйУчетНДСНаСчете19;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать
#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти
