#Область ПрограммныйИнтерфейс

// Заполняет переданную в виде контейнера структуру данных отчета
//
// Параметры:
//  ПараметрыОтчета - Структура
//   * Организация - СправочникСсылка.Организации
//   * КодНалоговогоОргана - СправочникСсылка.РегистрацииВНалоговомОргане
//  Контейнер - Структура
//   * ДопСтроки - Таблица значений - Строки табличной части заявления
//   * ТитульныйЛист - Структура - Данные титульного листа заявления
//
Процедура ЗаполнитьЗаявлениеУтратаПраваПатентаФорма2014_1(ПараметрыОтчета, Контейнер) Экспорт
	
	ТаблицаКонтейнера = Контейнер.ДопСтроки;
	ТаблицаКонтейнера.Очистить();
	
	ДанныеЗаполнения = ДанныеЗаполненияЗаявления(ПараметрыОтчета);
	ДанныеПатентов = ДанныеЗаполнения.ДанныеПатентов;
	
	КоличествоПатентовНаЛисте = КоличествоПатентовНаЛистеЗаявленияОбУтрате();
	
	НомерПатентаПоПорядку = 1;
	НоваяСтрока = ТаблицаКонтейнера.Добавить();
	
	Для Каждого Патент Из ДанныеПатентов Цикл
		
		Если НомерПатентаПоПорядку > КоличествоПатентовНаЛисте Тогда
			НомерПатентаПоПорядку = 1;
			НоваяСтрока = ТаблицаКонтейнера.Добавить();
		КонецЕсли;
		
		НоваяСтрока[СтрШаблон("НОМЕР_ПАТЕНТА_%1", НомерПатентаПоПорядку)] = Патент.НомерПатента;
		НоваяСтрока[СтрШаблон("ДАТА_НАЧАЛА_%1", НомерПатентаПоПорядку)] = Патент.ДатаНачала;
		НоваяСтрока[СтрШаблон("ДАТА_ОКОНЧАНИЕ_%1", НомерПатентаПоПорядку)] = Патент.ДатаОкончания;
		
		НомерПатентаПоПорядку = НомерПатентаПоПорядку + 1;
		
	КонецЦикла;
	
	ТитульныйЛист = Контейнер.Титульный;
	ТитульныйЛист.Вставить("ДАТА_УТРАТЫ_ПРАВА", ДанныеЗаполнения.ДатаУтратыПрава);
	
	Если ДанныеЗаполнения.Свойство("КодПричины") Тогда
		ТитульныйЛист.Вставить("КОД_ПРИЧИНЫ", ДанныеЗаполнения.КодПричины);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("НалоговыйОрган") Тогда
		ПараметрыОтчета.КодНалоговогоОргана = ДанныеЗаполнения.НалоговыйОрган;
		ТитульныйЛист.Вставить("КОД_НО", ДанныеЗаполнения.НалоговыйОрганКод);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет переданную в виде контейнера структуру данных отчета
//
// Параметры:
//  ПараметрыОтчета - Структура
//   * Организация - СправочникСсылка.Организации
//   * КодНалоговогоОргана - СправочникСсылка.РегистрацииВНалоговомОргане
//  Контейнер - Структура
//   * ТитульныйЛист - Структура - Данные титульного листа заявления
//
Процедура ЗаполнитьЗаявлениеПрекращениеПатентаФорма2014_1(ПараметрыОтчета, Контейнер) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ПараметрыЗаполнения.Патент) Тогда
		Возврат;
	КонецЕсли;
	
	ТитульныйЛист = Контейнер.Титульный;
	
	ДанныеПатента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.ПараметрыЗаполнения.Патент,
		"НомерПатента, ДатаВыдачи, ПостановкаНаУчетВНалоговомОргане, НалоговыйОрган, НалоговыйОрган.Код");
		
	ТитульныйЛист.Вставить("НОМЕР_ПАТЕНТА", ДанныеПатента.НомерПатента);
	ТитульныйЛист.Вставить("ДАТА_ВЫДАЧИ",   ДанныеПатента.ДатаВыдачи);
	
	Если ДанныеПатента.ПостановкаНаУчетВНалоговомОргане =
			ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане")
		И ЗначениеЗаполнено(ДанныеПатента.НалоговыйОрган) Тогда
		ПараметрыОтчета.КодНалоговогоОргана = ДанныеПатента.НалоговыйОрган;
		ТитульныйЛист.Вставить("КОД_НО", ДанныеПатента.НалоговыйОрганКод);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет переданную в виде контейнера структуру показателей отчета
// правилами заполнения полей, доступных для автозаполнения
//
// Параметры:
//  ПоказателиОтчета - Структура
//   * Организация - СправочникСсылка.Организации
//   * КодНалоговогоОргана - СправочникСсылка.РегистрацииВНалоговомОргане
//
Процедура ПолучитьСведенияОПоказателяхЗаявленияУтратаПраваФорма2014_1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "КОД_ПРИЧИНЫ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ДАТА_УТРАТЫ_ПРАВА", Истина, Ложь);
	Для Сч = 1 по КоличествоПатентовНаЛистеЗаявленияОбУтрате() Цикл
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, СтрШаблон("НОМЕР_ПАТЕНТА_%1", Сч) , Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, СтрШаблон("ДАТА_НАЧАЛА_%1", Сч), Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, СтрШаблон("ДАТА_ОКОНЧАНИЕ_%1", Сч), Истина, Ложь);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет переданную в виде контейнера структуру показателей отчета
// правилами заполнения полей, доступных для автозаполнения
//
// Параметры:
//  ПоказателиОтчета - Структура
//   * Организация - СправочникСсылка.Организации
//   * КодНалоговогоОргана - СправочникСсылка.РегистрацииВНалоговомОргане
//
Процедура ПолучитьСведенияОПоказателяхЗаявленияПрекращениеПатентаФорма2014_1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "НОМЕР_ПАТЕНТА", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ДАТА_ВЫДАЧИ", Истина, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеЗаявления

Функция ДанныеЗаполненияЗаявления(ПараметрыОтчета)
	
	Перем ПараметрыЗаполнения;
	ДанныеЗаполнения = Новый Структура;
	
	Если ПараметрыОтчета.Свойство("ПараметрыЗаполнения", ПараметрыЗаполнения) И ПараметрыЗаполнения <> Неопределено Тогда
		ДатаУтратыПрава = ПараметрыЗаполнения.ДатаУтратыПрава;
	Иначе
		ДатаУтратыПрава = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	ГраницаДоходов = КонтрольПраваПримененияСпецрежима.ГраницаДоходовОграничивающаяПравоПримененияПСН();
	НачалоПериода  = НачалоГода(ДатаУтратыПрава);
	КонецПериода   = КонецДня(ДатаУтратыПрава);
	СуммаДоходаУСН = УчетУСН.СуммаДохода(ПараметрыОтчета.Организация, НачалоПериода, КонецПериода);
	СуммаДоходаПСН = СуммаДохода(ПараметрыОтчета.Организация, НачалоПериода, КонецПериода);
	
	ГраницаЧисленностиРаботников = КонтрольПраваПримененияСпецрежима.ГраницаСреднесписочнойЧисленностиРаботниковОграничивающаяПравоПримененияПатент();
	СведенияОЧисленностиРаботников = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(ПараметрыОтчета.Организация,
		НачалоПериода, ДатаУтратыПрава);
	
	Если СуммаДоходаУСН + СуммаДоходаПСН > ГраницаДоходов Тогда
		ДанныеЗаполнения.Вставить("КодПричины", 1);
	ИначеЕсли СведенияОЧисленностиРаботников.ЧисленностьРаботников > ГраницаЧисленностиРаботников Тогда 
		ДанныеЗаполнения.Вставить("КодПричины", 2);
	КонецЕсли;
	
	ДанныеПатентов = ДанныеДействующихПатентов(
		ПараметрыОтчета.Организация,
		ДатаУтратыПрава);
		
	// Если среди патентов отсутствуют оформленные по месту жительства,
	// то заявление в любую ИФНС, в которой поставлен на учет по ПСН
	Если ДанныеПатентов.Количество() > 0 Тогда
		ПатентПоМестуРегистрации = ДанныеПатентов.Найти(Перечисления.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации,
														"ПостановкаНаУчетВНалоговомОргане");
		Если ПатентПоМестуРегистрации = Неопределено Тогда
			ДанныеЗаполнения.Вставить("НалоговыйОрган",    ДанныеПатентов[0].НалоговыйОрган);
			ДанныеЗаполнения.Вставить("НалоговыйОрганКод", ДанныеПатентов[0].НалоговыйОрганКод);
		КонецЕсли;
	КонецЕсли;
	
	ДанныеЗаполнения.Вставить("ДанныеПатентов",  ДанныеПатентов);
	ДанныеЗаполнения.Вставить("ДатаУтратыПрава", ДатаУтратыПрава);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Функция КоличествоПатентовНаЛистеЗаявленияОбУтрате()
	
	Возврат 17;
	
КонецФункции

Функция ДанныеДействующихПатентов(Организация, Дата)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Патенты.Ссылка КАК Ссылка,
	|	Патенты.ДатаНачала,
	|	Патенты.ДатаОкончания,
	|	Патенты.НомерПатента,
	|	Патенты.ДатаВыдачи,
	|	Патенты.ПостановкаНаУчетВНалоговомОргане,
	|	Патенты.НалоговыйОрган,
	|	Патенты.НалоговыйОрган.Код КАК НалоговыйОрганКод
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаНачала <= &ДатаОкончания
	|	И Патенты.ДатаОкончания >= &ДатаНачала
	|	И Патенты.Владелец = &Владелец
	|	И НЕ Патенты.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Владелец", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СуммаДохода(Организация, ДатаНачала, ДатаОкончания)
	
	СуммаДохода = 0;
	
	Если Не УчетнаяПолитика.ПрименяетсяУСНПатентЗаПериод(Организация, ДатаНачала, ДатаОкончания) Тогда
		Возврат СуммаДохода;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовПатентОбороты.Графа4Оборот КАК СуммаДохода
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовПатент.Обороты(&ДатаНачала, &ДатаОкончания, , Организация = &Организация) КАК КнигаУчетаДоходовПатентОбороты";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СуммаДохода = Выборка.СуммаДохода;
	КонецЕсли;
	
	Возврат СуммаДохода;
	
КонецФункции

#КонецОбласти

#КонецОбласти