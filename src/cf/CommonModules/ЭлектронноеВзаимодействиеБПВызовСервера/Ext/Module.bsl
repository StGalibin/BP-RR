////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеБПВызовСервера: вспомогательные процедуры и функции БЭД
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ДиректБанк

Функция ВидимостьЭлементовДиректБанк(Организация, ДанныеБанкаСчета) Экспорт
	
	Если ТипЗнч(ДанныеБанкаСчета) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		
		Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеБанкаСчета, "Банк");
		
	Иначе
		
		Банк = ДанныеБанкаСчета;
		
	КонецЕсли;
	
	Результат = "НеПоказывать";
	Если НЕ (ЗначениеЗаполнено(Банк)
		И ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")) Тогда
		
		Возврат Результат;
		
	КонецЕсли;

	Если Организация.Пустая() Тогда
		
		НастройкаОбмена = Неопределено;
		
	Иначе
		
		НастройкаОбмена = ОбменСБанками.НастройкаОбмена(Организация, Банк);
		
	КонецЕсли;
	
	БИК = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Банк, "Код");
	РекомендуетсяПрямойОбменСБанком = Ложь;
	Если Не ЗначениеЗаполнено(НастройкаОбмена) 
		И ОбменСБанками.ВозможенПрямойОбменСБанком(БИК, 1, РекомендуетсяПрямойОбменСБанком) Тогда
		
		Результат = "ПоказатьГиперссылку";
		ВидимостьРекламы = ХранилищеОбщихНастроек.Загрузить("ВидимостьРекламыДиректБанк", БИК);
		ВидимостьРекламы = ?(ВидимостьРекламы = Неопределено, Истина, ВидимостьРекламы);
		Если ВидимостьРекламы И РекомендуетсяПрямойОбменСБанком Тогда
			
			Результат = "ПоказатьБаннер";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура СохранитьНастройкуВидимостиРекламыДиректБанк(Банк, Видимость) Экспорт
	
	БИК = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Банк, "Код");
	ХранилищеОбщихНастроек.Сохранить("ВидимостьРекламыДиректБанк", БИК, Видимость);
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронноеВзаимодействие

Функция ИмеетсяВозможностьЗагрузкиДанныхИзФайла() Экспорт
	
	Если РольДоступна("ПолныеПрава") Или РольДоступна("ДобавлениеИзменениеДанныхБухгалтерии") Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ОбработатьИсключениеПоЭДНаСервере(ВидОперации, ПодробныйТекстОшибки, ТекстСообщения = "", КодСобытия = 2) Экспорт
	
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	ТекстОшибки = НСтр("ru = 'Выполнение операции:'")+ " " + ВидОперации + Символы.ПС + ПодробныйТекстОшибки;
	ЭлектронноеВзаимодействиеБП.ВыполнитьЗаписьСобытияПоЭДВЖурналРегистрации(ТекстОшибки, КодСобытия);
	
КонецПроцедуры

#КонецОбласти

#Область КонвертацияФайлаВФорматФНС

Функция ОбработатьТабличныйДокументСервер(АдресФайла, РасширениеФайла, ИдентификаторФормы) Экспорт

	ВременныйФайл = ПолучитьИмяВременногоФайла(РасширениеФайла);
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(ВременныйФайл);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяВременногоФайла", ВременныйФайл);
	ПараметрыЗадания.Вставить("Расширение", РасширениеФайла);
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(ИдентификаторФормы, "ЭлектронноеВзаимодействиеБП.ПолучитьДанныеВФорматеБЭД", 
		ПараметрыЗадания, НСтр("ru = 'Преобразование табличного документа в формат БЭД'"));			
		
	Возврат Результат; 	 
	
КонецФункции

Функция ЗаданиеВыполнено(ИдентификаторЗадания) Экспорт
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

Функция РазобратьПолученныеДанные(АдресХранилища, ИдентификаторФормы) Экспорт

	ПолученныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
	ДанныеЭД = Новый Структура;
	Если Не ПолученныеДанные.Свойство("ТекстОшибки") Тогда
		
		ДанныеЭД.Вставить("АдресХранилища", ПоместитьВоВременноеХранилище(ПолученныеДанные.ДвоичныеДанные, ИдентификаторФормы));	
		Если ПолученныеДанные.Свойство("НомерСчФ") Тогда
			
			ДанныеЭД.Вставить("НомерСФ", ПолученныеДанные.НомерСчФ);
			ДанныеЭД.Вставить("ДатаСФ", ПолученныеДанные.ДатаСчФ);
			
		КонецЕсли;
		
	Иначе
		
		ДанныеЭД.Вставить("ТекстОшибки", ПолученныеДанные.ТекстОшибки);
		
	КонецЕсли;		
	
	Возврат ДанныеЭД;

КонецФункции // РазобратьПолученныеДанные()

#КонецОбласти

#Область ЗагрузкаЭД

Функция ПолучитьКонтрагентаИДанныеДокумента(АдресаФайловXML, ИдентификаторФормы) Экспорт

	Возврат ЭлектронноеВзаимодействиеБП.ПолучитьКонтрагентаИДанныеДокумента(АдресаФайловXML, ИдентификаторФормы);
		
КонецФункции  

Функция СоздатьДокументИзЭД(СтруктураЭД) Экспорт
	
	Возврат ЭлектронноеВзаимодействиеБП.СоздатьДокументИзЭД(СтруктураЭД);
	
КонецФункции 

#КонецОбласти

#КонецОбласти



