
#Область ПрограммныйИнтерфейс

// Создание контрагента при загрузке документов из сервиса.
//
// Параметры:
//   СтруктураРеквизитов - Структура - реквизиты необходимые для создания контрагента.
//     * РеквизитыКонтрагента - Структура - данные для заполнения контрагента.
//       * ИНН - Строка - ИНН контрагента.
//       * КПП - Строка - КПП контрагента.
//       * Наименование - Строка - Наименование контрагента.
//     * Контрагент - СправочникСсылка.Контрагенты - ссылка созданного контрагента.
//   Отказ - Булево - признак отказа выполнения.
//
Процедура СоздатьКонтрагентаПоРеквизитам(СтруктураРеквизитов, Отказ) Экспорт
	
	РеквизитыКонтрагента = СтруктураРеквизитов.РеквизитыКонтрагента;
	
	КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
	ИННОбъекта = СтруктураРеквизитов.РеквизитыКонтрагента.ИНН;
	КППОбъекта = СтруктураРеквизитов.РеквизитыКонтрагента.КПП;
	Если СтрДлина(ИННОбъекта) = 10 Тогда
		КонтрагентОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Иначе
		КонтрагентОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	КонецЕсли;
	КонтрагентОбъект.ОбособленноеПодразделение = Ложь;
	
	ЭтоЮрЛицо = КонтрагентОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Если ЭтоЮрЛицо Тогда
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыЮридическогоЛицаПоИНН(ИННОбъекта);
	Иначе
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыПредпринимателяПоИНН(ИННОбъекта);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Запись нового элемента справочника Контрагенты'"),
			УровеньЖурналаРегистрации.Ошибка,
			КонтрагентОбъект.Метаданные(),
			КонтрагентОбъект,
			ОписаниеОшибки);
		
		ТекстОшибки = НСтр("ru = 'Ошибка при записи нового элемента справочника Контрагенты
			|Подробности см. в Журнале регистрации.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);

		Отказ = Истина;
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(КонтрагентОбъект, РеквизитыКонтрагента);
	КонтрагентОбъект.НаименованиеПолное = РеквизитыКонтрагента.НаименованиеСокращенное;
	
	КонтактнаяИнформация = Новый ТаблицаЗначений;
	КонтактнаяИнформация.Колонки.Добавить("Приемник");
	КонтактнаяИнформация.Колонки.Добавить("ВидКИ");
	КонтактнаяИнформация.Колонки.Добавить("СтруктураКИ");
	КонтактнаяИнформация.Колонки.Добавить("КлючСтроки");
	
	Если ЭтоЮрЛицо Тогда
		
		Если РеквизитыКонтрагента.ЮридическийАдрес <> Неопределено Тогда
			СтрокаКИ = КонтактнаяИнформация.Добавить();
			СтрокаКИ.Приемник = КонтрагентОбъект;
			СтрокаКИ.ВидКИ = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
			СтрокаКИ.СтруктураКИ = РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация;
			
			СтрокаКИ = КонтактнаяИнформация.Добавить();
			СтрокаКИ.Приемник = КонтрагентОбъект;
			СтрокаКИ.ВидКИ = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
			СтрокаКИ.СтруктураКИ = РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация;
			
			СтрокаКИ = КонтактнаяИнформация.Добавить();
			СтрокаКИ.Приемник = КонтрагентОбъект;
			СтрокаКИ.ВидКИ = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента;
			СтрокаКИ.СтруктураКИ = РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация;
		КонецЕсли;
		
		Если РеквизитыКонтрагента.Телефон <> Неопределено Тогда
			СтрокаКИ = КонтактнаяИнформация.Добавить();
			СтрокаКИ.Приемник = КонтрагентОбъект;
			СтрокаКИ.ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
			СтрокаКИ.СтруктураКИ = РеквизитыКонтрагента.Телефон.КонтактнаяИнформация;
		КонецЕсли;
		
		Если КонтактнаяИнформация.Количество() > 0 Тогда
			УправлениеКонтактнойИнформацией.ЗаполнитьКонтактнуюИнформациюОбъектов(КонтактнаяИнформация);
		КонецЕсли;
		
		Если Не ПустаяСтрока(КППОбъекта) Тогда
			
			КонтрагентОбъект.КПП = КППОбъекта;
			
		КонецЕсли;
		
	Иначе
		
		КонтрагентОбъект.КПП = "";
		СвидетельствоОРегистрации = РеквизитыКонтрагента.СвидетельствоОРегистрации;
		Если СвидетельствоОРегистрации <> Неопределено Тогда
			КонтрагентОбъект.СвидетельствоСерияНомер = "" + СвидетельствоОРегистрации.Серия + " " + СвидетельствоОРегистрации.Номер;
			КонтрагентОбъект.СвидетельствоДатаВыдачи = СвидетельствоОРегистрации.Дата;
		КонецЕсли;
		
	КонецЕсли;
	
	КонтрагентОбъект.Записать();
	
	Если ЭтоЮрЛицо Тогда
		
		Руководитель = РеквизитыКонтрагента.Руководитель;
		Если ТипЗнч(Руководитель) = Тип("Структура") Тогда
			
			Руководитель.Вставить("ОбъектВладелец", КонтрагентОбъект.Ссылка);
			Представление = Руководитель.Представление;
			Руководитель.Вставить("Наименование", Представление);
			КонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
			КонтактноеЛицо.Заполнить(Руководитель);
			КонтактноеЛицо.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураРеквизитов.Вставить("Контрагент", КонтрагентОбъект.Ссылка);
	
КонецПроцедуры

// Возвращает контакты пользователя для регистрации в сервисе.
//
// Параметры:
//   Пользователь - СправочникСсылка.Пользователи - выбранный пользователь.
//   Результат - Структура - информация о пользователе.
//     * НаименованиеРоли - Строка - наименование роли пользователя.
//     * АдресПочты - Строка - адрес электронной почты пользователя.
//
Процедура ПолучитьКонтактыПользователяИБ(Пользователь, Результат) Экспорт
	
КонецПроцедуры

// Проверка соответствия реквизитов в документах.
//
// Параметры:
//   МассивСсылокНаОбъект - Массив - проверяемые ссылки объектов.
//   ТекстСообщения - Строка - текст сообщения в случае ошибки проверки.
//   Отказ - Булево - результат проверки.
//
Процедура ВыполнитьКонтрольРеквизитовДокументов(МассивСсылокНаОбъект, ТекстСообщения, Отказ) Экспорт
	
	ИмяМетаданных = "";
	Для каждого Ссылка Из МассивСсылокНаОбъект Цикл
		Если ИмяМетаданных = "" Тогда
			ИмяМетаданных = Ссылка.Метаданные().Имя;
		ИначеЕсли ИмяМетаданных <> Ссылка.Метаданные().Имя Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Операция невозможна для разных видов документов'");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Реквизиты = "Организация, Контрагент";
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ";
	МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Реквизиты, ",");
	ПоследнийЭлемент = МассивРеквизитов.Получить(МассивРеквизитов.Количество()-1);
	Для каждого Элемент Из МассивРеквизитов Цикл
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.Таб + ИмяМетаданных + "." + СокрЛП(Элемент)
			+ ?(Элемент = ПоследнийЭлемент, "", ",");
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ИЗ " + "Документ." + ИмяМетаданных + " КАК "
		+ ИмяМетаданных	+ " ГДЕ " + ИмяМетаданных + ".Ссылка В(&МассивСсылокНаОбъект)";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивСсылокНаОбъект", МассивСсылокНаОбъект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 1 Тогда
		Отказ = Истина;
		Шаблон = НСтр("ru = 'Операция невозможна. Отличаются реквизиты документов (%1)'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Реквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти