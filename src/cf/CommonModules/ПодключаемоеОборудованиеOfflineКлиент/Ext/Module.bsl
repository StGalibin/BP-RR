#Область ПрограммныйИнтерфейсККМOffline

// Процедура выгружает товары в ККМ Offline.
//
Процедура НачатьВыгрузкуТоваровВККМOffline(ОповещениеПриВыгрузке, МассивУстройств, ЧастичнаяВыгрузка) Экспорт
	
	Если МассивУстройств.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать устройство, для которого требуется выгрузить товары.'"), 10);
		Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Выполняется выгрузка товаров в ККМ Offline...'"));
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ПоддержкаАсинхронногоРежима = Ложь; //В текущей версии асинхронный режим принудительно отключен независимо от его поддержки оборудованием
		ВходныеПараметры  = Неопределено;
		ВыходныеПараметры = Неопределено;
		МенеджерОборудованияКлиент.ВыполнитьКомандуОбработчикаДрайвера("РасширеннаяВыгрузка", ВходныеПараметры, ВыходныеПараметры, ИдентификаторУстройства, Неопределено, ПоддержкаАсинхронногоРежима);
		
		СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьДанныеДляКассы(ИдентификаторУстройства, ЧастичнаяВыгрузка);
		Контекст = Новый Структура("ОповещениеПриВыгрузке, СтруктураДанные, ЧастичнаяВыгрузка", ОповещениеПриВыгрузке, СтруктураДанные, ЧастичнаяВыгрузка);
		
		
		Если НЕ СтруктураДанные = Неопределено Тогда
			КоличествоТоваров = СтруктураДанные.Данные.Количество();
		Иначе
			КоличествоТоваров = 0;
		КонецЕсли;
	
		Если Не ЗначениеЗаполнено(СтруктураДанные) Или КоличествоТоваров = 0 Тогда
			
			Если Не ЗначениеЗаполнено(СтруктураДанные) Тогда
				ОписаниеОшибки = НСтр("ru = 'План обмена не установлен!'");
			ИначеЕсли СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками = 0 Тогда
				ОписаниеОшибки = НСтр("ru = 'Нет данных для выгрузки!'");
			Иначе
				ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные не выгружены. Обнаружено ошибок:%1'"), СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками);
			КонецЕсли;
			РезультатВыполнения = Новый Структура("Результат, ОписаниеОшибки, ИдентификаторУстройства", Ложь, ОписаниеОшибки, ИдентификаторУстройства);
			НачатьВыгрузкуТоваровВККМOfflineЗавершение(РезультатВыполнения, Контекст);
			
		Иначе
			ИдентификаторКлиента = Новый УникальныйИдентификатор;
			ОписаниеОповещения = Новый ОписаниеОповещения("НачатьВыгрузкуТоваровВККМOfflineЗавершение", ЭтотОбъект, Контекст);
			МенеджерОборудованияКлиент.НачатьВыгрузкуДанныеВККМOffline(ОписаниеОповещения, 
				ИдентификаторКлиента, ИдентификаторУстройства, СтруктураДанные.Данные, СтруктураДанные.ЧастичнаяВыгрузка)
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура завершения выгрузки товаров в ККМ Offline.
//
Процедура НачатьВыгрузкуТоваровВККМOfflineЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Устройство:'") + Символы.НПП + РезультатВыполнения.ИдентификаторУстройства + Символы.ПС;
	Если РезультатВыполнения.Результат Тогда
		
		//Выгружаем настройки.
		Если Параметры.ЧастичнаяВыгрузка Тогда
			ПодключаемоеОборудованиеOfflineВызовСервера.ПриВыгрузкеТоваровВУстройство(РезультатВыполнения.ИдентификаторУстройства, Параметры.СтруктураДанные, 
				Параметры.ЧастичнаяВыгрузка, РезультатВыполнения.Результат);
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Товары успешно выгружены!'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			Состояние(НСтр("ru = 'Выполняется выгрузка настроек в ККМ Offline...'"));
			
			СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьНастройкиДляККМОффлайн(РезультатВыполнения.ИдентификаторУстройства);
			Контекст = Новый Структура("ОповещениеПриВыгрузке, СтруктураДанные, ЧастичнаяВыгрузка, РасширеннаяВыгрузка", Параметры.ОповещениеПриВыгрузке, СтруктураДанные, Параметры.ЧастичнаяВыгрузка, Ложь);
			
			ИдентификаторКлиента = Новый УникальныйИдентификатор;
			ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолнаяВыгрузкаВККМOfflineЗавершение", ЭтотОбъект, Контекст);
			МенеджерОборудованияКлиент.НачатьВыгрузкуНастроекВККМOffline(ОповещениеПриЗавершении, ИдентификаторКлиента, РезультатВыполнения.ИдентификаторУстройства, СтруктураДанные);
		КонецЕсли;
		
	Иначе
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Выгрузить товары не удалось:'") + Символы.НПП + РезультатВыполнения.ОписаниеОшибки;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Если Параметры.ОповещениеПриВыгрузке <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриВыгрузке, РезультатВыполнения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолнаяВыгрузкаВККМOfflineЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Устройство:'") + Символы.НПП + РезультатВыполнения.ИдентификаторУстройства + Символы.ПС;
	
	Если РезультатВыполнения.Результат Тогда
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриВыгрузкеТоваровВУстройство(РезультатВыполнения.ИдентификаторУстройства, Параметры.СтруктураДанные, 
			Параметры.ЧастичнаяВыгрузка, РезультатВыполнения.Результат);
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Товары успешно выгружены!'");
	Иначе
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Выгрузить товары не удалось:'") + Символы.НПП + РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	Если Параметры.ОповещениеПриВыгрузке <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриВыгрузке, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Процедура очищает товары в ККМ Offline.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства.
//
Процедура НачатьОчисткуТоваровВККМOffline(ОповещениеПриОчисткеДанные, МассивУстройств) Экспорт
	
	Если МассивУстройств.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать устройство, для которого требуется очистить товары.'"), 10);
		Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Выполняется очистка товаров в ККМ Offline...'"));
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Контекст = Новый Структура("ОповещениеПриОчисткеДанные", ОповещениеПриОчисткеДанные);
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьОчисткуТоваровВККМOfflineЗавершение", ЭтотОбъект, Контекст);
		МенеджерОборудованияКлиент.НачатьОчисткуТоваровВККМOffline(ОписаниеОповещения, ИдентификаторКлиента, ИдентификаторУстройства, Ложь)
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура завершения очистки товаров в ККМ Offline.
//
Процедура НачатьОчисткуТоваровВККМOfflineЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Устройство:'") + Символы.НПП + РезультатВыполнения.ИдентификаторУстройства + Символы.ПС;
	
	Если РезультатВыполнения.Результат Тогда
		Состояние(НСтр("ru = 'Выполняется очистка настроек в ККМ Offline...'"));
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолнаяОчисткаВККМOfflineЗавершение", ЭтотОбъект, Параметры);
		МенеджерОборудованияКлиент.НачатьОчисткуНастроекВККМOffline(ОповещениеПриЗавершении, ИдентификаторКлиента, РезультатВыполнения.ИдентификаторУстройства);
	Иначе
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Очистить товары не удалось:'") + Символы.НПП + РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Если Параметры.ОповещениеПриОчисткеДанные <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриОчисткеДанные, РезультатВыполнения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолнаяОчисткаВККМOfflineЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Устройство:'") + Символы.НПП + РезультатВыполнения.ИдентификаторУстройства + Символы.ПС;
	
	Если РезультатВыполнения.Результат Тогда
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриОчисткеТоваровВУстройстве(РезультатВыполнения.ИдентификаторУстройства, РезультатВыполнения.Результат);
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Полная очистка успешно выполнена!'");
	Иначе
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Выполнить полную очистку не удалось:'") + Символы.НПП + РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	Если Параметры.ОповещениеПриОчисткеДанные <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриОчисткеДанные, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Процедура загружает отчет о продажах из ККМ Offline.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства.
//
Процедура НачатьЗагрузкуОтчетовОРозничныхПродажах(ОповещениеПриЗагрузке, МассивУстройств) Экспорт
	
	Если МассивУстройств.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать устройство, из которого требуется загрузить отчет о розничных продажах.'"), 10);
		Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Выполняется загрузка отчетов о розничных продажах из ККМ Offline...'"));
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		РасширеннаяЗагрузка = Ложь;
		ПоддержкаАсинхронногоРежима = Ложь;
		ВходныеПараметры  = Неопределено;
		ВыходныеПараметры = Неопределено;
		РасширеннаяЗагрузка = МенеджерОборудованияКлиент.ВыполнитьКомандуОбработчикаДрайвера("РасширеннаяЗагрузка", ВходныеПараметры, ВыходныеПараметры, ИдентификаторУстройства, Неопределено, ПоддержкаАсинхронногоРежима);
		
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Контекст = Новый Структура("ОповещениеПриЗагрузке, ИдентификаторКлиента", ОповещениеПриЗагрузке, ИдентификаторКлиента);
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьЗагрузкуОтчетовОРозничныхПродажахЗавершение", ЭтотОбъект, Контекст);
		МенеджерОборудованияКлиент.НачатьЗагрузкуОтчетаОРозничныхПродажахИзККМOffline(ОписаниеОповещения, ИдентификаторКлиента, ИдентификаторУстройства, Ложь, РасширеннаяЗагрузка)
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура завершения загрузки отчета о продажах из ККМ Offline.
//
Процедура НачатьЗагрузкуОтчетовОРозничныхПродажахЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Устройство:'") + Символы.НПП + РезультатВыполнения.ИдентификаторУстройства + Символы.ПС;
	
	Если РезультатВыполнения.Результат Тогда
		
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Отчет о розничных продажах загружен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		МассивОтчетов = ПодключаемоеОборудованиеOfflineВызовСервера.ПриЗагрузкеОтчетаОРозничныхПродажах(РезультатВыполнения.ИдентификаторУстройства, РезультатВыполнения.ТаблицаТоваров, РезультатВыполнения.РасширеннаяЗагрузка);
		
		Если НЕ МассивОтчетов.Количество() = 0 Тогда
			МенеджерОборудованияКлиент.НачатьВыставитьФлагОтчетЗагруженККМOffline(Параметры.ИдентификаторКлиента, РезультатВыполнения.ИдентификаторУстройства, Ложь);
			
			Для Каждого Отчет ИЗ МассивОтчетов Цикл
				
				Если ТипЗнч(Отчет) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
					ОткрытьФорму("Документ.ОтчетОРозничныхПродажах.ФормаОбъекта", Новый Структура("Ключ, ПровестиПриОткрытии", Отчет, Истина));
				ИначеЕсли ТипЗнч(Отчет) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
					ОткрытьФорму("Документ.ВозвратТоваровОтПокупателя.ФормаОбъекта", Новый Структура("Ключ, ПровестиПриОткрытии", Отчет, Истина));
				ИначеЕсли ТипЗнч(Отчет) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
					ОткрытьФорму("Документ.РасходныйКассовыйОрдер.ФормаОбъекта", Новый Структура("Ключ, ПровестиПриОткрытии", Отчет, Истина));
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Отчет о розничных продажах загрузить не удалось:'") + Символы.НПП + РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Если Параметры.ОповещениеПриЗагрузке <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриЗагрузке, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выгружает настройки в ККМ Offline.
//
Процедура НачатьВыгрузкуНастроекВККМOffline(ОповещениеПриВыгрузке, МассивУстройств) Экспорт
	
	Если МассивУстройств.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать устройство, для которого требуется выгрузить настройки.'"), 10);
		Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Выполняется выгрузка настроек в ККМ Offline...'"));
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьНастройкиДляККМОффлайн(ИдентификаторУстройства);
		Контекст = Новый Структура("ОповещениеПриВыгрузке, СтруктураДанные", ОповещениеПриВыгрузке, СтруктураДанные);
		
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьВыгрузкуНастроекВККМOfflineЗавершение", ЭтотОбъект, Контекст);
		МенеджерОборудованияКлиент.НачатьВыгрузкуНастроекВККМOffline(ОписаниеОповещения, ИдентификаторКлиента, ИдентификаторУстройства, СтруктураДанные);
		
	КонецЦикла;
	
КонецПроцедуры

// Завершение процедуры выгрузки настройки в ККМ Offline.
//
Процедура НачатьВыгрузкуНастроекВККМOfflineЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ПодключаемоеОборудованиеOfflineВызовСервера.ПриОчисткеТоваровВУстройстве(РезультатВыполнения.ИдентификаторУстройства, РезультатВыполнения.Результат); 
	
	ТекстСообщения = НСтр("ru = 'Устройство:'") + Символы.НПП + РезультатВыполнения.ИдентификаторУстройства + Символы.ПС;
	Если РезультатВыполнения.Результат Тогда
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Настройки успешно выгружены!'");
	Иначе
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Выгрузить Настройки не удалось:'") + Символы.НПП + РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	Если Параметры.ОповещениеПриВыгрузке <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриВыгрузке, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
