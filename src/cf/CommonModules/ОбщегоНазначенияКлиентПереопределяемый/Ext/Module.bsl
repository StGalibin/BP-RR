////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// В этом модуле содержится реализация обработчиков модуля приложения. 
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняется перед интерактивным началом работы пользователя с областью данных или в локальном режиме.
//
// Соответствует обработчику ПередНачаломРаботыСистемы.
//
// Параметры:
//  Параметры - Структура - структура со свойствами:
//              Отказ                  - Булево - Возвращаемое значение. Если установить Истина,
//                                       то работа программы будет прекращена.
//              Перезапустить          - Булево - Возвращаемое значение. Если установить Истина и параметр.
//                                       Отказ тоже установлен в Истина, то выполняется перезапуск программы.
//              ДополнительныеПараметрыКоманднойСтроки - Строка - Возвращаемое значение. Имеет смысл
//                                       когда Отказ и Перезапустить установлены Истина.
//              ИнтерактивнаяОбработка - ОписаниеОповещения - Возвращаемое значение. Для открытия окна,
//                                       блокирующего вход в программу, следует присвоить в этот параметр
//                                       описание обработчика оповещения, который открывает окно.
//                                       См. пример ниже.
//              ОбработкаПродолжения   - ОписаниеОповещения - если открывается окно, блокирующее вход
//                                       в программу, то в обработке закрытия этого окна необходимо
//                                       выполнить оповещение ОбработкаПродолжения.
//                                       См. пример ниже.
//
// Пример открытия окна, блокирующего вход в программу:
//
//		Если ОткрытьОкноПриЗапуске Тогда
//			Параметры.ИнтерактивнаяОбработка = Новый ОписаниеОповещения("ОткрытьОкно", ЭтотОбъект);
//		КонецЕсли;
//
//	Процедура ОткрытьОкно(Параметры, ДополнительныеПараметры) Экспорт
//		// Показываем окно, по закрытию которого вызывается обработчик оповещения ОткрытьОкноЗавершение.
//		Оповещение = Новый ОписаниеОповещения("ОткрытьОкноЗавершение", ЭтотОбъект, Параметры);
//		Форма = ОткрытьФорму(... ,,, ... Оповещение);
//		Если Не Форма.Открыта() Тогда // Если ПриСозданииНаСервере Отказ установлен Истина.
//			ВыполнитьОбработкуОповещения(Параметры.ОбработкаПродолжения);
//		КонецЕсли;
//	КонецПроцедуры
//
//	Процедура ОткрытьОкноЗавершение(Результат, Параметры) Экспорт
//		...
//		ВыполнитьОбработкуОповещения(Параметры.ОбработкаПродолжения);
//		
//	КонецПроцедуры
//
Процедура ПередНачаломРаботыСистемы(Параметры) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ПараметрыРаботыКлиента.ПоказатьПомощникПереходаСРедакции20 Тогда
		Параметры.ИнтерактивнаяОбработка = Новый ОписаниеОповещения("ОткрытьПомощникПереходаСРедакции20", ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Выполняется при интерактивном начале работы пользователя с областью данных или в локальном режиме.
//
// Соответствует обработчику ПриНачалеРаботыСистемы.
//
// Параметры:
//  Параметры - Структура - структура со свойствами:
//            * Отказ                  - Булево - Возвращаемое значение. Если установить Истина,
//                                       то работа программы будет прекращена.
//            * Перезапустить          - Булево - Возвращаемое значение. Если установить Истина и параметр.
//                                       Отказ тоже установлен в Истина, то выполняется перезапуск программы.
//            * ДополнительныеПараметрыКоманднойСтроки - Строка - Возвращаемое значение. Имеет смысл
//                                       когда Отказ и Перезапустить установлены Истина.
//            * ИнтерактивнаяОбработка - ОписаниеОповещения - Возвращаемое значение. Для открытия окна,
//                                       блокирующего вход в программу, следует присвоить в этот параметр
//                                       описание обработчика оповещения, который открывает окно.
//                                       См. пример выше (для обработчика ПередНачаломРаботыСистемы).
//            * ОбработкаПродолжения   - ОписаниеОповещения - если открывается окно, блокирующее вход
//                                       в программу, то в обработке закрытия этого окна необходимо
//                                       выполнить оповещение ОбработкаПродолжения.
//                                       См. пример выше (для обработчика ПередНачаломРаботыСистемы).
//
Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
	Если ПараметрыРаботыКлиента.Свойство("СообщитьОРекомендуемойВерсииПлатформы")
			И ПараметрыРаботыКлиента.СообщитьОРекомендуемойВерсииПлатформы = Истина
			И Параметры.ИнтерактивнаяОбработка = Неопределено Тогда
		Параметры.ИнтерактивнаяОбработка = Новый ОписаниеОповещения("ПоказатьРекомендуемуюВерсиюПлатформы", ЭтотОбъект);
	КонецЕсли;
	
	ЗарплатаКадрыКлиент.ПриНачалеРаботыСистемы(Параметры);
	
КонецПроцедуры

// Обработать параметры запуска программы.
// Реализация функции может быть расширена для обработки новых параметров.
//
// Параметры:
//  ЗначениеПараметраЗапуска - Строка - первое значение параметра запуска, 
//                                      до первого символа ";".
//  ПараметрыЗапуска  - Строка - параметр запуска, переданный в конфигурацию 
//                               с помощью ключа командной строки /C.
//  Отказ             - Булево - Возвращаемое значение. Если установить Истина,
//                               то выполнение процедуры ПриНачалеРаботыСистемы будет прервано.
//
Процедура ПриОбработкеПараметровЗапуска(ЗначениеПараметраЗапуска, ПараметрыЗапуска, Отказ) Экспорт

КонецПроцедуры

// Выполняется при интерактивном начале работы пользователя с областью данных или в локальном режиме.
// Вызывается после завершения действий ПриНачалеРаботыСистемы.
// Используется для подключения обработчиков ожидания, которые не должны вызываться
// в случае интерактивных действий перед и при начале работы системы.
//
// Начальная страница (рабочий стол) в этот момент еще не открыта, поэтому запрещено открывать
// формы напрямую, а следует использовать для этих целей обработчик ожидания.
// Запрещено использовать это событие для интерактивного взаимодействия с пользователем
// (ПоказатьВопрос и аналогичные действия). Для этих целей следует использовать
// событие ПриНачалеРаботыСистемы, который поддерживает продолжение своего выполнения.
//
Процедура ПослеНачалаРаботыСистемы() Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
	Если ПараметрыРаботыКлиента.ДоступноИспользованиеРазделенныхДанных Тогда
		
		ИнтерфейсОбновлен = Ложь;
		
		// В чистой базе устанавливается специальный интерфейс начала работы.
		РежимНачалаРаботы = "";
		Если ПараметрыРаботыКлиента.Свойство("АктивироватьПрограмму")
			ИЛИ ПараметрыРаботыКлиента.ПоказыватьБыстрыйСтарт Тогда
			
			РежимНачалаРаботы = ?(ПараметрыРаботыКлиента.Свойство("АктивироватьПрограмму"), "АктивацияПрограммы", "БыстрыйСтарт");
			ОбщегоНазначенияБПВызовСервера.УстановитьИнтерфейсНачалаРаботы(РежимНачалаРаботы);
			Если НЕ ПараметрыРаботыКлиента.Свойство("СкрытьРабочийСтолПриНачалеРаботыСистемы") Тогда
				ОбновитьИнтерфейс();
				ИнтерфейсОбновлен = Истина;
			КонецЕсли;
			
		// Иначе отображается монитор интернет-поддержки, очень важные новости.
		Иначе
			
			// ИнтернетПоддержкаПользователей
			ИнтернетПоддержкаПользователейКлиент.ПриНачалеРаботыСистемы();
			// Конец ИнтернетПоддержкаПользователей
			
		КонецЕсли;
		
		ДокументооборотСКОКлиент.ПослеЗапускаСистемы();
		
		// 1. Регистрация, путеводители, справочная информация
		
		Если НЕ ЗначениеЗаполнено(РежимНачалаРаботы)
			И ПараметрыРаботыКлиента.Свойство("ОткрытьМониторНалоговИОтчетности") 
			И ПараметрыРаботыКлиента.ОткрытьМониторНалоговИОтчетности Тогда
			
			ОбщегоНазначенияБПКлиент.ОткрытьМониторНалоговИОтчетности();
			
		ИначеЕсли ПараметрыРаботыКлиента.Свойство("ПоказыватьБыстрыйСтартПриРегистрации") 
			И ПараметрыРаботыКлиента.ПоказыватьБыстрыйСтартПриРегистрации Тогда
			
			ОбщегоНазначенияБПКлиент.ОткрытьБыстрыйСтарт();
			
		ИначеЕсли ПараметрыРаботыКлиента.Свойство("ОткрытьПомощникРегистрации") 
			И ПараметрыРаботыКлиента.ОткрытьПомощникРегистрации Тогда
			
			ОбщегоНазначенияБПКлиент.ОткрытьРегистрацияОрганизации(ПараметрыРаботыКлиента.НавигацияНомерШага);
			
			Если ПараметрыРаботыКлиента.ПоказатьНачалоРаботыПредпринимательВСервисе Тогда
				
				// Ссылки на основные разделы программы для предпринимателей в сервисе
				ОбщегоНазначенияБПКлиент.ОткрытьНачалоРаботыПредпринимательВСервисе();
				
			КонецЕсли;
			
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьОписаниеИзмененийСистемы Тогда
			
			// При обновлении версии открываем только описание изменений, 
			// если не выполняется процесс регистрации организации.
			
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьНачалоРаботыПредпринимательВСервисе 
			И НЕ ПараметрыРаботыКлиента.Свойство("АктивироватьПрограмму")
			И НЕ ПараметрыРаботыКлиента.ПоказыватьБыстрыйСтарт Тогда
			
			// Ссылки на основные разделы программы для предпринимателей в сервисе
			ОбщегоНазначенияБПКлиент.ОткрытьНачалоРаботыПредпринимательВСервисе();
			
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьЗнакомствоСРедакциейВ30 Тогда
			
			// Знакомство с редакцией 3.0
			ОбщегоНазначенияБПКлиент.ОткрытьНачинаемРаботатьВ30(ПараметрыРаботыКлиента.ИмяОбработкиЗнакомствоСРедакциейВ30);
			
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьПутеводительПоДемоБазе Тогда
			
			// Путеводитель по демо-базе
			ОбщегоНазначенияБПКлиент.ОткрытьПутеводительПоДемоБазеПриЗапуске();
			
		КонецЕсли;
		
		// 2. Окна, которые требуют от пользователя каких-либо действий
		
		Если ПараметрыРаботыКлиента.ПоказатьОписаниеИзмененийСистемы Тогда
			
			// При обновлении версии открываем только описание изменений,
			// если не выполняется процесс регистрации организации.
		
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьСвертку Тогда
			
			// Свертка базы (продолжение работы)
			ОбщегоНазначенияБПКлиент.ОткрытьСверткуБазы();
			
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьПредложитьОбновитьВерсиюПрограммы Тогда
			
			// Информация о необходимости обновить конфигурацию
			ОбщегоНазначенияБПКлиент.ПредупредитьОНеобходимостиОбновленияПрограммы(ПараметрыРаботыКлиента);
			
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьВключитьОсновнойИнтерфейс Тогда
			
			// Предложение включить основной интерфейс
			ОбщегоНазначенияБПКлиент.ПредложитьИспользоватьОсновнойИнтерфейс(
				ПараметрыРаботыКлиента.ВариантПредложенияВключитьОсновнойИнтерфейс);
			
		КонецЕсли;
		
		Если ПараметрыРаботыКлиента.ПоказатьСообщениеОСтарыхРеквизитахНалоговой Тогда
			ОбщегоНазначенияБПКлиент.ПоказатьСообщениеОСтарыхРеквизитахНалоговой();
		ИначеЕсли ПараметрыРаботыКлиента.ПоказатьСообщениеОбИсправленииКодаПериодаДекларации2016 Тогда
			ОбщегоНазначенияБПКлиент.ПоказатьСообщениеОбИсправленииКодаПериодаДекларации2016();
		КонецЕсли;
		
		Если Не ИнтерфейсОбновлен
			И ПараметрыРаботыКлиента.Свойство("ОбновитьИнтерфейс")
			И ПараметрыРаботыКлиента.ОбновитьИнтерфейс Тогда
			ОбновитьИнтерфейс();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняется перед интерактивном завершении работы пользователя с областью данных или в локальном режиме.
// Соответствует обработчику ПередЗавершениемРаботыСистемы.
// Доопределяет список предупреждений пользователю перед завершением работы системы.
//
// Параметры:
//  Отказ - Булево - Признак отказа от выхода из программы. Если в теле процедуры-обработчика установить
//                   данному параметру значение Истина, то работа с программой не будет завершена.
//  Предупреждения - Массив - в массив можно добавить элементы типа Структура,
//                            свойства которой см. в СтандартныеПодсистемыКлиент.ПредупреждениеПриЗавершенииРаботы.
//
//
Процедура ПередЗавершениемРаботыСистемы(Отказ, Предупреждения) Экспорт
	
КонецПроцедуры

// Переопределяет заголовок приложения.
//
// Параметры:
//  ЗаголовокПриложения - Строка - текст заголовка приложения;
//  ПриЗапуске - Булево - Истина, если вызывается при начале работы программы.
Процедура ПриУстановкеЗаголовкаКлиентскогоПриложения(ЗаголовокПриложения, ПриЗапуске) Экспорт
	
	ПараметрыКлиента = ?(ПриЗапуске, СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске(),
		СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента());
	
	ПараметрыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
	Если ПараметрыКлиента.ДоступноИспользованиеРазделенныхДанных Тогда
		
		ПредставлениеЗаголовка = ПараметрыКлиента.ЗаголовокПриложения;
		ПредставлениеКонфигурации = ПараметрыКлиента.ПодробнаяИнформация;
		
		Если ПустаяСтрока(СокрЛП(ПредставлениеЗаголовка)) Тогда
			Если ПараметрыКлиента.Свойство("ПредставлениеОбластиДанных") Тогда
				ЗаголовокПриложения = ПараметрыКлиента.ПредставлениеОбластиДанных;
			Иначе
				ЗаголовокПриложения = ПредставлениеКонфигурации;
			КонецЕсли;
		Иначе
			ЗаголовокПриложения = СокрЛП(ПредставлениеЗаголовка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОткрытьПомощникПереходаСРедакции20(Параметры, ДополнительныеПараметры) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПродолжитьВыполнение", ЭтотОбъект, Параметры);
	
	ПараметрыФормы = Новый Структура("", );
	Форма = ОткрытьФорму("Обработка.ПомощникПереходаСРедакции20.Форма", ПараметрыФормы, , , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

Процедура ПоказатьРекомендуемуюВерсиюПлатформы(Параметры, ДополнительныеПараметры) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПродолжитьВыполнение", ЭтотОбъект, Параметры);
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РекомендуемаяВерсияПлатформы", ПараметрыРаботыКлиента.РекомендуемаяВерсияПлатформы);
	ПараметрыФормы.Вставить("ТекстСообщения", ПараметрыРаботыКлиента.ТекстСообщенияОРекомендуемойВерсииПлатформы);
	
	ОткрытьФорму("ОбщаяФорма.РекомендуемаяВерсияПлатформы", ПараметрыФормы, , , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

Процедура ПродолжитьВыполнение(РезультатВопроса, Параметры) Экспорт
	
	ВыполнитьОбработкуОповещения(Параметры.ОбработкаПродолжения);
	
КонецПроцедуры

#КонецОбласти
