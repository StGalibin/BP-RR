////////////////////////////////////////////////////////////////////////////////
// Модуль содержит переопределяемые процедуры и функции.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции механизма расшифровки.

// Процедура выводит форму расшифровки.
//
// Параметры:
//	 ИДОтчета - Строка - идентификатор отчета (совпадает с именем объекта метаданных).
// 	 ИДРедакцииОтчета - Строка - идентификатор редакции формы отчета (совпадает с именем формы объекта метаданных).
//   ИДИменПоказателей - Массив - массив идентификаторов имен показателей, по которым формируется расшифровка.
//   ПараметрыОтчета - Структура - структура параметров отчета, необходимых для формирования расшифровки.
// 
// Пример:
// 	 Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
//	 	 Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
//		 	 ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв1(ИДИменПоказателей, ПараметрыОтчета);
//		 КонецЕсли;
// 	 КонецЕсли;
//
Процедура ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета) Экспорт
	
	РегламентированнаяОтчетностьБПКлиент.ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета);
	
	ЗарплатаКадрыКлиентВнутренний.ОткрытьРасшифровкуРегламентированногоОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета);
	
КонецПроцедуры

// Открывает форму помощника по учету НДС.
//
Процедура ОткрытьФормуПомощникаПоУчетуНДС(ПараметрыОткрытияПомощника) Экспорт
	
	УчетНДСКлиентПереопределяемый.ОткрытьФормуПомощникаПоУчетуНДС(ПараметрыОткрытияПомощника);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции календаря бухгалтера.

// Функция возвращает имя формы, используемой для уплаты налога.
// 
// Возвращаемое значение:
//   Строка - имя формы, используемой для уплаты налога.
//
// Пример:
//  Возврат "Документ.ПлатежноеПоручение.ФормаОбъекта";
//
Функция ИмяФормыДляУплатыНалога() Экспорт
	
	Возврат "Документ.ПлатежноеПоручение.ФормаОбъекта";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции списка задач бухгалтера.

// Процедура открывает форму списка задач бухгалтера.
//
// Параметры:
//   Владелец - Форма - владелец формы.
//   Организация - СправочникСсылка.Организации - ссылка на элемент справочника организаций.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ОткрытьКалендарь(Владелец, Организация, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПерейтиПоНавигационнойСсылке(ЗадачиБухгалтераКлиентСервер.СсылкаНаИТС());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции интерфейса взаимодействия с конфигурациями (библиотеками)
// - потребителями.

// Процедура переопределяет создание формы РСВ-1 из списка регламентированных отчетов.
//
// Параметры:
//   ОписаниеРСВ_1 - Структура - структура с полями:
//     * Организация             - СправочникСсылка.Организации - организация;
//     * ДатаНачалаПериодаОтчета - Дата - дата начала периода отчета;
//     * ДатаКонцаПериодаОтчета  - Дата - дата конца периода отчета;
//     * КорректирующаяФорма     - Булево - признак корректирующей формы.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПриСозданииРСВ_1ИзСпискаРеглОтчетов(ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриСозданииРСВ_1ИзСпискаРеглОтчетов(ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет открытие формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//   Ссылка - ДокументСсылка.РегламентированныйОтчет - ссылка на регламентированный отчет.
//   ОписаниеРСВ_1 - Структура - структура с полями:
//     * Организация             - СправочникСсылка.Организации - организация;
//     * ДатаНачалаПериодаОтчета - Дата - дата начала периода отчета;
//     * ДатаКонцаПериодаОтчета  - Дата - дата конца периода отчета;
//     * КорректирующаяФорма     - Булево - признак корректирующей формы.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПриОткрытииРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриОткрытииРСВ_1ИзСпискаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет поведение при печати формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//   Ссылка - ДокументСсылка.РегламентированныйОтчет - ссылка на регламентированный отчет.
//   ОписаниеРСВ_1 - Структура - структура с полями:
//     * Организация             - СправочникСсылка.Организации - организация;
//     * ДатаНачалаПериодаОтчета - Дата - дата начала периода отчета;
//     * ДатаКонцаПериодаОтчета  - Дата - дата конца периода отчета;
//     * КорректирующаяФорма     - Булево - признак корректирующей формы.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПриПечатиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриПечатиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет поведение при выгрузке формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//   Ссылка - ДокументСсылка.РегламентированныйОтчет - ссылка на регламентированный отчет.
//   ОписаниеРСВ_1 - Структура - структура с полями:
//     * Организация             - СправочникСсылка.Организации - организация;
//     * ДатаНачалаПериодаОтчета - Дата - дата начала периода отчета;
//     * ДатаКонцаПериодаОтчета  - Дата - дата конца периода отчета;
//     * КорректирующаяФорма     - Булево - признак корректирующей формы.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПриВыгрузкеРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриВыгрузкеРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет поведение при проверке выгрузки формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//   Ссылка        - ДокументСсылка.РегламентированныйОтчет - ссылка на регламентированный отчет.
//   ОписаниеРСВ_1 - Структура - структура с полями:
//     * Организация             - СправочникСсылка.Организации - организация;
//     * ДатаНачалаПериодаОтчета - Дата - дата начала периода отчета;
//     * ДатаКонцаПериодаОтчета  - Дата - дата конца периода отчета;
//     * КорректирующаяФорма     - Булево - признак корректирующей формы.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПриПроверкеВыгрузкиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриПроверкеВыгрузкиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура открывает форму с информацией об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ПредупредитьОбИзменениях(ИмяОтчета, ИмяФормы, Форма) Экспорт
	
КонецПроцедуры

// Процедура изменяет признак вывода предупреждения об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  ТребуетсяПредупредитьОбИзменениях - Булево - признак вывода предупреждения об изменениях;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ИзменитьПризнакВыводаПредупрежденияОбИзменениях(ИмяОтчета, ИмяФормы, ТребуетсяПредупредитьОбИзменениях, Форма) Экспорт
	
КонецПроцедуры

// Если требуются какие-то особые действия при открытии уведомления надо выставить СтандартнаяОбработка = Ложь
// В этом случае уведомление не создается, а требуемые действия можно проделать в процедуре ОбработчикСозданияУведомления(...)
//
// Параметры:
//   Организация          - СправочникСсылка.Организации - ссылка на элемент справочника организаций.
//   ВидУведомления       - Перечисление.ВидыУведомленийОСпецрежимахНалогообложения - вид уведомления.
//   СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПередОткрытиемФормыУведомления(Организация, ВидУведомления, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Истина;
	Если ВидУведомления = ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ФормаТС1") Тогда 
		ТорговыйСборКлиент.ПередОткрытиемФормыУведомленияТС(Организация, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

// При переопределенном действии при создании уведомления здесь прописывается что именно надо сделать
//
// Параметры:
//   Форма - Форма - форма 1с-отчетности.
//   Параметр - Структура - "Организация", "ВидУведомления".
//
Процедура ОбработчикСозданияУведомления(Форма, Параметр) Экспорт
	
	РегламентированнаяОтчетностьБПКлиент.ОбработчикСозданияУведомления(Форма, Параметр);
	
КонецПроцедуры

// Процедура уточняет данные для автозаполнения уведомления
//
// Параметры:
//   ИДОтчета             - Строка - имя отчета в дереве объектов метаданных.
//   ПараметрыОтчета      - Структура - структура обязательных параметров.
//   ФормаОтчета          - УправляемаФорма - ссылка на заполняемую форму уведомления.
//   ОписаниеОповещения   - ОписаниеОповещения - процедура для продолжения процедуры автозаполнения.
//   СтандартнаяОбработка - Булево - если Истина то никакой новой информации не добавляется для автозаполнения,
//                                   необходимо продолжить автозаполнение в самой форме.
//
Процедура ПередЗаполнениемОтчета(ИДОтчета, ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения, СтандартнаяОбработка = Неопределено) Экспорт
	
	РегламентированнаяОтчетностьБПКлиент.ПередЗаполнениемОтчета(ИДОтчета, ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет вывод дополнительной информации о регламентированном отчете
//
// Параметры:
//   Ссылка                    - ДокументСсылка.РегламентированныйОтчет - ссылка на регламентированный отчет.
//   ИмяФормыПодробнееОбОтчете - Строка - имя формы, которая будет открыта с параметром "Ссылка" для предоставления дополнительной информации об отчете.
//   СтандартнаяОбработка      - Булево - если Истина - будет открыта форма по имени: "Обработка.ОбщиеОбъектыРеглОтчетности.Форма." + ИмяФормыПодробнееОбОтчете;
//                                        иначе - можно выполнить свой алгоритм обработки ПодробнееОбОчете().
//
Процедура ПодробнееОбОчете(Ссылка, ИмяФормыПодробнееОбОтчете, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Дополняет функционал обработчика "ОбработкаОповещения" общей формы "Регламентированная отчетность",
// здесь можно добавить новую функциональность к существующей обработке оповещения.
//
// Параметры:
//  ИмяСобытия - Строка - Имя события может быть использовано для идентификации сообщений принимающими их формами.
//  Параметр   - Параметр сообщения. Могут быть переданы любые необходимые данные.
//  Источник   - Источник события. Например, в качестве источника может быть указана другая форма.
//  Форма      - УправляемаяФорма - Общая форма "Регламентированная отчетность".
//
// Пример:
//  Если ИмяСобытия = "Получены новые сообщения 1С-Отчетности" И Источник <> Форма Тогда
//      Оповестить("Закрыть форму новых сообщений 1С-Отчетности",, Форма);
//  КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Форма) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции.

// Процедура вызывается в формах отчета "РегламентированныйОтчетРСВ1"
// при нажатии кнопки перехода в специализированное рабочее место подготовки
// отчетности в ПФР.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - ссылка на элемент справочника организаций.
//   ДатаНачалаПериодаОтчета - Дата - дата начала периода отчета.
//   ДатаКонцаПериодаОтчета - Дата - дата конца периода отчета.
//
Процедура ПерейтиВРабочееМестоПФР(Организация, ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета) Экспорт
	
	ЗарплатаКадрыКлиент.ПерейтиВРабочееМестоПодготовкиКвартальнойОтчетностиПФР(Организация, ДатаНачалаПериодаОтчета);
	
КонецПроцедуры

// Процедура выполняет назначаемую команду формы.
//
// Параметры:
//   Форма - Форма - форма, из которой вызвана команда.
//
Процедура ВыполнитьНазначаемуюКомандуНаКлиенте(Форма) Экспорт
	
	РегламентированнаяОтчетностьБПКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(Форма);
	
КонецПроцедуры

// Процедура выполняет назначаемую команду формы "РегламентированнаяОтчетность".
//
// Параметры:
//   Форма   - Форма - форма, из которой вызвана команда.
//   Команда - КомандаФормы - назначенная команда формы.
//
// Пример:
//   Если Команда.Имя = "ОтчетыПоказатьДополнительнуюИнформацию" Тогда
//   	ПоказатьПредупреждение(, "Заполните обработчик команды """ + Команда.Имя + """");
//   КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ВыполнитьНазначаемуюКомандуНаКлиенте(Форма, Команда) Экспорт
	
КонецПроцедуры

// Процедура переопределяет имя формы выбора периода для установки отбора в форме "1С Отчетность".
//
// Параметры:
//  ПолноеИмяФормыВыбораПериода  - Строка - Полный путь к форме выбора периода.
//
// Пример:
//  ПолноеИмяФормыВыбораПериода = "ОбщаяФорма.ВыборПроизвольногоПериода";
//
Процедура ФормаРегламентированнойОтчетности_ИмяФормыВыбораПериода(ПолноеИмяФормыВыбораПериода) Экспорт
	
КонецПроцедуры

// Процедура проверяет, выполнялась ли ранее настройка автозаполнения.
//
// Параметры:
//   ПараметрыОтчета       - Структура - параметры регл. отчета.
//   ВыполняемоеОповещение - ОписаниеОповещения - Описание оповещения, которое будет вызвано после выполнения данной операции.
//                                                В качестве результата описания оповещения должно передаваться булево значение,
//												  от которого зависит будет ли выполнятся дальнейший код в процедуре,
//												  которая вызвала этот метод.
//
Процедура ПроверитьНастройкиЗаполненияОтчета(ПараметрыОтчета, ВыполняемоеОповещение) Экспорт
	
	РегламентированнаяОтчетностьБПКлиент.ПроверитьНастройкиЗаполненияОтчета(ПараметрыОтчета, ВыполняемоеОповещение);
	
КонецПроцедуры	

// Процедура открывает форму настройки автозаполнения.
//
// Параметры:
//   ПараметрыФормы - Структура - параметры настройки автозаполнения формы.
//
Процедура ОткрытьФормуНастройкиАвтозаполнения(ПараметрыФормы) Экспорт
	
	РегламентированнаяОтчетностьБПКлиент.ОткрытьФормуНастройкиАвтозаполнения(ПараметрыФормы);
	
КонецПроцедуры

// Процедура реализует печать объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность.
//
// Параметры:
//	 Ссылка - СправочникСсылка, ДокументСсылка - ссылка на объект, который необходимо напечатать.
//                                        		 Если для данного объекта печать невозможна,
//                                               нужно выдавать соотвествующее предупрежедние.
//	 ИмяМакетаДляПечати - Строка - имя макета для печати, при использовании которого необходимо распечатать объект.
//		                           Если ИмяМакетаДляПечати пустое, то для печати использовать основной макет.
// 	 СтандартнаяОбработка - Булево - если СтандартнаяОбработка = Истина, то будет выполнена печать с помощью подсистемы печати из БСП.
//
Процедура Печать(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка) Экспорт
	
	УчетОбособленныхПодразделенийКлиент.ПечатьРегламентированногоОтчета(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка);
	
	ЗарплатаКадрыКлиент.ПечатьДокументаОтчетности(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура реализует выгрузку объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность.
// Параметры:
//	 Ссылка - СправочникСсылка, ДокументСсылка - ссылка на объект, который необходимо выгрузить.
//                                               Если для данного объекта выгрузка невозможна,
//												 нужно выдавать соответствующее предупреждение.
//
Процедура Выгрузить(Ссылка) Экспорт
	
	УчетОбособленныхПодразделенийКлиент.ВыгрузкаРегламентированногоОтчета(Ссылка);
	
	ЗарплатаКадрыКлиент.ВыгрузитьДокументОтчетности(Ссылка);
	
	УчетНДСКлиент.ВыгрузкаЗаявленияОВвозеТоваров(Ссылка);
	
	УчетНДСКлиент.ВыгрузкаЖурналУчетаСчетовФактур(Ссылка);
	
КонецПроцедуры

// Процедура реализует создание объектов, отображаемых на закладке Уведомления и Отчетность формы Отчетность, не входящие в состав БРО.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - организация, по которой нужно создать объект.
//  Тип - Тип - тип объекта, который необходимо создать.
//  СтандартнаяОбработка - Булево - если СтандартнаяОбработка = Истина, то будет выполнено создание объекта стандартным образом.
//
Процедура СоздатьНовыйОбъект(Организация, Тип, СтандартнаяОбработка) Экспорт
	
	УчетОбособленныхПодразделенийКлиент.СозданиеРегламентированногоОтчета(Организация, Тип, СтандартнаяОбработка);
	
	ЗарплатаКадрыКлиент.СоздатьНовыйДокументОтчетности(Организация, Тип, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура открывает окно выбора обособленных подразделений в случае, когда стандартный механизм 
// по каким-либо причинам не может быть использован.
// Вызывается из форм статистики (ЗП-*, П-4 и некоторых других).
// В качестве callback-процедуры следует использовать РегламентированнаяОтчетностьКлиент.ОбработкаВыбораОбособленногоПодразделения.
//
// Параметры:
//   Форма - Форма - форма отчета откуда открывается выбор подразделения.
//   СтандартнаяОбработка - Булево - если отработано необходимо выставить СтандартнаяОбработка = Ложь.
//
// Пример для ЗУП 3.0 КОРП:
//   Там форма выбора это форма списка с параметром открытия РежимВыбора = Истина
//   СтандартнаяОбработка = Ложь;
//   Отбор = Новый Структура("Владелец, ИмеетНомерТерриториальногоОрганаРосстата", Форма.СтруктураРеквизитовФормы.Организация, Истина);
//   Параметры = Новый Структура("Отбор, РежимВыбора", Отбор, Истина);
//   ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораОбособленногоПодразделения", РегламентированнаяОтчетностьКлиент, Новый Структура("Форма", Форма));
//   ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора",Параметры,Форма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//
Процедура ОбработкаВыбораПоляОбособленныхПодразделений(Форма, СтандартнаяОбработка) Экспорт
	
	ЭтаФормаИмя = Форма.ИмяФормы;
	Если СтрНайти(ЭтаФормаИмя, "ВнешнийОтчет.") > 0 Тогда
		ЭтаФормаИмя = СтрЗаменить(ЭтаФормаИмя, "ВнешнийОтчет.", "");
	ИначеЕсли СтрНайти(ЭтаФормаИмя, "Отчет.") > 0 Тогда
		ЭтаФормаИмя = СтрЗаменить(ЭтаФормаИмя, "Отчет.", "");
	КонецЕсли;
	ИДОтчета = Лев(ЭтаФормаИмя, СтрНайти(ЭтаФормаИмя, ".Форма.") - 1);
	
	Если ИДОтчета <> "РегламентированныйОтчетСтатистикаФормаП1" Тогда
		Возврат;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("Организация", Форма.СтруктураРеквизитовФормы.Организация);
	Параметры = Новый Структура("Отбор, РежимВыбора", Отбор, Истина);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения(
		"ОбработкаВыбораОбособленногоПодразделения",
		РегламентированнаяОтчетностьКлиент,
		Новый Структура("Форма", Форма));
		
	ОткрытьФорму(
		"Справочник.ПодразделенияОрганизаций.Форма.ФормаВыбораПоКодуОКПО",
		Параметры,
		Форма,
		,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Процедура определяет, открывать или нет из формы "1С-Отчетность" файлы, присоединенные к объекту.
//
// Параметры:
//  ПараметрыПроверки - Структура:
//   "Владелец"             - СправочникСсылка, ДокументСсылка - ссылка на объект;
//   "ТекстПредупреждения"  - Строка - если заполнен и СтандартнаяОбработка = Ложь, то будет выведено предупреждение;
//   "СтандартнаяОбработка" - Булево - если Ложь, открытие присоединенных файлов не выполняется.
//
// Пример:
//  Если ТипЗнч(ПараметрыПроверки.Владелец) = Тип("СправочникСсылка.МакетыПенсионныхДел") Тогда
//  	
//  	ПараметрыПроверки.СтандартнаяОбработка = Ложь;
//  	
//  	ПараметрыПроверки.ТекстПредупреждения = НСтр(
//  	"ru='Присоединение файлов к ""Макетам пенсионных дел"" из списка отчетов не предусмотрено'");
//  	
//  КонецЕсли;
//
Процедура ПроверитьВладельцаПриОткрытииПрисоединенныхФайловИзСпискаОтчетов(ПараметрыПроверки) Экспорт
	
КонецПроцедуры

#Область МеханизмТарификации

// Проверяет возможность автоматического заполнения регламентированного отчета по данным ИБ конфигурации.
//
// Параметры:
//  ИмяФормы - Строка - имя формы регламентированного отчета;
//  Отказ - Булево - признак отказа от автозаполнения регл. отчета.
//
// Пример реализации:
//  Если НЕ ТарификацияБПВызовСервераПовтИсп.РазрешенУчетРегулярнойДеятельности() Тогда
//  	ТарификацияБПКлиент.ОповеститьОбОграниченииТарифа(ИмяФормы + ".ЗаполнитьАвто");
//      Отказ = Истина;
//  КонецЕсли;
//
Процедура ПроверитьВозможностьАвтоЗаполненияРеглОтчета(ИмяФормы, Отказ) Экспорт
	
	Если НЕ ТарификацияБПВызовСервераПовтИсп.РазрешенУчетРегулярнойДеятельности() Тогда
		ТарификацияБПКлиент.ОповеститьОбОграниченииТарифа(ИмяФормы + ".ЗаполнитьАвто");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти