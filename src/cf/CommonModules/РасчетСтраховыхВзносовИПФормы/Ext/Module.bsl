#Область ПрограммныйИнтерфейс

// Устанавливает свойства декораций формы. Добавляет элементы, если платежей больше, чем задано декораций в конфигураторе
//
// Параметры:
//   Форма - УправляемаяФорма
//   КоллекцияПлатежей - ДанныеФормыКоллекция - коллекция со свойствами платежей
//     * Ссылка - ДокументСсылка - ссылка на документ
//     * Дата - Дата - дата документа
//     * Номер - Строка - номер документа
//     * Оплачено - Булево - Истина, если платежное поручение подтверждено выпиской
//     * Сумма - Число(15, 2) - Сумма документа
//   ПрефиксИмени - Строка - префикс имени декорации (например, "ДекорацияПлатеж")
//
Процедура ОтобразитьПлатежи(Форма, КоллекцияПлатежей, ПрефиксИмени) Экспорт
	
	Элементы = Форма.Элементы;
	
	КоличествоПредопределенных = КоличествоПредопределенныхЭлементов(Форма, ПрефиксИмени);
	Для Индекс = КоличествоПредопределенных По КоллекцияПлатежей.Количество() - 1 Цикл
		ДобавитьПредставлениеПлатежа(Форма, Индекс, ПрефиксИмени);
	КонецЦикла;
	
	Для Индекс = 0 По КоллекцияПлатежей.Количество() - 1 Цикл
		ЭлементФормы = Элементы[ИмяЭлементаПредставлениеПлатежа(Индекс, ПрефиксИмени)];
		ЭлементФормы.Видимость = Истина;
		ЭлементФормы.Заголовок = ПредставлениеПлатежа(КоллекцияПлатежей[Индекс]);
	КонецЦикла;
	
	Для Индекс = КоллекцияПлатежей.Количество() По КоличествоПредопределенных - 1 Цикл
		ЭлементФормы = Элементы[ИмяЭлементаПредставлениеПлатежа(Индекс, ПрефиксИмени)];
		ЭлементФормы.Видимость = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Добавляет декорацию на форму
//
// Параметры:
//   Форма - УправляемаяФорма
//   Индекс - Число - индекс декорации
//   ПрефиксИмени - Строка - префикс имени декорации (например, "ДекорацияПлатеж")
//
Процедура ДобавитьПредставлениеПлатежа(Форма, Индекс, ПрефиксИмени)
	
	Элементы = Форма.Элементы;
	
	Родитель = Элементы["Группа" + ПрефиксИмени];
	
	Декорация = Элементы.Добавить(ИмяЭлементаПредставлениеПлатежа(Индекс, ПрефиксИмени), Тип("ДекорацияФормы"), Родитель);
	Декорация.Гиперссылка = Истина;
	Декорация.УстановитьДействие("Нажатие", СтрШаблон("Подключаемый_%1Нажатие", ПрефиксИмени));
	Декорация.РастягиватьПоГоризонтали = Истина;
	Декорация.Высота = 1;
	
КонецПроцедуры

// Возвращает представление гиперссылки
//
Функция ПредставлениеПлатежа(СтрокаКоллекцииПлатежей)
	
	СвойстваПлатежа = Новый Структура("Ссылка, Дата, Номер, Сумма, Оплачено");
	ЗаполнитьЗначенияСвойств(СвойстваПлатежа, СтрокаКоллекцииПлатежей);
	
	Если Не ЗначениеЗаполнено(СвойстваПлатежа.Ссылка) Тогда
		Возврат "";
	КонецЕсли;
	
	ТипДокумента = ТипЗнч(СвойстваПлатежа.Ссылка);
	Если ТипДокумента = Тип("ДокументСсылка.ПлатежноеПоручение") Тогда
		СинонимДокумента = НСтр("ru = 'Платежное поручение'");
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		СинонимДокумента = НСтр("ru = 'Списание с расчетного счета'");
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
		СинонимДокумента = НСтр("ru = 'Выдача наличных'");
	Иначе
		СинонимДокумента = СвойстваПлатежа.Ссылка.Метаданные().Синоним
	КонецЕсли;
	
	Если СвойстваПлатежа.Оплачено <> Неопределено Тогда
		Если СвойстваПлатежа.Оплачено Тогда
			Сумма = ?(СвойстваПлатежа.Сумма <> 0, " ", "")
				+ ОбщегоНазначенияБПВызовСервера.ФорматСумм(СвойстваПлатежа.Сумма);
			СтатусДокумента = " " + СтрШаблон(НСтр("ru = '(Оплачено %1)'"), Сумма);
		Иначе
			СтатусДокумента = " " + НСтр("ru = '(Подготовлено)'");
		КонецЕсли;
	Иначе
		СтатусДокумента = "";
	КонецЕсли;
	
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СвойстваПлатежа.Номер, Истина, Ложь);
	
	ДатаДокумента = Формат(СвойстваПлатежа.Дата, "ДЛФ=D");
	
	Представление = СтрШаблон(НСтр("ru = '%1 %2 от %3%4'"),
		СинонимДокумента, НомерДокумента, ДатаДокумента, СтатусДокумента);
	
	Возврат Представление;
	
КонецФункции

// Возвращает имя элемента формы, соответствующего индексу
//
Функция ИмяЭлементаПредставлениеПлатежа(Индекс, ПрефиксИмени)
	
	Возврат СтрШаблон(ПрефиксИмени + "%1", Индекс);
	
КонецФункции

// Возвращает количество декораций для отображения платежей заданных в конфигураторе
//
Функция КоличествоПредопределенныхЭлементов(Форма, ПрефиксИмени)
	
	Элементы = Форма.Элементы;
	
	Количество = 0;
	Пока Истина Цикл
		Если Элементы.Найти(ИмяЭлементаПредставлениеПлатежа(Количество, ПрефиксИмени)) <> Неопределено Тогда
			Количество = Количество + 1;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции

#КонецОбласти