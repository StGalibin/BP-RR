
#Область ПрограммныйИнтерфейс

// Возвращает подпись пользователя, используемую для отправки почтовых сообщений.
//
// Возвращаемое значение:
//  Строка - подпись в формате HTML.
//
Функция ПодписьПисьма() Экспорт
	
	Возврат БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("Подпись");
	
КонецФункции

// Возвращает адреса электронной почты из контактной информации контрагента и его контактных лиц.
// См. также ОтправкаПочтовыхСообщений.АдресаЭлектроннойПочты()
//
Функция АдресаЭлектроннойПочты(Контрагент) Экспорт
	
	Получатели = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Контрагент);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.НаименованиеПолное КАК Представление
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(КонтактныеЛица.ОбъектВладелец.Ссылка КАК Справочник.Контрагенты) КАК Контрагент,
	|	КонтактныеЛица.Фамилия + "" "" + КонтактныеЛица.Имя + "" "" + КонтактныеЛица.Отчество КАК Представление,
	|	КонтактныеЛица.Ссылка КАК КонтактноеЛицо
	|ПОМЕСТИТЬ КонтактныеЛица
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.ОбъектВладелец = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КонтактноеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК Выбран,
	|	КонтрагентыКонтактнаяИнформация.Представление КАК Адрес,
	|	Контрагенты.Контрагент КАК ИсточникКонтактнойИнформации,
	|	Контрагенты.Представление КАК Представление,
	|	Контрагенты.Контрагент КАК КонтактноеЛицо
	|ИЗ
	|	Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ПО Контрагенты.Контрагент = КонтрагентыКонтактнаяИнформация.Ссылка
	|			И (КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКонтрагенты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	КонтактныеЛицаКонтактнаяИнформация.Представление,
	|	КонтактныеЛица.Контрагент,
	|	КонтактныеЛица.Представление,
	|	КонтактныеЛица.КонтактноеЛицо
	|ИЗ
	|	КонтактныеЛица КАК КонтактныеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаКонтактнаяИнформация
	|		ПО КонтактныеЛица.КонтактноеЛицо = КонтактныеЛицаКонтактнаяИнформация.Ссылка
	|			И (КонтактныеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКонтактныеЛица))";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыПолучателя = ОтправкаПочтовыхСообщений.НовыеПараметрыПолучателя();
		ПараметрыПолучателя.ИсточникКонтактнойИнформации = Контрагент;
		Получатели.Добавить(ПараметрыПолучателя);
		Возврат Получатели;
	КонецЕсли;
	
	Контакты = РезультатЗапроса.Выгрузить();
	ОтправкаПочтовыхСообщений.УстановитьПолучателяПоУмолчанию(Контакты);
	Контакты.Колонки.Удалить("КонтактноеЛицо");
	
	Для Каждого Контакт Из Контакты Цикл
		ПараметрыПолучателя = ОтправкаПочтовыхСообщений.НовыеПараметрыПолучателя();
		ЗаполнитьЗначенияСвойств(ПараметрыПолучателя, Контакт);
		// Уберем из представления символы которые не пройдут проверку ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки().
		ПараметрыПолучателя.Представление = СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими(
			"№", ПараметрыПолучателя.Представление, " ");
		Получатели.Добавить(ПараметрыПолучателя);
	КонецЦикла;
	
	Возврат Получатели;
	
КонецФункции

#КонецОбласти
